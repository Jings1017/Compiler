State 0 conflicts: 21 shift/reduce, 1 reduce/reduce
State 4 conflicts: 14 shift/reduce
State 5 conflicts: 14 shift/reduce
State 9 conflicts: 12 shift/reduce
State 10 conflicts: 12 shift/reduce
State 13 conflicts: 3 shift/reduce
State 15 conflicts: 3 shift/reduce
State 17 conflicts: 6 shift/reduce
State 19 conflicts: 12 shift/reduce
State 23 conflicts: 21 shift/reduce, 1 reduce/reduce
State 37 conflicts: 18 shift/reduce
State 38 conflicts: 14 shift/reduce
State 40 conflicts: 14 shift/reduce
State 41 conflicts: 2 shift/reduce
State 42 conflicts: 3 shift/reduce
State 45 conflicts: 1 shift/reduce
State 47 conflicts: 3 shift/reduce
State 48 conflicts: 1 shift/reduce
State 59 conflicts: 18 shift/reduce
State 64 conflicts: 18 shift/reduce
State 68 conflicts: 1 reduce/reduce
State 69 conflicts: 1 reduce/reduce
State 70 conflicts: 1 reduce/reduce
State 71 conflicts: 1 reduce/reduce
State 72 conflicts: 2 shift/reduce
State 77 conflicts: 3 shift/reduce
State 78 conflicts: 1 shift/reduce
State 94 conflicts: 21 shift/reduce, 1 reduce/reduce
State 98 conflicts: 21 shift/reduce, 2 reduce/reduce
State 101 conflicts: 14 shift/reduce, 30 reduce/reduce
State 102 conflicts: 14 shift/reduce, 30 reduce/reduce
State 103 conflicts: 14 shift/reduce, 30 reduce/reduce
State 104 conflicts: 14 shift/reduce, 30 reduce/reduce
State 105 conflicts: 14 shift/reduce, 30 reduce/reduce
State 106 conflicts: 14 shift/reduce, 30 reduce/reduce
State 115 conflicts: 2 shift/reduce
State 116 conflicts: 18 shift/reduce
State 117 conflicts: 18 shift/reduce
State 123 conflicts: 14 shift/reduce
State 139 conflicts: 12 shift/reduce
State 140 conflicts: 12 shift/reduce
State 169 conflicts: 12 shift/reduce
State 173 conflicts: 14 shift/reduce
State 175 conflicts: 30 reduce/reduce
State 177 conflicts: 18 shift/reduce
State 178 conflicts: 30 reduce/reduce
State 179 conflicts: 30 reduce/reduce
State 180 conflicts: 30 reduce/reduce
State 181 conflicts: 30 reduce/reduce
State 182 conflicts: 30 reduce/reduce
State 189 conflicts: 2 shift/reduce
State 190 conflicts: 2 shift/reduce
State 191 conflicts: 2 shift/reduce
State 192 conflicts: 2 shift/reduce
State 193 conflicts: 2 shift/reduce
State 194 conflicts: 2 shift/reduce
State 195 conflicts: 3 shift/reduce
State 196 conflicts: 3 shift/reduce
State 200 conflicts: 18 shift/reduce
State 226 conflicts: 21 shift/reduce, 1 reduce/reduce
State 228 conflicts: 21 shift/reduce, 1 reduce/reduce
State 229 conflicts: 21 shift/reduce, 1 reduce/reduce
State 233 conflicts: 18 shift/reduce
State 246 conflicts: 12 shift/reduce
State 256 conflicts: 12 shift/reduce


Grammar

    0 $accept: Program $end

    1 Program: stmt stmts
    2        | %empty

    3 stmts: stmt stmts
    4      | %empty

    5 stmt: declaration
    6     | print_stmt
    7     | error_stmt
    8     | if_stmt
    9     | for_stmt
   10     | pure_arithmetic
   11     | incdec_stmt
   12     | arithmetic_add_stmt
   13     | expression_stmt
   14     | block
   15     | NEWLINE

   16 declaration: VAR ID INT literal_initial NEWLINE
   17            | VAR ID STRING string_initial
   18            | VAR ID FLOAT literal_initial NEWLINE
   19            | VAR ID BOOL bool_initial NEWLINE
   20            | VAR ID '[' INT_LIT ']' INT NEWLINE
   21            | VAR ID '[' INT_LIT ']' FLOAT NEWLINE

   22 $@1: %empty

   23 declaration: ID '[' INT_LIT $@1 ']' array_initial NEWLINE
   24            | ident assign NEWLINE

   25 array_initial: assign
   26              | %empty

   27 bool_initial: '=' bool
   28             | %empty

   29 literal_initial: '=' literal
   30                | %empty

   31 string_initial: '=' '"' STRING_LIT '"' NEWLINE
   32               | NEWLINE

   33 incdec_stmt: ident INC
   34            | ident DEC

   35 $@2: %empty

   36 print_stmt: PRINTLN $@2 '(' expression ')'

   37 $@3: %empty

   38 print_stmt: PRINT $@3 '(' expression ')'

   39 pure_arithmetic: int_literal '+' int_literal
   40                | int_literal '-' int_literal
   41                | FLOAT_LIT '+' FLOAT_LIT
   42                | FLOAT_LIT '-' FLOAT_LIT
   43                | ID '+' INT_LIT
   44                | invalid_arithmetic

   45 invalid_arithmetic: INT_LIT '+' FLOAT_LIT
   46                   | FLOAT_LIT '+' INT_LIT
   47                   | INT_LIT '-' FLOAT_LIT
   48                   | FLOAT_LIT '-' INT_LIT
   49                   | INT_LIT '*' FLOAT_LIT
   50                   | FLOAT_LIT '*' INT_LIT
   51                   | ID '%' INT_LIT
   52                   | int_literal LAND bool
   53                   | float_literal LAND bool
   54                   | bool LOR expression

   55 $@4: %empty

   56 if_stmt: IF int_literal $@4 block

   57 $@5: %empty

   58 if_stmt: IF float_literal $@5 block

   59 $@6: %empty

   60 if_stmt: IF string_literal $@6 block

   61 $@7: %empty

   62 if_stmt: IF id_term $@7 block
   63        | IF expression block else_stmt

   64 else_stmt: ELSE if_stmt
   65          | ELSE block
   66          | %empty

   67 $@8: %empty

   68 for_stmt: FOR float_literal '{' $@8 stmts '}'

   69 $@9: %empty

   70 for_stmt: FOR int_literal '{' $@9 stmts '}'

   71 $@10: %empty

   72 for_stmt: FOR pure_arithmetic '{' $@10 stmts '}'
   73         | FOR for_expr block

   74 for_expr: ident assign ';' ident comparsion_expression ';' arithmetic_add_stmt
   75         | ident assign ';' ident comparsion_expression ';' incdec_stmt
   76         | expression

   77 assign: ADD_ASSIGN var
   78       | SUB_ASSIGN var
   79       | MUL_ASSIGN var
   80       | QUO_ASSIGN var
   81       | REM_ASSIGN var
   82       | error_assign

   83 error_assign: '=' var
   84             | ADD_ASSIGN ID

   85 error_stmt: literal assign

   86 var: int_literal
   87    | float_literal
   88    | string_literal
   89    | bool
   90    | expression
   91    | ID
   92    | %empty

   93 ident: ID

   94 $@11: %empty

   95 block: '{' $@11 stmts '}'

   96 arithmetic_add_stmt: ID '+' ID
   97                    | ID '-' ID
   98                    | arithmetic_mul_stmt

   99 arithmetic_mul_stmt: ID '*' ID
  100                    | ID '/' ID
  101                    | ID '%' ID

  102 expression_stmt: expression

  103 expression: comparsion_expression expression
  104           | lor_expression expression
  105           | add_expression
  106           | %empty

  107 lor_expression: land_expression
  108               | LOR expression

  109 land_expression: LAND expression

  110 comparsion_expression: expression '>' add_expression
  111                      | expression '<' add_expression
  112                      | expression GEQ add_expression
  113                      | expression LEQ add_expression
  114                      | expression EQL add_expression
  115                      | expression NEQ add_expression
  116                      | expression add_expression

  117 add_expression: add_expression '+' mul_expression
  118               | add_expression '-' mul_expression
  119               | mul_expression

  120 mul_expression: mul_expression '*' operand
  121               | mul_expression '/' operand
  122               | mul_expression '%' operand
  123               | operand

  124 operand: '(' expression ')'
  125        | term

  126 term: literal
  127     | sign_literal
  128     | literal_convert
  129     | string_literal
  130     | bool
  131     | id_term

  132 $@12: %empty

  133 bool: '!' bool $@12 expression
  134     | TRUE
  135     | FALSE

  136 literal: int_literal
  137        | float_literal

  138 int_literal: INT_LIT

  139 float_literal: FLOAT_LIT

  140 sign_literal: SIGN_INT_LIT
  141             | SIGN_FLOAT_LIT

  142 string_literal: '"' STRING_LIT '"'

  143 literal_convert: INT '(' ident ')'
  144                | INT '(' FLOAT_LIT ')'
  145                | FLOAT '(' ident ')'
  146                | FLOAT '(' INT_LIT ')'

  147 $@13: %empty

  148 id_term: ID $@13 '[' expression ']'
  149        | ID


Terminals, with rules where they appear

$end (0) 0
'!' (33) 133
'"' (34) 31 142
'%' (37) 51 101 122
'(' (40) 36 38 124 143 144 145 146
')' (41) 36 38 124 143 144 145 146
'*' (42) 49 50 99 120
'+' (43) 39 41 43 45 46 96 117
'-' (45) 40 42 47 48 97 118
'/' (47) 100 121
';' (59) 74 75
'<' (60) 111
'=' (61) 27 29 31 83
'>' (62) 110
'[' (91) 20 21 23 148
']' (93) 20 21 23 148
'{' (123) 68 70 72 95
'}' (125) 68 70 72 95
error (256)
VAR (258) 16 17 18 19 20 21
INT (259) 16 20 143 144
FLOAT (260) 18 21 145 146
BOOL (261) 19
STRING (262) 17
INC (263) 33
DEC (264) 34
GEQ (265) 112
LEQ (266) 113
EQL (267) 114
NEQ (268) 115
ADD_ASSIGN (269) 77 84
SUB_ASSIGN (270) 78
MUL_ASSIGN (271) 79
QUO_ASSIGN (272) 80
REM_ASSIGN (273) 81
LAND (274) 52 53 109
LOR (275) 54 108
NEWLINE (276) 15 16 18 19 20 21 23 24 31 32
PRINT (277) 38
PRINTLN (278) 36
IF (279) 56 58 60 62 63
ELSE (280) 64 65
FOR (281) 68 70 72 73
TRUE (282) 134
FALSE (283) 135
INT_LIT (284) 20 21 23 43 45 46 47 48 49 50 51 138 146
SIGN_INT_LIT (285) 140
FLOAT_LIT (286) 41 42 45 46 47 48 49 50 139 144
SIGN_FLOAT_LIT (287) 141
STRING_LIT (288) 31 142
ID (289) 16 17 18 19 20 21 23 43 51 84 91 93 96 97 99 100 101 148 149


Nonterminals, with rules where they appear

$accept (52)
    on left: 0
Program (53)
    on left: 1 2, on right: 0
stmts (54)
    on left: 3 4, on right: 1 3 68 70 72 95
stmt (55)
    on left: 5 6 7 8 9 10 11 12 13 14 15, on right: 1 3
declaration (56)
    on left: 16 17 18 19 20 21 23 24, on right: 5
$@1 (57)
    on left: 22, on right: 23
array_initial (58)
    on left: 25 26, on right: 23
bool_initial (59)
    on left: 27 28, on right: 19
literal_initial (60)
    on left: 29 30, on right: 16 18
string_initial (61)
    on left: 31 32, on right: 17
incdec_stmt (62)
    on left: 33 34, on right: 11 75
print_stmt (63)
    on left: 36 38, on right: 6
$@2 (64)
    on left: 35, on right: 36
$@3 (65)
    on left: 37, on right: 38
pure_arithmetic (66)
    on left: 39 40 41 42 43 44, on right: 10 72
invalid_arithmetic (67)
    on left: 45 46 47 48 49 50 51 52 53 54, on right: 44
if_stmt (68)
    on left: 56 58 60 62 63, on right: 8 64
$@4 (69)
    on left: 55, on right: 56
$@5 (70)
    on left: 57, on right: 58
$@6 (71)
    on left: 59, on right: 60
$@7 (72)
    on left: 61, on right: 62
else_stmt (73)
    on left: 64 65 66, on right: 63
for_stmt (74)
    on left: 68 70 72 73, on right: 9
$@8 (75)
    on left: 67, on right: 68
$@9 (76)
    on left: 69, on right: 70
$@10 (77)
    on left: 71, on right: 72
for_expr (78)
    on left: 74 75 76, on right: 73
assign (79)
    on left: 77 78 79 80 81 82, on right: 24 25 74 75 85
error_assign (80)
    on left: 83 84, on right: 82
error_stmt (81)
    on left: 85, on right: 7
var (82)
    on left: 86 87 88 89 90 91 92, on right: 77 78 79 80 81 83
ident (83)
    on left: 93, on right: 24 33 34 74 75 143 145
block (84)
    on left: 95, on right: 14 56 58 60 62 63 65 73
$@11 (85)
    on left: 94, on right: 95
arithmetic_add_stmt (86)
    on left: 96 97 98, on right: 12 74
arithmetic_mul_stmt (87)
    on left: 99 100 101, on right: 98
expression_stmt (88)
    on left: 102, on right: 13
expression (89)
    on left: 103 104 105 106, on right: 36 38 54 63 76 90 102 103 104
    108 109 110 111 112 113 114 115 116 124 133 148
lor_expression (90)
    on left: 107 108, on right: 104
land_expression (91)
    on left: 109, on right: 107
comparsion_expression (92)
    on left: 110 111 112 113 114 115 116, on right: 74 75 103
add_expression (93)
    on left: 117 118 119, on right: 105 110 111 112 113 114 115 116
    117 118
mul_expression (94)
    on left: 120 121 122 123, on right: 117 118 119 120 121 122
operand (95)
    on left: 124 125, on right: 120 121 122 123
term (96)
    on left: 126 127 128 129 130 131, on right: 125
bool (97)
    on left: 133 134 135, on right: 27 52 53 54 89 130 133
$@12 (98)
    on left: 132, on right: 133
literal (99)
    on left: 136 137, on right: 29 85 126
int_literal (100)
    on left: 138, on right: 39 40 52 56 70 86 136
float_literal (101)
    on left: 139, on right: 53 58 68 87 137
sign_literal (102)
    on left: 140 141, on right: 127
string_literal (103)
    on left: 142, on right: 60 88 129
literal_convert (104)
    on left: 143 144 145 146, on right: 128
id_term (105)
    on left: 148 149, on right: 62 131
$@13 (106)
    on left: 147, on right: 148


State 0

    0 $accept: . Program $end

    VAR             shift, and go to state 1
    INT             shift, and go to state 2
    FLOAT           shift, and go to state 3
    LAND            shift, and go to state 4
    LOR             shift, and go to state 5
    NEWLINE         shift, and go to state 6
    PRINT           shift, and go to state 7
    PRINTLN         shift, and go to state 8
    IF              shift, and go to state 9
    FOR             shift, and go to state 10
    TRUE            shift, and go to state 11
    FALSE           shift, and go to state 12
    INT_LIT         shift, and go to state 13
    SIGN_INT_LIT    shift, and go to state 14
    FLOAT_LIT       shift, and go to state 15
    SIGN_FLOAT_LIT  shift, and go to state 16
    ID              shift, and go to state 17
    '"'             shift, and go to state 18
    '('             shift, and go to state 19
    '{'             shift, and go to state 20
    '!'             shift, and go to state 21

    $end            reduce using rule 2 (Program)
    $end            [reduce using rule 106 (expression)]
    VAR             [reduce using rule 106 (expression)]
    INT             [reduce using rule 106 (expression)]
    FLOAT           [reduce using rule 106 (expression)]
    LAND            [reduce using rule 106 (expression)]
    LOR             [reduce using rule 106 (expression)]
    NEWLINE         [reduce using rule 106 (expression)]
    PRINT           [reduce using rule 106 (expression)]
    PRINTLN         [reduce using rule 106 (expression)]
    IF              [reduce using rule 106 (expression)]
    FOR             [reduce using rule 106 (expression)]
    TRUE            [reduce using rule 106 (expression)]
    FALSE           [reduce using rule 106 (expression)]
    INT_LIT         [reduce using rule 106 (expression)]
    SIGN_INT_LIT    [reduce using rule 106 (expression)]
    FLOAT_LIT       [reduce using rule 106 (expression)]
    SIGN_FLOAT_LIT  [reduce using rule 106 (expression)]
    ID              [reduce using rule 106 (expression)]
    '"'             [reduce using rule 106 (expression)]
    '('             [reduce using rule 106 (expression)]
    '{'             [reduce using rule 106 (expression)]
    '!'             [reduce using rule 106 (expression)]
    $default        reduce using rule 106 (expression)

    Program                go to state 22
    stmt                   go to state 23
    declaration            go to state 24
    incdec_stmt            go to state 25
    print_stmt             go to state 26
    pure_arithmetic        go to state 27
    invalid_arithmetic     go to state 28
    if_stmt                go to state 29
    for_stmt               go to state 30
    error_stmt             go to state 31
    ident                  go to state 32
    block                  go to state 33
    arithmetic_add_stmt    go to state 34
    arithmetic_mul_stmt    go to state 35
    expression_stmt        go to state 36
    expression             go to state 37
    lor_expression         go to state 38
    land_expression        go to state 39
    comparsion_expression  go to state 40
    add_expression         go to state 41
    mul_expression         go to state 42
    operand                go to state 43
    term                   go to state 44
    bool                   go to state 45
    literal                go to state 46
    int_literal            go to state 47
    float_literal          go to state 48
    sign_literal           go to state 49
    string_literal         go to state 50
    literal_convert        go to state 51
    id_term                go to state 52


State 1

   16 declaration: VAR . ID INT literal_initial NEWLINE
   17            | VAR . ID STRING string_initial
   18            | VAR . ID FLOAT literal_initial NEWLINE
   19            | VAR . ID BOOL bool_initial NEWLINE
   20            | VAR . ID '[' INT_LIT ']' INT NEWLINE
   21            | VAR . ID '[' INT_LIT ']' FLOAT NEWLINE

    ID  shift, and go to state 53


State 2

  143 literal_convert: INT . '(' ident ')'
  144                | INT . '(' FLOAT_LIT ')'

    '('  shift, and go to state 54


State 3

  145 literal_convert: FLOAT . '(' ident ')'
  146                | FLOAT . '(' INT_LIT ')'

    '('  shift, and go to state 55


State 4

  109 land_expression: LAND . expression

    INT             shift, and go to state 2
    FLOAT           shift, and go to state 3
    LAND            shift, and go to state 4
    LOR             shift, and go to state 5
    TRUE            shift, and go to state 11
    FALSE           shift, and go to state 12
    INT_LIT         shift, and go to state 56
    SIGN_INT_LIT    shift, and go to state 14
    FLOAT_LIT       shift, and go to state 57
    SIGN_FLOAT_LIT  shift, and go to state 16
    ID              shift, and go to state 58
    '"'             shift, and go to state 18
    '('             shift, and go to state 19
    '!'             shift, and go to state 21

    INT             [reduce using rule 106 (expression)]
    FLOAT           [reduce using rule 106 (expression)]
    LAND            [reduce using rule 106 (expression)]
    LOR             [reduce using rule 106 (expression)]
    TRUE            [reduce using rule 106 (expression)]
    FALSE           [reduce using rule 106 (expression)]
    INT_LIT         [reduce using rule 106 (expression)]
    SIGN_INT_LIT    [reduce using rule 106 (expression)]
    FLOAT_LIT       [reduce using rule 106 (expression)]
    SIGN_FLOAT_LIT  [reduce using rule 106 (expression)]
    ID              [reduce using rule 106 (expression)]
    '"'             [reduce using rule 106 (expression)]
    '('             [reduce using rule 106 (expression)]
    '!'             [reduce using rule 106 (expression)]
    $default        reduce using rule 106 (expression)

    expression             go to state 59
    lor_expression         go to state 38
    land_expression        go to state 39
    comparsion_expression  go to state 40
    add_expression         go to state 41
    mul_expression         go to state 42
    operand                go to state 43
    term                   go to state 44
    bool                   go to state 60
    literal                go to state 61
    int_literal            go to state 62
    float_literal          go to state 63
    sign_literal           go to state 49
    string_literal         go to state 50
    literal_convert        go to state 51
    id_term                go to state 52


State 5

  108 lor_expression: LOR . expression

    INT             shift, and go to state 2
    FLOAT           shift, and go to state 3
    LAND            shift, and go to state 4
    LOR             shift, and go to state 5
    TRUE            shift, and go to state 11
    FALSE           shift, and go to state 12
    INT_LIT         shift, and go to state 56
    SIGN_INT_LIT    shift, and go to state 14
    FLOAT_LIT       shift, and go to state 57
    SIGN_FLOAT_LIT  shift, and go to state 16
    ID              shift, and go to state 58
    '"'             shift, and go to state 18
    '('             shift, and go to state 19
    '!'             shift, and go to state 21

    INT             [reduce using rule 106 (expression)]
    FLOAT           [reduce using rule 106 (expression)]
    LAND            [reduce using rule 106 (expression)]
    LOR             [reduce using rule 106 (expression)]
    TRUE            [reduce using rule 106 (expression)]
    FALSE           [reduce using rule 106 (expression)]
    INT_LIT         [reduce using rule 106 (expression)]
    SIGN_INT_LIT    [reduce using rule 106 (expression)]
    FLOAT_LIT       [reduce using rule 106 (expression)]
    SIGN_FLOAT_LIT  [reduce using rule 106 (expression)]
    ID              [reduce using rule 106 (expression)]
    '"'             [reduce using rule 106 (expression)]
    '('             [reduce using rule 106 (expression)]
    '!'             [reduce using rule 106 (expression)]
    $default        reduce using rule 106 (expression)

    expression             go to state 64
    lor_expression         go to state 38
    land_expression        go to state 39
    comparsion_expression  go to state 40
    add_expression         go to state 41
    mul_expression         go to state 42
    operand                go to state 43
    term                   go to state 44
    bool                   go to state 60
    literal                go to state 61
    int_literal            go to state 62
    float_literal          go to state 63
    sign_literal           go to state 49
    string_literal         go to state 50
    literal_convert        go to state 51
    id_term                go to state 52


State 6

   15 stmt: NEWLINE .

    $default  reduce using rule 15 (stmt)


State 7

   38 print_stmt: PRINT . $@3 '(' expression ')'

    $default  reduce using rule 37 ($@3)

    $@3  go to state 65


State 8

   36 print_stmt: PRINTLN . $@2 '(' expression ')'

    $default  reduce using rule 35 ($@2)

    $@2  go to state 66


State 9

   56 if_stmt: IF . int_literal $@4 block
   58        | IF . float_literal $@5 block
   60        | IF . string_literal $@6 block
   62        | IF . id_term $@7 block
   63        | IF . expression block else_stmt

    INT             shift, and go to state 2
    FLOAT           shift, and go to state 3
    LAND            shift, and go to state 4
    LOR             shift, and go to state 5
    TRUE            shift, and go to state 11
    FALSE           shift, and go to state 12
    INT_LIT         shift, and go to state 56
    SIGN_INT_LIT    shift, and go to state 14
    FLOAT_LIT       shift, and go to state 57
    SIGN_FLOAT_LIT  shift, and go to state 16
    ID              shift, and go to state 58
    '"'             shift, and go to state 18
    '('             shift, and go to state 19
    '!'             shift, and go to state 21

    INT             [reduce using rule 106 (expression)]
    FLOAT           [reduce using rule 106 (expression)]
    TRUE            [reduce using rule 106 (expression)]
    FALSE           [reduce using rule 106 (expression)]
    INT_LIT         [reduce using rule 106 (expression)]
    SIGN_INT_LIT    [reduce using rule 106 (expression)]
    FLOAT_LIT       [reduce using rule 106 (expression)]
    SIGN_FLOAT_LIT  [reduce using rule 106 (expression)]
    ID              [reduce using rule 106 (expression)]
    '"'             [reduce using rule 106 (expression)]
    '('             [reduce using rule 106 (expression)]
    '!'             [reduce using rule 106 (expression)]
    $default        reduce using rule 106 (expression)

    expression             go to state 67
    lor_expression         go to state 38
    land_expression        go to state 39
    comparsion_expression  go to state 40
    add_expression         go to state 41
    mul_expression         go to state 42
    operand                go to state 43
    term                   go to state 44
    bool                   go to state 60
    literal                go to state 61
    int_literal            go to state 68
    float_literal          go to state 69
    sign_literal           go to state 49
    string_literal         go to state 70
    literal_convert        go to state 51
    id_term                go to state 71


State 10

   68 for_stmt: FOR . float_literal '{' $@8 stmts '}'
   70         | FOR . int_literal '{' $@9 stmts '}'
   72         | FOR . pure_arithmetic '{' $@10 stmts '}'
   73         | FOR . for_expr block

    INT             shift, and go to state 2
    FLOAT           shift, and go to state 3
    LAND            shift, and go to state 4
    LOR             shift, and go to state 5
    TRUE            shift, and go to state 11
    FALSE           shift, and go to state 12
    INT_LIT         shift, and go to state 13
    SIGN_INT_LIT    shift, and go to state 14
    FLOAT_LIT       shift, and go to state 15
    SIGN_FLOAT_LIT  shift, and go to state 16
    ID              shift, and go to state 72
    '"'             shift, and go to state 18
    '('             shift, and go to state 19
    '!'             shift, and go to state 21

    INT             [reduce using rule 106 (expression)]
    FLOAT           [reduce using rule 106 (expression)]
    TRUE            [reduce using rule 106 (expression)]
    FALSE           [reduce using rule 106 (expression)]
    INT_LIT         [reduce using rule 106 (expression)]
    SIGN_INT_LIT    [reduce using rule 106 (expression)]
    FLOAT_LIT       [reduce using rule 106 (expression)]
    SIGN_FLOAT_LIT  [reduce using rule 106 (expression)]
    ID              [reduce using rule 106 (expression)]
    '"'             [reduce using rule 106 (expression)]
    '('             [reduce using rule 106 (expression)]
    '!'             [reduce using rule 106 (expression)]
    $default        reduce using rule 106 (expression)

    pure_arithmetic        go to state 73
    invalid_arithmetic     go to state 28
    for_expr               go to state 74
    ident                  go to state 75
    expression             go to state 76
    lor_expression         go to state 38
    land_expression        go to state 39
    comparsion_expression  go to state 40
    add_expression         go to state 41
    mul_expression         go to state 42
    operand                go to state 43
    term                   go to state 44
    bool                   go to state 45
    literal                go to state 61
    int_literal            go to state 77
    float_literal          go to state 78
    sign_literal           go to state 49
    string_literal         go to state 50
    literal_convert        go to state 51
    id_term                go to state 52


State 11

  134 bool: TRUE .

    $default  reduce using rule 134 (bool)


State 12

  135 bool: FALSE .

    $default  reduce using rule 135 (bool)


State 13

   45 invalid_arithmetic: INT_LIT . '+' FLOAT_LIT
   47                   | INT_LIT . '-' FLOAT_LIT
   49                   | INT_LIT . '*' FLOAT_LIT
  138 int_literal: INT_LIT .

    '+'  shift, and go to state 79
    '-'  shift, and go to state 80
    '*'  shift, and go to state 81

    '+'       [reduce using rule 138 (int_literal)]
    '-'       [reduce using rule 138 (int_literal)]
    '*'       [reduce using rule 138 (int_literal)]
    $default  reduce using rule 138 (int_literal)


State 14

  140 sign_literal: SIGN_INT_LIT .

    $default  reduce using rule 140 (sign_literal)


State 15

   41 pure_arithmetic: FLOAT_LIT . '+' FLOAT_LIT
   42                | FLOAT_LIT . '-' FLOAT_LIT
   46 invalid_arithmetic: FLOAT_LIT . '+' INT_LIT
   48                   | FLOAT_LIT . '-' INT_LIT
   50                   | FLOAT_LIT . '*' INT_LIT
  139 float_literal: FLOAT_LIT .

    '+'  shift, and go to state 82
    '-'  shift, and go to state 83
    '*'  shift, and go to state 84

    '+'       [reduce using rule 139 (float_literal)]
    '-'       [reduce using rule 139 (float_literal)]
    '*'       [reduce using rule 139 (float_literal)]
    $default  reduce using rule 139 (float_literal)


State 16

  141 sign_literal: SIGN_FLOAT_LIT .

    $default  reduce using rule 141 (sign_literal)


State 17

   23 declaration: ID . '[' INT_LIT $@1 ']' array_initial NEWLINE
   43 pure_arithmetic: ID . '+' INT_LIT
   51 invalid_arithmetic: ID . '%' INT_LIT
   93 ident: ID .
   96 arithmetic_add_stmt: ID . '+' ID
   97                    | ID . '-' ID
   99 arithmetic_mul_stmt: ID . '*' ID
  100                    | ID . '/' ID
  101                    | ID . '%' ID
  148 id_term: ID . $@13 '[' expression ']'
  149        | ID .

    '['  shift, and go to state 85
    '+'  shift, and go to state 86
    '-'  shift, and go to state 87
    '*'  shift, and go to state 88
    '%'  shift, and go to state 89
    '/'  shift, and go to state 90

    INC         reduce using rule 93 (ident)
    DEC         reduce using rule 93 (ident)
    ADD_ASSIGN  reduce using rule 93 (ident)
    SUB_ASSIGN  reduce using rule 93 (ident)
    MUL_ASSIGN  reduce using rule 93 (ident)
    QUO_ASSIGN  reduce using rule 93 (ident)
    REM_ASSIGN  reduce using rule 93 (ident)
    '['         [reduce using rule 147 ($@13)]
    '='         reduce using rule 93 (ident)
    '+'         [reduce using rule 149 (id_term)]
    '-'         [reduce using rule 149 (id_term)]
    '*'         [reduce using rule 149 (id_term)]
    '%'         [reduce using rule 149 (id_term)]
    '/'         [reduce using rule 149 (id_term)]
    $default    reduce using rule 149 (id_term)

    $@13  go to state 91


State 18

  142 string_literal: '"' . STRING_LIT '"'

    STRING_LIT  shift, and go to state 92


State 19

  124 operand: '(' . expression ')'

    INT             shift, and go to state 2
    FLOAT           shift, and go to state 3
    LAND            shift, and go to state 4
    LOR             shift, and go to state 5
    TRUE            shift, and go to state 11
    FALSE           shift, and go to state 12
    INT_LIT         shift, and go to state 56
    SIGN_INT_LIT    shift, and go to state 14
    FLOAT_LIT       shift, and go to state 57
    SIGN_FLOAT_LIT  shift, and go to state 16
    ID              shift, and go to state 58
    '"'             shift, and go to state 18
    '('             shift, and go to state 19
    '!'             shift, and go to state 21

    INT             [reduce using rule 106 (expression)]
    FLOAT           [reduce using rule 106 (expression)]
    TRUE            [reduce using rule 106 (expression)]
    FALSE           [reduce using rule 106 (expression)]
    INT_LIT         [reduce using rule 106 (expression)]
    SIGN_INT_LIT    [reduce using rule 106 (expression)]
    FLOAT_LIT       [reduce using rule 106 (expression)]
    SIGN_FLOAT_LIT  [reduce using rule 106 (expression)]
    ID              [reduce using rule 106 (expression)]
    '"'             [reduce using rule 106 (expression)]
    '('             [reduce using rule 106 (expression)]
    '!'             [reduce using rule 106 (expression)]
    $default        reduce using rule 106 (expression)

    expression             go to state 93
    lor_expression         go to state 38
    land_expression        go to state 39
    comparsion_expression  go to state 40
    add_expression         go to state 41
    mul_expression         go to state 42
    operand                go to state 43
    term                   go to state 44
    bool                   go to state 60
    literal                go to state 61
    int_literal            go to state 62
    float_literal          go to state 63
    sign_literal           go to state 49
    string_literal         go to state 50
    literal_convert        go to state 51
    id_term                go to state 52


State 20

   95 block: '{' . $@11 stmts '}'

    $default  reduce using rule 94 ($@11)

    $@11  go to state 94


State 21

  133 bool: '!' . bool $@12 expression

    TRUE   shift, and go to state 11
    FALSE  shift, and go to state 12
    '!'    shift, and go to state 21

    bool  go to state 95


State 22

    0 $accept: Program . $end

    $end  shift, and go to state 96


State 23

    1 Program: stmt . stmts

    VAR             shift, and go to state 1
    INT             shift, and go to state 2
    FLOAT           shift, and go to state 3
    LAND            shift, and go to state 4
    LOR             shift, and go to state 5
    NEWLINE         shift, and go to state 6
    PRINT           shift, and go to state 7
    PRINTLN         shift, and go to state 8
    IF              shift, and go to state 9
    FOR             shift, and go to state 10
    TRUE            shift, and go to state 11
    FALSE           shift, and go to state 12
    INT_LIT         shift, and go to state 13
    SIGN_INT_LIT    shift, and go to state 14
    FLOAT_LIT       shift, and go to state 15
    SIGN_FLOAT_LIT  shift, and go to state 16
    ID              shift, and go to state 17
    '"'             shift, and go to state 18
    '('             shift, and go to state 19
    '{'             shift, and go to state 20
    '!'             shift, and go to state 21

    $end            reduce using rule 4 (stmts)
    $end            [reduce using rule 106 (expression)]
    VAR             [reduce using rule 106 (expression)]
    INT             [reduce using rule 106 (expression)]
    FLOAT           [reduce using rule 106 (expression)]
    LAND            [reduce using rule 106 (expression)]
    LOR             [reduce using rule 106 (expression)]
    NEWLINE         [reduce using rule 106 (expression)]
    PRINT           [reduce using rule 106 (expression)]
    PRINTLN         [reduce using rule 106 (expression)]
    IF              [reduce using rule 106 (expression)]
    FOR             [reduce using rule 106 (expression)]
    TRUE            [reduce using rule 106 (expression)]
    FALSE           [reduce using rule 106 (expression)]
    INT_LIT         [reduce using rule 106 (expression)]
    SIGN_INT_LIT    [reduce using rule 106 (expression)]
    FLOAT_LIT       [reduce using rule 106 (expression)]
    SIGN_FLOAT_LIT  [reduce using rule 106 (expression)]
    ID              [reduce using rule 106 (expression)]
    '"'             [reduce using rule 106 (expression)]
    '('             [reduce using rule 106 (expression)]
    '{'             [reduce using rule 106 (expression)]
    '!'             [reduce using rule 106 (expression)]
    $default        reduce using rule 106 (expression)

    stmts                  go to state 97
    stmt                   go to state 98
    declaration            go to state 24
    incdec_stmt            go to state 25
    print_stmt             go to state 26
    pure_arithmetic        go to state 27
    invalid_arithmetic     go to state 28
    if_stmt                go to state 29
    for_stmt               go to state 30
    error_stmt             go to state 31
    ident                  go to state 32
    block                  go to state 33
    arithmetic_add_stmt    go to state 34
    arithmetic_mul_stmt    go to state 35
    expression_stmt        go to state 36
    expression             go to state 37
    lor_expression         go to state 38
    land_expression        go to state 39
    comparsion_expression  go to state 40
    add_expression         go to state 41
    mul_expression         go to state 42
    operand                go to state 43
    term                   go to state 44
    bool                   go to state 45
    literal                go to state 46
    int_literal            go to state 47
    float_literal          go to state 48
    sign_literal           go to state 49
    string_literal         go to state 50
    literal_convert        go to state 51
    id_term                go to state 52


State 24

    5 stmt: declaration .

    $default  reduce using rule 5 (stmt)


State 25

   11 stmt: incdec_stmt .

    $default  reduce using rule 11 (stmt)


State 26

    6 stmt: print_stmt .

    $default  reduce using rule 6 (stmt)


State 27

   10 stmt: pure_arithmetic .

    $default  reduce using rule 10 (stmt)


State 28

   44 pure_arithmetic: invalid_arithmetic .

    $default  reduce using rule 44 (pure_arithmetic)


State 29

    8 stmt: if_stmt .

    $default  reduce using rule 8 (stmt)


State 30

    9 stmt: for_stmt .

    $default  reduce using rule 9 (stmt)


State 31

    7 stmt: error_stmt .

    $default  reduce using rule 7 (stmt)


State 32

   24 declaration: ident . assign NEWLINE
   33 incdec_stmt: ident . INC
   34            | ident . DEC

    INC         shift, and go to state 99
    DEC         shift, and go to state 100
    ADD_ASSIGN  shift, and go to state 101
    SUB_ASSIGN  shift, and go to state 102
    MUL_ASSIGN  shift, and go to state 103
    QUO_ASSIGN  shift, and go to state 104
    REM_ASSIGN  shift, and go to state 105
    '='         shift, and go to state 106

    assign        go to state 107
    error_assign  go to state 108


State 33

   14 stmt: block .

    $default  reduce using rule 14 (stmt)


State 34

   12 stmt: arithmetic_add_stmt .

    $default  reduce using rule 12 (stmt)


State 35

   98 arithmetic_add_stmt: arithmetic_mul_stmt .

    $default  reduce using rule 98 (arithmetic_add_stmt)


State 36

   13 stmt: expression_stmt .

    $default  reduce using rule 13 (stmt)


State 37

  102 expression_stmt: expression .
  110 comparsion_expression: expression . '>' add_expression
  111                      | expression . '<' add_expression
  112                      | expression . GEQ add_expression
  113                      | expression . LEQ add_expression
  114                      | expression . EQL add_expression
  115                      | expression . NEQ add_expression
  116                      | expression . add_expression

    INT             shift, and go to state 2
    FLOAT           shift, and go to state 3
    GEQ             shift, and go to state 109
    LEQ             shift, and go to state 110
    EQL             shift, and go to state 111
    NEQ             shift, and go to state 112
    TRUE            shift, and go to state 11
    FALSE           shift, and go to state 12
    INT_LIT         shift, and go to state 56
    SIGN_INT_LIT    shift, and go to state 14
    FLOAT_LIT       shift, and go to state 57
    SIGN_FLOAT_LIT  shift, and go to state 16
    ID              shift, and go to state 58
    '"'             shift, and go to state 18
    '('             shift, and go to state 19
    '>'             shift, and go to state 113
    '<'             shift, and go to state 114
    '!'             shift, and go to state 21

    INT             [reduce using rule 102 (expression_stmt)]
    FLOAT           [reduce using rule 102 (expression_stmt)]
    GEQ             [reduce using rule 102 (expression_stmt)]
    LEQ             [reduce using rule 102 (expression_stmt)]
    EQL             [reduce using rule 102 (expression_stmt)]
    NEQ             [reduce using rule 102 (expression_stmt)]
    TRUE            [reduce using rule 102 (expression_stmt)]
    FALSE           [reduce using rule 102 (expression_stmt)]
    INT_LIT         [reduce using rule 102 (expression_stmt)]
    SIGN_INT_LIT    [reduce using rule 102 (expression_stmt)]
    FLOAT_LIT       [reduce using rule 102 (expression_stmt)]
    SIGN_FLOAT_LIT  [reduce using rule 102 (expression_stmt)]
    ID              [reduce using rule 102 (expression_stmt)]
    '"'             [reduce using rule 102 (expression_stmt)]
    '('             [reduce using rule 102 (expression_stmt)]
    '>'             [reduce using rule 102 (expression_stmt)]
    '<'             [reduce using rule 102 (expression_stmt)]
    '!'             [reduce using rule 102 (expression_stmt)]
    $default        reduce using rule 102 (expression_stmt)

    add_expression   go to state 115
    mul_expression   go to state 42
    operand          go to state 43
    term             go to state 44
    bool             go to state 60
    literal          go to state 61
    int_literal      go to state 62
    float_literal    go to state 63
    sign_literal     go to state 49
    string_literal   go to state 50
    literal_convert  go to state 51
    id_term          go to state 52


State 38

  104 expression: lor_expression . expression

    INT             shift, and go to state 2
    FLOAT           shift, and go to state 3
    LAND            shift, and go to state 4
    LOR             shift, and go to state 5
    TRUE            shift, and go to state 11
    FALSE           shift, and go to state 12
    INT_LIT         shift, and go to state 56
    SIGN_INT_LIT    shift, and go to state 14
    FLOAT_LIT       shift, and go to state 57
    SIGN_FLOAT_LIT  shift, and go to state 16
    ID              shift, and go to state 58
    '"'             shift, and go to state 18
    '('             shift, and go to state 19
    '!'             shift, and go to state 21

    INT             [reduce using rule 106 (expression)]
    FLOAT           [reduce using rule 106 (expression)]
    LAND            [reduce using rule 106 (expression)]
    LOR             [reduce using rule 106 (expression)]
    TRUE            [reduce using rule 106 (expression)]
    FALSE           [reduce using rule 106 (expression)]
    INT_LIT         [reduce using rule 106 (expression)]
    SIGN_INT_LIT    [reduce using rule 106 (expression)]
    FLOAT_LIT       [reduce using rule 106 (expression)]
    SIGN_FLOAT_LIT  [reduce using rule 106 (expression)]
    ID              [reduce using rule 106 (expression)]
    '"'             [reduce using rule 106 (expression)]
    '('             [reduce using rule 106 (expression)]
    '!'             [reduce using rule 106 (expression)]
    $default        reduce using rule 106 (expression)

    expression             go to state 116
    lor_expression         go to state 38
    land_expression        go to state 39
    comparsion_expression  go to state 40
    add_expression         go to state 41
    mul_expression         go to state 42
    operand                go to state 43
    term                   go to state 44
    bool                   go to state 60
    literal                go to state 61
    int_literal            go to state 62
    float_literal          go to state 63
    sign_literal           go to state 49
    string_literal         go to state 50
    literal_convert        go to state 51
    id_term                go to state 52


State 39

  107 lor_expression: land_expression .

    $default  reduce using rule 107 (lor_expression)


State 40

  103 expression: comparsion_expression . expression

    INT             shift, and go to state 2
    FLOAT           shift, and go to state 3
    LAND            shift, and go to state 4
    LOR             shift, and go to state 5
    TRUE            shift, and go to state 11
    FALSE           shift, and go to state 12
    INT_LIT         shift, and go to state 56
    SIGN_INT_LIT    shift, and go to state 14
    FLOAT_LIT       shift, and go to state 57
    SIGN_FLOAT_LIT  shift, and go to state 16
    ID              shift, and go to state 58
    '"'             shift, and go to state 18
    '('             shift, and go to state 19
    '!'             shift, and go to state 21

    INT             [reduce using rule 106 (expression)]
    FLOAT           [reduce using rule 106 (expression)]
    LAND            [reduce using rule 106 (expression)]
    LOR             [reduce using rule 106 (expression)]
    TRUE            [reduce using rule 106 (expression)]
    FALSE           [reduce using rule 106 (expression)]
    INT_LIT         [reduce using rule 106 (expression)]
    SIGN_INT_LIT    [reduce using rule 106 (expression)]
    FLOAT_LIT       [reduce using rule 106 (expression)]
    SIGN_FLOAT_LIT  [reduce using rule 106 (expression)]
    ID              [reduce using rule 106 (expression)]
    '"'             [reduce using rule 106 (expression)]
    '('             [reduce using rule 106 (expression)]
    '!'             [reduce using rule 106 (expression)]
    $default        reduce using rule 106 (expression)

    expression             go to state 117
    lor_expression         go to state 38
    land_expression        go to state 39
    comparsion_expression  go to state 40
    add_expression         go to state 41
    mul_expression         go to state 42
    operand                go to state 43
    term                   go to state 44
    bool                   go to state 60
    literal                go to state 61
    int_literal            go to state 62
    float_literal          go to state 63
    sign_literal           go to state 49
    string_literal         go to state 50
    literal_convert        go to state 51
    id_term                go to state 52


State 41

  105 expression: add_expression .
  117 add_expression: add_expression . '+' mul_expression
  118               | add_expression . '-' mul_expression

    '+'  shift, and go to state 118
    '-'  shift, and go to state 119

    '+'       [reduce using rule 105 (expression)]
    '-'       [reduce using rule 105 (expression)]
    $default  reduce using rule 105 (expression)


State 42

  119 add_expression: mul_expression .
  120 mul_expression: mul_expression . '*' operand
  121               | mul_expression . '/' operand
  122               | mul_expression . '%' operand

    '*'  shift, and go to state 120
    '%'  shift, and go to state 121
    '/'  shift, and go to state 122

    '*'       [reduce using rule 119 (add_expression)]
    '%'       [reduce using rule 119 (add_expression)]
    '/'       [reduce using rule 119 (add_expression)]
    $default  reduce using rule 119 (add_expression)


State 43

  123 mul_expression: operand .

    $default  reduce using rule 123 (mul_expression)


State 44

  125 operand: term .

    $default  reduce using rule 125 (operand)


State 45

   54 invalid_arithmetic: bool . LOR expression
  130 term: bool .

    LOR  shift, and go to state 123

    LOR       [reduce using rule 130 (term)]
    $default  reduce using rule 130 (term)


State 46

   85 error_stmt: literal . assign
  126 term: literal .

    ADD_ASSIGN  shift, and go to state 101
    SUB_ASSIGN  shift, and go to state 102
    MUL_ASSIGN  shift, and go to state 103
    QUO_ASSIGN  shift, and go to state 104
    REM_ASSIGN  shift, and go to state 105
    '='         shift, and go to state 106

    $default  reduce using rule 126 (term)

    assign        go to state 124
    error_assign  go to state 108


State 47

   39 pure_arithmetic: int_literal . '+' int_literal
   40                | int_literal . '-' int_literal
   52 invalid_arithmetic: int_literal . LAND bool
  136 literal: int_literal .

    LAND  shift, and go to state 125
    '+'   shift, and go to state 126
    '-'   shift, and go to state 127

    LAND      [reduce using rule 136 (literal)]
    '+'       [reduce using rule 136 (literal)]
    '-'       [reduce using rule 136 (literal)]
    $default  reduce using rule 136 (literal)


State 48

   53 invalid_arithmetic: float_literal . LAND bool
  137 literal: float_literal .

    LAND  shift, and go to state 128

    LAND      [reduce using rule 137 (literal)]
    $default  reduce using rule 137 (literal)


State 49

  127 term: sign_literal .

    $default  reduce using rule 127 (term)


State 50

  129 term: string_literal .

    $default  reduce using rule 129 (term)


State 51

  128 term: literal_convert .

    $default  reduce using rule 128 (term)


State 52

  131 term: id_term .

    $default  reduce using rule 131 (term)


State 53

   16 declaration: VAR ID . INT literal_initial NEWLINE
   17            | VAR ID . STRING string_initial
   18            | VAR ID . FLOAT literal_initial NEWLINE
   19            | VAR ID . BOOL bool_initial NEWLINE
   20            | VAR ID . '[' INT_LIT ']' INT NEWLINE
   21            | VAR ID . '[' INT_LIT ']' FLOAT NEWLINE

    INT     shift, and go to state 129
    FLOAT   shift, and go to state 130
    BOOL    shift, and go to state 131
    STRING  shift, and go to state 132
    '['     shift, and go to state 133


State 54

  143 literal_convert: INT '(' . ident ')'
  144                | INT '(' . FLOAT_LIT ')'

    FLOAT_LIT  shift, and go to state 134
    ID         shift, and go to state 135

    ident  go to state 136


State 55

  145 literal_convert: FLOAT '(' . ident ')'
  146                | FLOAT '(' . INT_LIT ')'

    INT_LIT  shift, and go to state 137
    ID       shift, and go to state 135

    ident  go to state 138


State 56

  138 int_literal: INT_LIT .

    $default  reduce using rule 138 (int_literal)


State 57

  139 float_literal: FLOAT_LIT .

    $default  reduce using rule 139 (float_literal)


State 58

  148 id_term: ID . $@13 '[' expression ']'
  149        | ID .

    '['       reduce using rule 147 ($@13)
    $default  reduce using rule 149 (id_term)

    $@13  go to state 91


State 59

  109 land_expression: LAND expression .
  110 comparsion_expression: expression . '>' add_expression
  111                      | expression . '<' add_expression
  112                      | expression . GEQ add_expression
  113                      | expression . LEQ add_expression
  114                      | expression . EQL add_expression
  115                      | expression . NEQ add_expression
  116                      | expression . add_expression

    INT             shift, and go to state 2
    FLOAT           shift, and go to state 3
    GEQ             shift, and go to state 109
    LEQ             shift, and go to state 110
    EQL             shift, and go to state 111
    NEQ             shift, and go to state 112
    TRUE            shift, and go to state 11
    FALSE           shift, and go to state 12
    INT_LIT         shift, and go to state 56
    SIGN_INT_LIT    shift, and go to state 14
    FLOAT_LIT       shift, and go to state 57
    SIGN_FLOAT_LIT  shift, and go to state 16
    ID              shift, and go to state 58
    '"'             shift, and go to state 18
    '('             shift, and go to state 19
    '>'             shift, and go to state 113
    '<'             shift, and go to state 114
    '!'             shift, and go to state 21

    INT             [reduce using rule 109 (land_expression)]
    FLOAT           [reduce using rule 109 (land_expression)]
    GEQ             [reduce using rule 109 (land_expression)]
    LEQ             [reduce using rule 109 (land_expression)]
    EQL             [reduce using rule 109 (land_expression)]
    NEQ             [reduce using rule 109 (land_expression)]
    TRUE            [reduce using rule 109 (land_expression)]
    FALSE           [reduce using rule 109 (land_expression)]
    INT_LIT         [reduce using rule 109 (land_expression)]
    SIGN_INT_LIT    [reduce using rule 109 (land_expression)]
    FLOAT_LIT       [reduce using rule 109 (land_expression)]
    SIGN_FLOAT_LIT  [reduce using rule 109 (land_expression)]
    ID              [reduce using rule 109 (land_expression)]
    '"'             [reduce using rule 109 (land_expression)]
    '('             [reduce using rule 109 (land_expression)]
    '>'             [reduce using rule 109 (land_expression)]
    '<'             [reduce using rule 109 (land_expression)]
    '!'             [reduce using rule 109 (land_expression)]
    $default        reduce using rule 109 (land_expression)

    add_expression   go to state 115
    mul_expression   go to state 42
    operand          go to state 43
    term             go to state 44
    bool             go to state 60
    literal          go to state 61
    int_literal      go to state 62
    float_literal    go to state 63
    sign_literal     go to state 49
    string_literal   go to state 50
    literal_convert  go to state 51
    id_term          go to state 52


State 60

  130 term: bool .

    $default  reduce using rule 130 (term)


State 61

  126 term: literal .

    $default  reduce using rule 126 (term)


State 62

  136 literal: int_literal .

    $default  reduce using rule 136 (literal)


State 63

  137 literal: float_literal .

    $default  reduce using rule 137 (literal)


State 64

  108 lor_expression: LOR expression .
  110 comparsion_expression: expression . '>' add_expression
  111                      | expression . '<' add_expression
  112                      | expression . GEQ add_expression
  113                      | expression . LEQ add_expression
  114                      | expression . EQL add_expression
  115                      | expression . NEQ add_expression
  116                      | expression . add_expression

    INT             shift, and go to state 2
    FLOAT           shift, and go to state 3
    GEQ             shift, and go to state 109
    LEQ             shift, and go to state 110
    EQL             shift, and go to state 111
    NEQ             shift, and go to state 112
    TRUE            shift, and go to state 11
    FALSE           shift, and go to state 12
    INT_LIT         shift, and go to state 56
    SIGN_INT_LIT    shift, and go to state 14
    FLOAT_LIT       shift, and go to state 57
    SIGN_FLOAT_LIT  shift, and go to state 16
    ID              shift, and go to state 58
    '"'             shift, and go to state 18
    '('             shift, and go to state 19
    '>'             shift, and go to state 113
    '<'             shift, and go to state 114
    '!'             shift, and go to state 21

    INT             [reduce using rule 108 (lor_expression)]
    FLOAT           [reduce using rule 108 (lor_expression)]
    GEQ             [reduce using rule 108 (lor_expression)]
    LEQ             [reduce using rule 108 (lor_expression)]
    EQL             [reduce using rule 108 (lor_expression)]
    NEQ             [reduce using rule 108 (lor_expression)]
    TRUE            [reduce using rule 108 (lor_expression)]
    FALSE           [reduce using rule 108 (lor_expression)]
    INT_LIT         [reduce using rule 108 (lor_expression)]
    SIGN_INT_LIT    [reduce using rule 108 (lor_expression)]
    FLOAT_LIT       [reduce using rule 108 (lor_expression)]
    SIGN_FLOAT_LIT  [reduce using rule 108 (lor_expression)]
    ID              [reduce using rule 108 (lor_expression)]
    '"'             [reduce using rule 108 (lor_expression)]
    '('             [reduce using rule 108 (lor_expression)]
    '>'             [reduce using rule 108 (lor_expression)]
    '<'             [reduce using rule 108 (lor_expression)]
    '!'             [reduce using rule 108 (lor_expression)]
    $default        reduce using rule 108 (lor_expression)

    add_expression   go to state 115
    mul_expression   go to state 42
    operand          go to state 43
    term             go to state 44
    bool             go to state 60
    literal          go to state 61
    int_literal      go to state 62
    float_literal    go to state 63
    sign_literal     go to state 49
    string_literal   go to state 50
    literal_convert  go to state 51
    id_term          go to state 52


State 65

   38 print_stmt: PRINT $@3 . '(' expression ')'

    '('  shift, and go to state 139


State 66

   36 print_stmt: PRINTLN $@2 . '(' expression ')'

    '('  shift, and go to state 140


State 67

   63 if_stmt: IF expression . block else_stmt
  110 comparsion_expression: expression . '>' add_expression
  111                      | expression . '<' add_expression
  112                      | expression . GEQ add_expression
  113                      | expression . LEQ add_expression
  114                      | expression . EQL add_expression
  115                      | expression . NEQ add_expression
  116                      | expression . add_expression

    INT             shift, and go to state 2
    FLOAT           shift, and go to state 3
    GEQ             shift, and go to state 109
    LEQ             shift, and go to state 110
    EQL             shift, and go to state 111
    NEQ             shift, and go to state 112
    TRUE            shift, and go to state 11
    FALSE           shift, and go to state 12
    INT_LIT         shift, and go to state 56
    SIGN_INT_LIT    shift, and go to state 14
    FLOAT_LIT       shift, and go to state 57
    SIGN_FLOAT_LIT  shift, and go to state 16
    ID              shift, and go to state 58
    '"'             shift, and go to state 18
    '('             shift, and go to state 19
    '{'             shift, and go to state 20
    '>'             shift, and go to state 113
    '<'             shift, and go to state 114
    '!'             shift, and go to state 21

    block            go to state 141
    add_expression   go to state 115
    mul_expression   go to state 42
    operand          go to state 43
    term             go to state 44
    bool             go to state 60
    literal          go to state 61
    int_literal      go to state 62
    float_literal    go to state 63
    sign_literal     go to state 49
    string_literal   go to state 50
    literal_convert  go to state 51
    id_term          go to state 52


State 68

   56 if_stmt: IF int_literal . $@4 block
  136 literal: int_literal .

    '{'       reduce using rule 55 ($@4)
    '{'       [reduce using rule 136 (literal)]
    $default  reduce using rule 136 (literal)

    $@4  go to state 142


State 69

   58 if_stmt: IF float_literal . $@5 block
  137 literal: float_literal .

    '{'       reduce using rule 57 ($@5)
    '{'       [reduce using rule 137 (literal)]
    $default  reduce using rule 137 (literal)

    $@5  go to state 143


State 70

   60 if_stmt: IF string_literal . $@6 block
  129 term: string_literal .

    '{'       reduce using rule 59 ($@6)
    '{'       [reduce using rule 129 (term)]
    $default  reduce using rule 129 (term)

    $@6  go to state 144


State 71

   62 if_stmt: IF id_term . $@7 block
  131 term: id_term .

    '{'       reduce using rule 61 ($@7)
    '{'       [reduce using rule 131 (term)]
    $default  reduce using rule 131 (term)

    $@7  go to state 145


State 72

   43 pure_arithmetic: ID . '+' INT_LIT
   51 invalid_arithmetic: ID . '%' INT_LIT
   93 ident: ID .
  148 id_term: ID . $@13 '[' expression ']'
  149        | ID .

    '+'  shift, and go to state 146
    '%'  shift, and go to state 147

    ADD_ASSIGN  reduce using rule 93 (ident)
    SUB_ASSIGN  reduce using rule 93 (ident)
    MUL_ASSIGN  reduce using rule 93 (ident)
    QUO_ASSIGN  reduce using rule 93 (ident)
    REM_ASSIGN  reduce using rule 93 (ident)
    '['         reduce using rule 147 ($@13)
    '='         reduce using rule 93 (ident)
    '+'         [reduce using rule 149 (id_term)]
    '%'         [reduce using rule 149 (id_term)]
    $default    reduce using rule 149 (id_term)

    $@13  go to state 91


State 73

   72 for_stmt: FOR pure_arithmetic . '{' $@10 stmts '}'

    '{'  shift, and go to state 148


State 74

   73 for_stmt: FOR for_expr . block

    '{'  shift, and go to state 20

    block  go to state 149


State 75

   74 for_expr: ident . assign ';' ident comparsion_expression ';' arithmetic_add_stmt
   75         | ident . assign ';' ident comparsion_expression ';' incdec_stmt

    ADD_ASSIGN  shift, and go to state 101
    SUB_ASSIGN  shift, and go to state 102
    MUL_ASSIGN  shift, and go to state 103
    QUO_ASSIGN  shift, and go to state 104
    REM_ASSIGN  shift, and go to state 105
    '='         shift, and go to state 106

    assign        go to state 150
    error_assign  go to state 108


State 76

   76 for_expr: expression .
  110 comparsion_expression: expression . '>' add_expression
  111                      | expression . '<' add_expression
  112                      | expression . GEQ add_expression
  113                      | expression . LEQ add_expression
  114                      | expression . EQL add_expression
  115                      | expression . NEQ add_expression
  116                      | expression . add_expression

    INT             shift, and go to state 2
    FLOAT           shift, and go to state 3
    GEQ             shift, and go to state 109
    LEQ             shift, and go to state 110
    EQL             shift, and go to state 111
    NEQ             shift, and go to state 112
    TRUE            shift, and go to state 11
    FALSE           shift, and go to state 12
    INT_LIT         shift, and go to state 56
    SIGN_INT_LIT    shift, and go to state 14
    FLOAT_LIT       shift, and go to state 57
    SIGN_FLOAT_LIT  shift, and go to state 16
    ID              shift, and go to state 58
    '"'             shift, and go to state 18
    '('             shift, and go to state 19
    '>'             shift, and go to state 113
    '<'             shift, and go to state 114
    '!'             shift, and go to state 21

    $default  reduce using rule 76 (for_expr)

    add_expression   go to state 115
    mul_expression   go to state 42
    operand          go to state 43
    term             go to state 44
    bool             go to state 60
    literal          go to state 61
    int_literal      go to state 62
    float_literal    go to state 63
    sign_literal     go to state 49
    string_literal   go to state 50
    literal_convert  go to state 51
    id_term          go to state 52


State 77

   39 pure_arithmetic: int_literal . '+' int_literal
   40                | int_literal . '-' int_literal
   52 invalid_arithmetic: int_literal . LAND bool
   70 for_stmt: FOR int_literal . '{' $@9 stmts '}'
  136 literal: int_literal .

    LAND  shift, and go to state 125
    '+'   shift, and go to state 126
    '-'   shift, and go to state 127
    '{'   shift, and go to state 151

    '+'       [reduce using rule 136 (literal)]
    '-'       [reduce using rule 136 (literal)]
    '{'       [reduce using rule 136 (literal)]
    $default  reduce using rule 136 (literal)


State 78

   53 invalid_arithmetic: float_literal . LAND bool
   68 for_stmt: FOR float_literal . '{' $@8 stmts '}'
  137 literal: float_literal .

    LAND  shift, and go to state 128
    '{'   shift, and go to state 152

    '{'       [reduce using rule 137 (literal)]
    $default  reduce using rule 137 (literal)


State 79

   45 invalid_arithmetic: INT_LIT '+' . FLOAT_LIT

    FLOAT_LIT  shift, and go to state 153


State 80

   47 invalid_arithmetic: INT_LIT '-' . FLOAT_LIT

    FLOAT_LIT  shift, and go to state 154


State 81

   49 invalid_arithmetic: INT_LIT '*' . FLOAT_LIT

    FLOAT_LIT  shift, and go to state 155


State 82

   41 pure_arithmetic: FLOAT_LIT '+' . FLOAT_LIT
   46 invalid_arithmetic: FLOAT_LIT '+' . INT_LIT

    INT_LIT    shift, and go to state 156
    FLOAT_LIT  shift, and go to state 157


State 83

   42 pure_arithmetic: FLOAT_LIT '-' . FLOAT_LIT
   48 invalid_arithmetic: FLOAT_LIT '-' . INT_LIT

    INT_LIT    shift, and go to state 158
    FLOAT_LIT  shift, and go to state 159


State 84

   50 invalid_arithmetic: FLOAT_LIT '*' . INT_LIT

    INT_LIT  shift, and go to state 160


State 85

   23 declaration: ID '[' . INT_LIT $@1 ']' array_initial NEWLINE

    INT_LIT  shift, and go to state 161


State 86

   43 pure_arithmetic: ID '+' . INT_LIT
   96 arithmetic_add_stmt: ID '+' . ID

    INT_LIT  shift, and go to state 162
    ID       shift, and go to state 163


State 87

   97 arithmetic_add_stmt: ID '-' . ID

    ID  shift, and go to state 164


State 88

   99 arithmetic_mul_stmt: ID '*' . ID

    ID  shift, and go to state 165


State 89

   51 invalid_arithmetic: ID '%' . INT_LIT
  101 arithmetic_mul_stmt: ID '%' . ID

    INT_LIT  shift, and go to state 166
    ID       shift, and go to state 167


State 90

  100 arithmetic_mul_stmt: ID '/' . ID

    ID  shift, and go to state 168


State 91

  148 id_term: ID $@13 . '[' expression ']'

    '['  shift, and go to state 169


State 92

  142 string_literal: '"' STRING_LIT . '"'

    '"'  shift, and go to state 170


State 93

  110 comparsion_expression: expression . '>' add_expression
  111                      | expression . '<' add_expression
  112                      | expression . GEQ add_expression
  113                      | expression . LEQ add_expression
  114                      | expression . EQL add_expression
  115                      | expression . NEQ add_expression
  116                      | expression . add_expression
  124 operand: '(' expression . ')'

    INT             shift, and go to state 2
    FLOAT           shift, and go to state 3
    GEQ             shift, and go to state 109
    LEQ             shift, and go to state 110
    EQL             shift, and go to state 111
    NEQ             shift, and go to state 112
    TRUE            shift, and go to state 11
    FALSE           shift, and go to state 12
    INT_LIT         shift, and go to state 56
    SIGN_INT_LIT    shift, and go to state 14
    FLOAT_LIT       shift, and go to state 57
    SIGN_FLOAT_LIT  shift, and go to state 16
    ID              shift, and go to state 58
    '"'             shift, and go to state 18
    '('             shift, and go to state 19
    ')'             shift, and go to state 171
    '>'             shift, and go to state 113
    '<'             shift, and go to state 114
    '!'             shift, and go to state 21

    add_expression   go to state 115
    mul_expression   go to state 42
    operand          go to state 43
    term             go to state 44
    bool             go to state 60
    literal          go to state 61
    int_literal      go to state 62
    float_literal    go to state 63
    sign_literal     go to state 49
    string_literal   go to state 50
    literal_convert  go to state 51
    id_term          go to state 52


State 94

   95 block: '{' $@11 . stmts '}'

    VAR             shift, and go to state 1
    INT             shift, and go to state 2
    FLOAT           shift, and go to state 3
    LAND            shift, and go to state 4
    LOR             shift, and go to state 5
    NEWLINE         shift, and go to state 6
    PRINT           shift, and go to state 7
    PRINTLN         shift, and go to state 8
    IF              shift, and go to state 9
    FOR             shift, and go to state 10
    TRUE            shift, and go to state 11
    FALSE           shift, and go to state 12
    INT_LIT         shift, and go to state 13
    SIGN_INT_LIT    shift, and go to state 14
    FLOAT_LIT       shift, and go to state 15
    SIGN_FLOAT_LIT  shift, and go to state 16
    ID              shift, and go to state 17
    '"'             shift, and go to state 18
    '('             shift, and go to state 19
    '{'             shift, and go to state 20
    '!'             shift, and go to state 21

    VAR             [reduce using rule 106 (expression)]
    INT             [reduce using rule 106 (expression)]
    FLOAT           [reduce using rule 106 (expression)]
    LAND            [reduce using rule 106 (expression)]
    LOR             [reduce using rule 106 (expression)]
    NEWLINE         [reduce using rule 106 (expression)]
    PRINT           [reduce using rule 106 (expression)]
    PRINTLN         [reduce using rule 106 (expression)]
    IF              [reduce using rule 106 (expression)]
    FOR             [reduce using rule 106 (expression)]
    TRUE            [reduce using rule 106 (expression)]
    FALSE           [reduce using rule 106 (expression)]
    INT_LIT         [reduce using rule 106 (expression)]
    SIGN_INT_LIT    [reduce using rule 106 (expression)]
    FLOAT_LIT       [reduce using rule 106 (expression)]
    SIGN_FLOAT_LIT  [reduce using rule 106 (expression)]
    ID              [reduce using rule 106 (expression)]
    '"'             [reduce using rule 106 (expression)]
    '('             [reduce using rule 106 (expression)]
    '{'             [reduce using rule 106 (expression)]
    '}'             reduce using rule 4 (stmts)
    '}'             [reduce using rule 106 (expression)]
    '!'             [reduce using rule 106 (expression)]
    $default        reduce using rule 106 (expression)

    stmts                  go to state 172
    stmt                   go to state 98
    declaration            go to state 24
    incdec_stmt            go to state 25
    print_stmt             go to state 26
    pure_arithmetic        go to state 27
    invalid_arithmetic     go to state 28
    if_stmt                go to state 29
    for_stmt               go to state 30
    error_stmt             go to state 31
    ident                  go to state 32
    block                  go to state 33
    arithmetic_add_stmt    go to state 34
    arithmetic_mul_stmt    go to state 35
    expression_stmt        go to state 36
    expression             go to state 37
    lor_expression         go to state 38
    land_expression        go to state 39
    comparsion_expression  go to state 40
    add_expression         go to state 41
    mul_expression         go to state 42
    operand                go to state 43
    term                   go to state 44
    bool                   go to state 45
    literal                go to state 46
    int_literal            go to state 47
    float_literal          go to state 48
    sign_literal           go to state 49
    string_literal         go to state 50
    literal_convert        go to state 51
    id_term                go to state 52


State 95

  133 bool: '!' bool . $@12 expression

    $default  reduce using rule 132 ($@12)

    $@12  go to state 173


State 96

    0 $accept: Program $end .

    $default  accept


State 97

    1 Program: stmt stmts .

    $default  reduce using rule 1 (Program)


State 98

    3 stmts: stmt . stmts

    VAR             shift, and go to state 1
    INT             shift, and go to state 2
    FLOAT           shift, and go to state 3
    LAND            shift, and go to state 4
    LOR             shift, and go to state 5
    NEWLINE         shift, and go to state 6
    PRINT           shift, and go to state 7
    PRINTLN         shift, and go to state 8
    IF              shift, and go to state 9
    FOR             shift, and go to state 10
    TRUE            shift, and go to state 11
    FALSE           shift, and go to state 12
    INT_LIT         shift, and go to state 13
    SIGN_INT_LIT    shift, and go to state 14
    FLOAT_LIT       shift, and go to state 15
    SIGN_FLOAT_LIT  shift, and go to state 16
    ID              shift, and go to state 17
    '"'             shift, and go to state 18
    '('             shift, and go to state 19
    '{'             shift, and go to state 20
    '!'             shift, and go to state 21

    $end            reduce using rule 4 (stmts)
    $end            [reduce using rule 106 (expression)]
    VAR             [reduce using rule 106 (expression)]
    INT             [reduce using rule 106 (expression)]
    FLOAT           [reduce using rule 106 (expression)]
    LAND            [reduce using rule 106 (expression)]
    LOR             [reduce using rule 106 (expression)]
    NEWLINE         [reduce using rule 106 (expression)]
    PRINT           [reduce using rule 106 (expression)]
    PRINTLN         [reduce using rule 106 (expression)]
    IF              [reduce using rule 106 (expression)]
    FOR             [reduce using rule 106 (expression)]
    TRUE            [reduce using rule 106 (expression)]
    FALSE           [reduce using rule 106 (expression)]
    INT_LIT         [reduce using rule 106 (expression)]
    SIGN_INT_LIT    [reduce using rule 106 (expression)]
    FLOAT_LIT       [reduce using rule 106 (expression)]
    SIGN_FLOAT_LIT  [reduce using rule 106 (expression)]
    ID              [reduce using rule 106 (expression)]
    '"'             [reduce using rule 106 (expression)]
    '('             [reduce using rule 106 (expression)]
    '{'             [reduce using rule 106 (expression)]
    '}'             reduce using rule 4 (stmts)
    '}'             [reduce using rule 106 (expression)]
    '!'             [reduce using rule 106 (expression)]
    $default        reduce using rule 106 (expression)

    stmts                  go to state 174
    stmt                   go to state 98
    declaration            go to state 24
    incdec_stmt            go to state 25
    print_stmt             go to state 26
    pure_arithmetic        go to state 27
    invalid_arithmetic     go to state 28
    if_stmt                go to state 29
    for_stmt               go to state 30
    error_stmt             go to state 31
    ident                  go to state 32
    block                  go to state 33
    arithmetic_add_stmt    go to state 34
    arithmetic_mul_stmt    go to state 35
    expression_stmt        go to state 36
    expression             go to state 37
    lor_expression         go to state 38
    land_expression        go to state 39
    comparsion_expression  go to state 40
    add_expression         go to state 41
    mul_expression         go to state 42
    operand                go to state 43
    term                   go to state 44
    bool                   go to state 45
    literal                go to state 46
    int_literal            go to state 47
    float_literal          go to state 48
    sign_literal           go to state 49
    string_literal         go to state 50
    literal_convert        go to state 51
    id_term                go to state 52


State 99

   33 incdec_stmt: ident INC .

    $default  reduce using rule 33 (incdec_stmt)


State 100

   34 incdec_stmt: ident DEC .

    $default  reduce using rule 34 (incdec_stmt)


State 101

   77 assign: ADD_ASSIGN . var
   84 error_assign: ADD_ASSIGN . ID

    INT             shift, and go to state 2
    FLOAT           shift, and go to state 3
    LAND            shift, and go to state 4
    LOR             shift, and go to state 5
    TRUE            shift, and go to state 11
    FALSE           shift, and go to state 12
    INT_LIT         shift, and go to state 56
    SIGN_INT_LIT    shift, and go to state 14
    FLOAT_LIT       shift, and go to state 57
    SIGN_FLOAT_LIT  shift, and go to state 16
    ID              shift, and go to state 175
    '"'             shift, and go to state 18
    '('             shift, and go to state 19
    '!'             shift, and go to state 21

    $end            reduce using rule 92 (var)
    $end            [reduce using rule 106 (expression)]
    VAR             reduce using rule 92 (var)
    VAR             [reduce using rule 106 (expression)]
    INT             [reduce using rule 92 (var)]
    INT             [reduce using rule 106 (expression)]
    FLOAT           [reduce using rule 92 (var)]
    FLOAT           [reduce using rule 106 (expression)]
    GEQ             reduce using rule 92 (var)
    GEQ             [reduce using rule 106 (expression)]
    LEQ             reduce using rule 92 (var)
    LEQ             [reduce using rule 106 (expression)]
    EQL             reduce using rule 92 (var)
    EQL             [reduce using rule 106 (expression)]
    NEQ             reduce using rule 92 (var)
    NEQ             [reduce using rule 106 (expression)]
    LAND            [reduce using rule 92 (var)]
    LAND            [reduce using rule 106 (expression)]
    LOR             [reduce using rule 92 (var)]
    LOR             [reduce using rule 106 (expression)]
    NEWLINE         reduce using rule 92 (var)
    NEWLINE         [reduce using rule 106 (expression)]
    PRINT           reduce using rule 92 (var)
    PRINT           [reduce using rule 106 (expression)]
    PRINTLN         reduce using rule 92 (var)
    PRINTLN         [reduce using rule 106 (expression)]
    IF              reduce using rule 92 (var)
    IF              [reduce using rule 106 (expression)]
    FOR             reduce using rule 92 (var)
    FOR             [reduce using rule 106 (expression)]
    TRUE            [reduce using rule 92 (var)]
    TRUE            [reduce using rule 106 (expression)]
    FALSE           [reduce using rule 92 (var)]
    FALSE           [reduce using rule 106 (expression)]
    INT_LIT         [reduce using rule 92 (var)]
    INT_LIT         [reduce using rule 106 (expression)]
    SIGN_INT_LIT    [reduce using rule 92 (var)]
    SIGN_INT_LIT    [reduce using rule 106 (expression)]
    FLOAT_LIT       [reduce using rule 92 (var)]
    FLOAT_LIT       [reduce using rule 106 (expression)]
    SIGN_FLOAT_LIT  [reduce using rule 92 (var)]
    SIGN_FLOAT_LIT  [reduce using rule 106 (expression)]
    ID              [reduce using rule 92 (var)]
    ID              [reduce using rule 106 (expression)]
    '"'             [reduce using rule 92 (var)]
    '"'             [reduce using rule 106 (expression)]
    '('             [reduce using rule 92 (var)]
    '('             [reduce using rule 106 (expression)]
    '{'             reduce using rule 92 (var)
    '{'             [reduce using rule 106 (expression)]
    '}'             reduce using rule 92 (var)
    '}'             [reduce using rule 106 (expression)]
    ';'             reduce using rule 92 (var)
    ';'             [reduce using rule 106 (expression)]
    '>'             reduce using rule 92 (var)
    '>'             [reduce using rule 106 (expression)]
    '<'             reduce using rule 92 (var)
    '<'             [reduce using rule 106 (expression)]
    '!'             [reduce using rule 92 (var)]
    '!'             [reduce using rule 106 (expression)]
    $default        reduce using rule 92 (var)

    var                    go to state 176
    expression             go to state 177
    lor_expression         go to state 38
    land_expression        go to state 39
    comparsion_expression  go to state 40
    add_expression         go to state 41
    mul_expression         go to state 42
    operand                go to state 43
    term                   go to state 44
    bool                   go to state 178
    literal                go to state 61
    int_literal            go to state 179
    float_literal          go to state 180
    sign_literal           go to state 49
    string_literal         go to state 181
    literal_convert        go to state 51
    id_term                go to state 52


State 102

   78 assign: SUB_ASSIGN . var

    INT             shift, and go to state 2
    FLOAT           shift, and go to state 3
    LAND            shift, and go to state 4
    LOR             shift, and go to state 5
    TRUE            shift, and go to state 11
    FALSE           shift, and go to state 12
    INT_LIT         shift, and go to state 56
    SIGN_INT_LIT    shift, and go to state 14
    FLOAT_LIT       shift, and go to state 57
    SIGN_FLOAT_LIT  shift, and go to state 16
    ID              shift, and go to state 182
    '"'             shift, and go to state 18
    '('             shift, and go to state 19
    '!'             shift, and go to state 21

    $end            reduce using rule 92 (var)
    $end            [reduce using rule 106 (expression)]
    VAR             reduce using rule 92 (var)
    VAR             [reduce using rule 106 (expression)]
    INT             [reduce using rule 92 (var)]
    INT             [reduce using rule 106 (expression)]
    FLOAT           [reduce using rule 92 (var)]
    FLOAT           [reduce using rule 106 (expression)]
    GEQ             reduce using rule 92 (var)
    GEQ             [reduce using rule 106 (expression)]
    LEQ             reduce using rule 92 (var)
    LEQ             [reduce using rule 106 (expression)]
    EQL             reduce using rule 92 (var)
    EQL             [reduce using rule 106 (expression)]
    NEQ             reduce using rule 92 (var)
    NEQ             [reduce using rule 106 (expression)]
    LAND            [reduce using rule 92 (var)]
    LAND            [reduce using rule 106 (expression)]
    LOR             [reduce using rule 92 (var)]
    LOR             [reduce using rule 106 (expression)]
    NEWLINE         reduce using rule 92 (var)
    NEWLINE         [reduce using rule 106 (expression)]
    PRINT           reduce using rule 92 (var)
    PRINT           [reduce using rule 106 (expression)]
    PRINTLN         reduce using rule 92 (var)
    PRINTLN         [reduce using rule 106 (expression)]
    IF              reduce using rule 92 (var)
    IF              [reduce using rule 106 (expression)]
    FOR             reduce using rule 92 (var)
    FOR             [reduce using rule 106 (expression)]
    TRUE            [reduce using rule 92 (var)]
    TRUE            [reduce using rule 106 (expression)]
    FALSE           [reduce using rule 92 (var)]
    FALSE           [reduce using rule 106 (expression)]
    INT_LIT         [reduce using rule 92 (var)]
    INT_LIT         [reduce using rule 106 (expression)]
    SIGN_INT_LIT    [reduce using rule 92 (var)]
    SIGN_INT_LIT    [reduce using rule 106 (expression)]
    FLOAT_LIT       [reduce using rule 92 (var)]
    FLOAT_LIT       [reduce using rule 106 (expression)]
    SIGN_FLOAT_LIT  [reduce using rule 92 (var)]
    SIGN_FLOAT_LIT  [reduce using rule 106 (expression)]
    ID              [reduce using rule 92 (var)]
    ID              [reduce using rule 106 (expression)]
    '"'             [reduce using rule 92 (var)]
    '"'             [reduce using rule 106 (expression)]
    '('             [reduce using rule 92 (var)]
    '('             [reduce using rule 106 (expression)]
    '{'             reduce using rule 92 (var)
    '{'             [reduce using rule 106 (expression)]
    '}'             reduce using rule 92 (var)
    '}'             [reduce using rule 106 (expression)]
    ';'             reduce using rule 92 (var)
    ';'             [reduce using rule 106 (expression)]
    '>'             reduce using rule 92 (var)
    '>'             [reduce using rule 106 (expression)]
    '<'             reduce using rule 92 (var)
    '<'             [reduce using rule 106 (expression)]
    '!'             [reduce using rule 92 (var)]
    '!'             [reduce using rule 106 (expression)]
    $default        reduce using rule 92 (var)

    var                    go to state 183
    expression             go to state 177
    lor_expression         go to state 38
    land_expression        go to state 39
    comparsion_expression  go to state 40
    add_expression         go to state 41
    mul_expression         go to state 42
    operand                go to state 43
    term                   go to state 44
    bool                   go to state 178
    literal                go to state 61
    int_literal            go to state 179
    float_literal          go to state 180
    sign_literal           go to state 49
    string_literal         go to state 181
    literal_convert        go to state 51
    id_term                go to state 52


State 103

   79 assign: MUL_ASSIGN . var

    INT             shift, and go to state 2
    FLOAT           shift, and go to state 3
    LAND            shift, and go to state 4
    LOR             shift, and go to state 5
    TRUE            shift, and go to state 11
    FALSE           shift, and go to state 12
    INT_LIT         shift, and go to state 56
    SIGN_INT_LIT    shift, and go to state 14
    FLOAT_LIT       shift, and go to state 57
    SIGN_FLOAT_LIT  shift, and go to state 16
    ID              shift, and go to state 182
    '"'             shift, and go to state 18
    '('             shift, and go to state 19
    '!'             shift, and go to state 21

    $end            reduce using rule 92 (var)
    $end            [reduce using rule 106 (expression)]
    VAR             reduce using rule 92 (var)
    VAR             [reduce using rule 106 (expression)]
    INT             [reduce using rule 92 (var)]
    INT             [reduce using rule 106 (expression)]
    FLOAT           [reduce using rule 92 (var)]
    FLOAT           [reduce using rule 106 (expression)]
    GEQ             reduce using rule 92 (var)
    GEQ             [reduce using rule 106 (expression)]
    LEQ             reduce using rule 92 (var)
    LEQ             [reduce using rule 106 (expression)]
    EQL             reduce using rule 92 (var)
    EQL             [reduce using rule 106 (expression)]
    NEQ             reduce using rule 92 (var)
    NEQ             [reduce using rule 106 (expression)]
    LAND            [reduce using rule 92 (var)]
    LAND            [reduce using rule 106 (expression)]
    LOR             [reduce using rule 92 (var)]
    LOR             [reduce using rule 106 (expression)]
    NEWLINE         reduce using rule 92 (var)
    NEWLINE         [reduce using rule 106 (expression)]
    PRINT           reduce using rule 92 (var)
    PRINT           [reduce using rule 106 (expression)]
    PRINTLN         reduce using rule 92 (var)
    PRINTLN         [reduce using rule 106 (expression)]
    IF              reduce using rule 92 (var)
    IF              [reduce using rule 106 (expression)]
    FOR             reduce using rule 92 (var)
    FOR             [reduce using rule 106 (expression)]
    TRUE            [reduce using rule 92 (var)]
    TRUE            [reduce using rule 106 (expression)]
    FALSE           [reduce using rule 92 (var)]
    FALSE           [reduce using rule 106 (expression)]
    INT_LIT         [reduce using rule 92 (var)]
    INT_LIT         [reduce using rule 106 (expression)]
    SIGN_INT_LIT    [reduce using rule 92 (var)]
    SIGN_INT_LIT    [reduce using rule 106 (expression)]
    FLOAT_LIT       [reduce using rule 92 (var)]
    FLOAT_LIT       [reduce using rule 106 (expression)]
    SIGN_FLOAT_LIT  [reduce using rule 92 (var)]
    SIGN_FLOAT_LIT  [reduce using rule 106 (expression)]
    ID              [reduce using rule 92 (var)]
    ID              [reduce using rule 106 (expression)]
    '"'             [reduce using rule 92 (var)]
    '"'             [reduce using rule 106 (expression)]
    '('             [reduce using rule 92 (var)]
    '('             [reduce using rule 106 (expression)]
    '{'             reduce using rule 92 (var)
    '{'             [reduce using rule 106 (expression)]
    '}'             reduce using rule 92 (var)
    '}'             [reduce using rule 106 (expression)]
    ';'             reduce using rule 92 (var)
    ';'             [reduce using rule 106 (expression)]
    '>'             reduce using rule 92 (var)
    '>'             [reduce using rule 106 (expression)]
    '<'             reduce using rule 92 (var)
    '<'             [reduce using rule 106 (expression)]
    '!'             [reduce using rule 92 (var)]
    '!'             [reduce using rule 106 (expression)]
    $default        reduce using rule 92 (var)

    var                    go to state 184
    expression             go to state 177
    lor_expression         go to state 38
    land_expression        go to state 39
    comparsion_expression  go to state 40
    add_expression         go to state 41
    mul_expression         go to state 42
    operand                go to state 43
    term                   go to state 44
    bool                   go to state 178
    literal                go to state 61
    int_literal            go to state 179
    float_literal          go to state 180
    sign_literal           go to state 49
    string_literal         go to state 181
    literal_convert        go to state 51
    id_term                go to state 52


State 104

   80 assign: QUO_ASSIGN . var

    INT             shift, and go to state 2
    FLOAT           shift, and go to state 3
    LAND            shift, and go to state 4
    LOR             shift, and go to state 5
    TRUE            shift, and go to state 11
    FALSE           shift, and go to state 12
    INT_LIT         shift, and go to state 56
    SIGN_INT_LIT    shift, and go to state 14
    FLOAT_LIT       shift, and go to state 57
    SIGN_FLOAT_LIT  shift, and go to state 16
    ID              shift, and go to state 182
    '"'             shift, and go to state 18
    '('             shift, and go to state 19
    '!'             shift, and go to state 21

    $end            reduce using rule 92 (var)
    $end            [reduce using rule 106 (expression)]
    VAR             reduce using rule 92 (var)
    VAR             [reduce using rule 106 (expression)]
    INT             [reduce using rule 92 (var)]
    INT             [reduce using rule 106 (expression)]
    FLOAT           [reduce using rule 92 (var)]
    FLOAT           [reduce using rule 106 (expression)]
    GEQ             reduce using rule 92 (var)
    GEQ             [reduce using rule 106 (expression)]
    LEQ             reduce using rule 92 (var)
    LEQ             [reduce using rule 106 (expression)]
    EQL             reduce using rule 92 (var)
    EQL             [reduce using rule 106 (expression)]
    NEQ             reduce using rule 92 (var)
    NEQ             [reduce using rule 106 (expression)]
    LAND            [reduce using rule 92 (var)]
    LAND            [reduce using rule 106 (expression)]
    LOR             [reduce using rule 92 (var)]
    LOR             [reduce using rule 106 (expression)]
    NEWLINE         reduce using rule 92 (var)
    NEWLINE         [reduce using rule 106 (expression)]
    PRINT           reduce using rule 92 (var)
    PRINT           [reduce using rule 106 (expression)]
    PRINTLN         reduce using rule 92 (var)
    PRINTLN         [reduce using rule 106 (expression)]
    IF              reduce using rule 92 (var)
    IF              [reduce using rule 106 (expression)]
    FOR             reduce using rule 92 (var)
    FOR             [reduce using rule 106 (expression)]
    TRUE            [reduce using rule 92 (var)]
    TRUE            [reduce using rule 106 (expression)]
    FALSE           [reduce using rule 92 (var)]
    FALSE           [reduce using rule 106 (expression)]
    INT_LIT         [reduce using rule 92 (var)]
    INT_LIT         [reduce using rule 106 (expression)]
    SIGN_INT_LIT    [reduce using rule 92 (var)]
    SIGN_INT_LIT    [reduce using rule 106 (expression)]
    FLOAT_LIT       [reduce using rule 92 (var)]
    FLOAT_LIT       [reduce using rule 106 (expression)]
    SIGN_FLOAT_LIT  [reduce using rule 92 (var)]
    SIGN_FLOAT_LIT  [reduce using rule 106 (expression)]
    ID              [reduce using rule 92 (var)]
    ID              [reduce using rule 106 (expression)]
    '"'             [reduce using rule 92 (var)]
    '"'             [reduce using rule 106 (expression)]
    '('             [reduce using rule 92 (var)]
    '('             [reduce using rule 106 (expression)]
    '{'             reduce using rule 92 (var)
    '{'             [reduce using rule 106 (expression)]
    '}'             reduce using rule 92 (var)
    '}'             [reduce using rule 106 (expression)]
    ';'             reduce using rule 92 (var)
    ';'             [reduce using rule 106 (expression)]
    '>'             reduce using rule 92 (var)
    '>'             [reduce using rule 106 (expression)]
    '<'             reduce using rule 92 (var)
    '<'             [reduce using rule 106 (expression)]
    '!'             [reduce using rule 92 (var)]
    '!'             [reduce using rule 106 (expression)]
    $default        reduce using rule 92 (var)

    var                    go to state 185
    expression             go to state 177
    lor_expression         go to state 38
    land_expression        go to state 39
    comparsion_expression  go to state 40
    add_expression         go to state 41
    mul_expression         go to state 42
    operand                go to state 43
    term                   go to state 44
    bool                   go to state 178
    literal                go to state 61
    int_literal            go to state 179
    float_literal          go to state 180
    sign_literal           go to state 49
    string_literal         go to state 181
    literal_convert        go to state 51
    id_term                go to state 52


State 105

   81 assign: REM_ASSIGN . var

    INT             shift, and go to state 2
    FLOAT           shift, and go to state 3
    LAND            shift, and go to state 4
    LOR             shift, and go to state 5
    TRUE            shift, and go to state 11
    FALSE           shift, and go to state 12
    INT_LIT         shift, and go to state 56
    SIGN_INT_LIT    shift, and go to state 14
    FLOAT_LIT       shift, and go to state 57
    SIGN_FLOAT_LIT  shift, and go to state 16
    ID              shift, and go to state 182
    '"'             shift, and go to state 18
    '('             shift, and go to state 19
    '!'             shift, and go to state 21

    $end            reduce using rule 92 (var)
    $end            [reduce using rule 106 (expression)]
    VAR             reduce using rule 92 (var)
    VAR             [reduce using rule 106 (expression)]
    INT             [reduce using rule 92 (var)]
    INT             [reduce using rule 106 (expression)]
    FLOAT           [reduce using rule 92 (var)]
    FLOAT           [reduce using rule 106 (expression)]
    GEQ             reduce using rule 92 (var)
    GEQ             [reduce using rule 106 (expression)]
    LEQ             reduce using rule 92 (var)
    LEQ             [reduce using rule 106 (expression)]
    EQL             reduce using rule 92 (var)
    EQL             [reduce using rule 106 (expression)]
    NEQ             reduce using rule 92 (var)
    NEQ             [reduce using rule 106 (expression)]
    LAND            [reduce using rule 92 (var)]
    LAND            [reduce using rule 106 (expression)]
    LOR             [reduce using rule 92 (var)]
    LOR             [reduce using rule 106 (expression)]
    NEWLINE         reduce using rule 92 (var)
    NEWLINE         [reduce using rule 106 (expression)]
    PRINT           reduce using rule 92 (var)
    PRINT           [reduce using rule 106 (expression)]
    PRINTLN         reduce using rule 92 (var)
    PRINTLN         [reduce using rule 106 (expression)]
    IF              reduce using rule 92 (var)
    IF              [reduce using rule 106 (expression)]
    FOR             reduce using rule 92 (var)
    FOR             [reduce using rule 106 (expression)]
    TRUE            [reduce using rule 92 (var)]
    TRUE            [reduce using rule 106 (expression)]
    FALSE           [reduce using rule 92 (var)]
    FALSE           [reduce using rule 106 (expression)]
    INT_LIT         [reduce using rule 92 (var)]
    INT_LIT         [reduce using rule 106 (expression)]
    SIGN_INT_LIT    [reduce using rule 92 (var)]
    SIGN_INT_LIT    [reduce using rule 106 (expression)]
    FLOAT_LIT       [reduce using rule 92 (var)]
    FLOAT_LIT       [reduce using rule 106 (expression)]
    SIGN_FLOAT_LIT  [reduce using rule 92 (var)]
    SIGN_FLOAT_LIT  [reduce using rule 106 (expression)]
    ID              [reduce using rule 92 (var)]
    ID              [reduce using rule 106 (expression)]
    '"'             [reduce using rule 92 (var)]
    '"'             [reduce using rule 106 (expression)]
    '('             [reduce using rule 92 (var)]
    '('             [reduce using rule 106 (expression)]
    '{'             reduce using rule 92 (var)
    '{'             [reduce using rule 106 (expression)]
    '}'             reduce using rule 92 (var)
    '}'             [reduce using rule 106 (expression)]
    ';'             reduce using rule 92 (var)
    ';'             [reduce using rule 106 (expression)]
    '>'             reduce using rule 92 (var)
    '>'             [reduce using rule 106 (expression)]
    '<'             reduce using rule 92 (var)
    '<'             [reduce using rule 106 (expression)]
    '!'             [reduce using rule 92 (var)]
    '!'             [reduce using rule 106 (expression)]
    $default        reduce using rule 92 (var)

    var                    go to state 186
    expression             go to state 177
    lor_expression         go to state 38
    land_expression        go to state 39
    comparsion_expression  go to state 40
    add_expression         go to state 41
    mul_expression         go to state 42
    operand                go to state 43
    term                   go to state 44
    bool                   go to state 178
    literal                go to state 61
    int_literal            go to state 179
    float_literal          go to state 180
    sign_literal           go to state 49
    string_literal         go to state 181
    literal_convert        go to state 51
    id_term                go to state 52


State 106

   83 error_assign: '=' . var

    INT             shift, and go to state 2
    FLOAT           shift, and go to state 3
    LAND            shift, and go to state 4
    LOR             shift, and go to state 5
    TRUE            shift, and go to state 11
    FALSE           shift, and go to state 12
    INT_LIT         shift, and go to state 56
    SIGN_INT_LIT    shift, and go to state 14
    FLOAT_LIT       shift, and go to state 57
    SIGN_FLOAT_LIT  shift, and go to state 16
    ID              shift, and go to state 182
    '"'             shift, and go to state 18
    '('             shift, and go to state 19
    '!'             shift, and go to state 21

    $end            reduce using rule 92 (var)
    $end            [reduce using rule 106 (expression)]
    VAR             reduce using rule 92 (var)
    VAR             [reduce using rule 106 (expression)]
    INT             [reduce using rule 92 (var)]
    INT             [reduce using rule 106 (expression)]
    FLOAT           [reduce using rule 92 (var)]
    FLOAT           [reduce using rule 106 (expression)]
    GEQ             reduce using rule 92 (var)
    GEQ             [reduce using rule 106 (expression)]
    LEQ             reduce using rule 92 (var)
    LEQ             [reduce using rule 106 (expression)]
    EQL             reduce using rule 92 (var)
    EQL             [reduce using rule 106 (expression)]
    NEQ             reduce using rule 92 (var)
    NEQ             [reduce using rule 106 (expression)]
    LAND            [reduce using rule 92 (var)]
    LAND            [reduce using rule 106 (expression)]
    LOR             [reduce using rule 92 (var)]
    LOR             [reduce using rule 106 (expression)]
    NEWLINE         reduce using rule 92 (var)
    NEWLINE         [reduce using rule 106 (expression)]
    PRINT           reduce using rule 92 (var)
    PRINT           [reduce using rule 106 (expression)]
    PRINTLN         reduce using rule 92 (var)
    PRINTLN         [reduce using rule 106 (expression)]
    IF              reduce using rule 92 (var)
    IF              [reduce using rule 106 (expression)]
    FOR             reduce using rule 92 (var)
    FOR             [reduce using rule 106 (expression)]
    TRUE            [reduce using rule 92 (var)]
    TRUE            [reduce using rule 106 (expression)]
    FALSE           [reduce using rule 92 (var)]
    FALSE           [reduce using rule 106 (expression)]
    INT_LIT         [reduce using rule 92 (var)]
    INT_LIT         [reduce using rule 106 (expression)]
    SIGN_INT_LIT    [reduce using rule 92 (var)]
    SIGN_INT_LIT    [reduce using rule 106 (expression)]
    FLOAT_LIT       [reduce using rule 92 (var)]
    FLOAT_LIT       [reduce using rule 106 (expression)]
    SIGN_FLOAT_LIT  [reduce using rule 92 (var)]
    SIGN_FLOAT_LIT  [reduce using rule 106 (expression)]
    ID              [reduce using rule 92 (var)]
    ID              [reduce using rule 106 (expression)]
    '"'             [reduce using rule 92 (var)]
    '"'             [reduce using rule 106 (expression)]
    '('             [reduce using rule 92 (var)]
    '('             [reduce using rule 106 (expression)]
    '{'             reduce using rule 92 (var)
    '{'             [reduce using rule 106 (expression)]
    '}'             reduce using rule 92 (var)
    '}'             [reduce using rule 106 (expression)]
    ';'             reduce using rule 92 (var)
    ';'             [reduce using rule 106 (expression)]
    '>'             reduce using rule 92 (var)
    '>'             [reduce using rule 106 (expression)]
    '<'             reduce using rule 92 (var)
    '<'             [reduce using rule 106 (expression)]
    '!'             [reduce using rule 92 (var)]
    '!'             [reduce using rule 106 (expression)]
    $default        reduce using rule 92 (var)

    var                    go to state 187
    expression             go to state 177
    lor_expression         go to state 38
    land_expression        go to state 39
    comparsion_expression  go to state 40
    add_expression         go to state 41
    mul_expression         go to state 42
    operand                go to state 43
    term                   go to state 44
    bool                   go to state 178
    literal                go to state 61
    int_literal            go to state 179
    float_literal          go to state 180
    sign_literal           go to state 49
    string_literal         go to state 181
    literal_convert        go to state 51
    id_term                go to state 52


State 107

   24 declaration: ident assign . NEWLINE

    NEWLINE  shift, and go to state 188


State 108

   82 assign: error_assign .

    $default  reduce using rule 82 (assign)


State 109

  112 comparsion_expression: expression GEQ . add_expression

    INT             shift, and go to state 2
    FLOAT           shift, and go to state 3
    TRUE            shift, and go to state 11
    FALSE           shift, and go to state 12
    INT_LIT         shift, and go to state 56
    SIGN_INT_LIT    shift, and go to state 14
    FLOAT_LIT       shift, and go to state 57
    SIGN_FLOAT_LIT  shift, and go to state 16
    ID              shift, and go to state 58
    '"'             shift, and go to state 18
    '('             shift, and go to state 19
    '!'             shift, and go to state 21

    add_expression   go to state 189
    mul_expression   go to state 42
    operand          go to state 43
    term             go to state 44
    bool             go to state 60
    literal          go to state 61
    int_literal      go to state 62
    float_literal    go to state 63
    sign_literal     go to state 49
    string_literal   go to state 50
    literal_convert  go to state 51
    id_term          go to state 52


State 110

  113 comparsion_expression: expression LEQ . add_expression

    INT             shift, and go to state 2
    FLOAT           shift, and go to state 3
    TRUE            shift, and go to state 11
    FALSE           shift, and go to state 12
    INT_LIT         shift, and go to state 56
    SIGN_INT_LIT    shift, and go to state 14
    FLOAT_LIT       shift, and go to state 57
    SIGN_FLOAT_LIT  shift, and go to state 16
    ID              shift, and go to state 58
    '"'             shift, and go to state 18
    '('             shift, and go to state 19
    '!'             shift, and go to state 21

    add_expression   go to state 190
    mul_expression   go to state 42
    operand          go to state 43
    term             go to state 44
    bool             go to state 60
    literal          go to state 61
    int_literal      go to state 62
    float_literal    go to state 63
    sign_literal     go to state 49
    string_literal   go to state 50
    literal_convert  go to state 51
    id_term          go to state 52


State 111

  114 comparsion_expression: expression EQL . add_expression

    INT             shift, and go to state 2
    FLOAT           shift, and go to state 3
    TRUE            shift, and go to state 11
    FALSE           shift, and go to state 12
    INT_LIT         shift, and go to state 56
    SIGN_INT_LIT    shift, and go to state 14
    FLOAT_LIT       shift, and go to state 57
    SIGN_FLOAT_LIT  shift, and go to state 16
    ID              shift, and go to state 58
    '"'             shift, and go to state 18
    '('             shift, and go to state 19
    '!'             shift, and go to state 21

    add_expression   go to state 191
    mul_expression   go to state 42
    operand          go to state 43
    term             go to state 44
    bool             go to state 60
    literal          go to state 61
    int_literal      go to state 62
    float_literal    go to state 63
    sign_literal     go to state 49
    string_literal   go to state 50
    literal_convert  go to state 51
    id_term          go to state 52


State 112

  115 comparsion_expression: expression NEQ . add_expression

    INT             shift, and go to state 2
    FLOAT           shift, and go to state 3
    TRUE            shift, and go to state 11
    FALSE           shift, and go to state 12
    INT_LIT         shift, and go to state 56
    SIGN_INT_LIT    shift, and go to state 14
    FLOAT_LIT       shift, and go to state 57
    SIGN_FLOAT_LIT  shift, and go to state 16
    ID              shift, and go to state 58
    '"'             shift, and go to state 18
    '('             shift, and go to state 19
    '!'             shift, and go to state 21

    add_expression   go to state 192
    mul_expression   go to state 42
    operand          go to state 43
    term             go to state 44
    bool             go to state 60
    literal          go to state 61
    int_literal      go to state 62
    float_literal    go to state 63
    sign_literal     go to state 49
    string_literal   go to state 50
    literal_convert  go to state 51
    id_term          go to state 52


State 113

  110 comparsion_expression: expression '>' . add_expression

    INT             shift, and go to state 2
    FLOAT           shift, and go to state 3
    TRUE            shift, and go to state 11
    FALSE           shift, and go to state 12
    INT_LIT         shift, and go to state 56
    SIGN_INT_LIT    shift, and go to state 14
    FLOAT_LIT       shift, and go to state 57
    SIGN_FLOAT_LIT  shift, and go to state 16
    ID              shift, and go to state 58
    '"'             shift, and go to state 18
    '('             shift, and go to state 19
    '!'             shift, and go to state 21

    add_expression   go to state 193
    mul_expression   go to state 42
    operand          go to state 43
    term             go to state 44
    bool             go to state 60
    literal          go to state 61
    int_literal      go to state 62
    float_literal    go to state 63
    sign_literal     go to state 49
    string_literal   go to state 50
    literal_convert  go to state 51
    id_term          go to state 52


State 114

  111 comparsion_expression: expression '<' . add_expression

    INT             shift, and go to state 2
    FLOAT           shift, and go to state 3
    TRUE            shift, and go to state 11
    FALSE           shift, and go to state 12
    INT_LIT         shift, and go to state 56
    SIGN_INT_LIT    shift, and go to state 14
    FLOAT_LIT       shift, and go to state 57
    SIGN_FLOAT_LIT  shift, and go to state 16
    ID              shift, and go to state 58
    '"'             shift, and go to state 18
    '('             shift, and go to state 19
    '!'             shift, and go to state 21

    add_expression   go to state 194
    mul_expression   go to state 42
    operand          go to state 43
    term             go to state 44
    bool             go to state 60
    literal          go to state 61
    int_literal      go to state 62
    float_literal    go to state 63
    sign_literal     go to state 49
    string_literal   go to state 50
    literal_convert  go to state 51
    id_term          go to state 52


State 115

  116 comparsion_expression: expression add_expression .
  117 add_expression: add_expression . '+' mul_expression
  118               | add_expression . '-' mul_expression

    '+'  shift, and go to state 118
    '-'  shift, and go to state 119

    '+'       [reduce using rule 116 (comparsion_expression)]
    '-'       [reduce using rule 116 (comparsion_expression)]
    $default  reduce using rule 116 (comparsion_expression)


State 116

  104 expression: lor_expression expression .
  110 comparsion_expression: expression . '>' add_expression
  111                      | expression . '<' add_expression
  112                      | expression . GEQ add_expression
  113                      | expression . LEQ add_expression
  114                      | expression . EQL add_expression
  115                      | expression . NEQ add_expression
  116                      | expression . add_expression

    INT             shift, and go to state 2
    FLOAT           shift, and go to state 3
    GEQ             shift, and go to state 109
    LEQ             shift, and go to state 110
    EQL             shift, and go to state 111
    NEQ             shift, and go to state 112
    TRUE            shift, and go to state 11
    FALSE           shift, and go to state 12
    INT_LIT         shift, and go to state 56
    SIGN_INT_LIT    shift, and go to state 14
    FLOAT_LIT       shift, and go to state 57
    SIGN_FLOAT_LIT  shift, and go to state 16
    ID              shift, and go to state 58
    '"'             shift, and go to state 18
    '('             shift, and go to state 19
    '>'             shift, and go to state 113
    '<'             shift, and go to state 114
    '!'             shift, and go to state 21

    INT             [reduce using rule 104 (expression)]
    FLOAT           [reduce using rule 104 (expression)]
    GEQ             [reduce using rule 104 (expression)]
    LEQ             [reduce using rule 104 (expression)]
    EQL             [reduce using rule 104 (expression)]
    NEQ             [reduce using rule 104 (expression)]
    TRUE            [reduce using rule 104 (expression)]
    FALSE           [reduce using rule 104 (expression)]
    INT_LIT         [reduce using rule 104 (expression)]
    SIGN_INT_LIT    [reduce using rule 104 (expression)]
    FLOAT_LIT       [reduce using rule 104 (expression)]
    SIGN_FLOAT_LIT  [reduce using rule 104 (expression)]
    ID              [reduce using rule 104 (expression)]
    '"'             [reduce using rule 104 (expression)]
    '('             [reduce using rule 104 (expression)]
    '>'             [reduce using rule 104 (expression)]
    '<'             [reduce using rule 104 (expression)]
    '!'             [reduce using rule 104 (expression)]
    $default        reduce using rule 104 (expression)

    add_expression   go to state 115
    mul_expression   go to state 42
    operand          go to state 43
    term             go to state 44
    bool             go to state 60
    literal          go to state 61
    int_literal      go to state 62
    float_literal    go to state 63
    sign_literal     go to state 49
    string_literal   go to state 50
    literal_convert  go to state 51
    id_term          go to state 52


State 117

  103 expression: comparsion_expression expression .
  110 comparsion_expression: expression . '>' add_expression
  111                      | expression . '<' add_expression
  112                      | expression . GEQ add_expression
  113                      | expression . LEQ add_expression
  114                      | expression . EQL add_expression
  115                      | expression . NEQ add_expression
  116                      | expression . add_expression

    INT             shift, and go to state 2
    FLOAT           shift, and go to state 3
    GEQ             shift, and go to state 109
    LEQ             shift, and go to state 110
    EQL             shift, and go to state 111
    NEQ             shift, and go to state 112
    TRUE            shift, and go to state 11
    FALSE           shift, and go to state 12
    INT_LIT         shift, and go to state 56
    SIGN_INT_LIT    shift, and go to state 14
    FLOAT_LIT       shift, and go to state 57
    SIGN_FLOAT_LIT  shift, and go to state 16
    ID              shift, and go to state 58
    '"'             shift, and go to state 18
    '('             shift, and go to state 19
    '>'             shift, and go to state 113
    '<'             shift, and go to state 114
    '!'             shift, and go to state 21

    INT             [reduce using rule 103 (expression)]
    FLOAT           [reduce using rule 103 (expression)]
    GEQ             [reduce using rule 103 (expression)]
    LEQ             [reduce using rule 103 (expression)]
    EQL             [reduce using rule 103 (expression)]
    NEQ             [reduce using rule 103 (expression)]
    TRUE            [reduce using rule 103 (expression)]
    FALSE           [reduce using rule 103 (expression)]
    INT_LIT         [reduce using rule 103 (expression)]
    SIGN_INT_LIT    [reduce using rule 103 (expression)]
    FLOAT_LIT       [reduce using rule 103 (expression)]
    SIGN_FLOAT_LIT  [reduce using rule 103 (expression)]
    ID              [reduce using rule 103 (expression)]
    '"'             [reduce using rule 103 (expression)]
    '('             [reduce using rule 103 (expression)]
    '>'             [reduce using rule 103 (expression)]
    '<'             [reduce using rule 103 (expression)]
    '!'             [reduce using rule 103 (expression)]
    $default        reduce using rule 103 (expression)

    add_expression   go to state 115
    mul_expression   go to state 42
    operand          go to state 43
    term             go to state 44
    bool             go to state 60
    literal          go to state 61
    int_literal      go to state 62
    float_literal    go to state 63
    sign_literal     go to state 49
    string_literal   go to state 50
    literal_convert  go to state 51
    id_term          go to state 52


State 118

  117 add_expression: add_expression '+' . mul_expression

    INT             shift, and go to state 2
    FLOAT           shift, and go to state 3
    TRUE            shift, and go to state 11
    FALSE           shift, and go to state 12
    INT_LIT         shift, and go to state 56
    SIGN_INT_LIT    shift, and go to state 14
    FLOAT_LIT       shift, and go to state 57
    SIGN_FLOAT_LIT  shift, and go to state 16
    ID              shift, and go to state 58
    '"'             shift, and go to state 18
    '('             shift, and go to state 19
    '!'             shift, and go to state 21

    mul_expression   go to state 195
    operand          go to state 43
    term             go to state 44
    bool             go to state 60
    literal          go to state 61
    int_literal      go to state 62
    float_literal    go to state 63
    sign_literal     go to state 49
    string_literal   go to state 50
    literal_convert  go to state 51
    id_term          go to state 52


State 119

  118 add_expression: add_expression '-' . mul_expression

    INT             shift, and go to state 2
    FLOAT           shift, and go to state 3
    TRUE            shift, and go to state 11
    FALSE           shift, and go to state 12
    INT_LIT         shift, and go to state 56
    SIGN_INT_LIT    shift, and go to state 14
    FLOAT_LIT       shift, and go to state 57
    SIGN_FLOAT_LIT  shift, and go to state 16
    ID              shift, and go to state 58
    '"'             shift, and go to state 18
    '('             shift, and go to state 19
    '!'             shift, and go to state 21

    mul_expression   go to state 196
    operand          go to state 43
    term             go to state 44
    bool             go to state 60
    literal          go to state 61
    int_literal      go to state 62
    float_literal    go to state 63
    sign_literal     go to state 49
    string_literal   go to state 50
    literal_convert  go to state 51
    id_term          go to state 52


State 120

  120 mul_expression: mul_expression '*' . operand

    INT             shift, and go to state 2
    FLOAT           shift, and go to state 3
    TRUE            shift, and go to state 11
    FALSE           shift, and go to state 12
    INT_LIT         shift, and go to state 56
    SIGN_INT_LIT    shift, and go to state 14
    FLOAT_LIT       shift, and go to state 57
    SIGN_FLOAT_LIT  shift, and go to state 16
    ID              shift, and go to state 58
    '"'             shift, and go to state 18
    '('             shift, and go to state 19
    '!'             shift, and go to state 21

    operand          go to state 197
    term             go to state 44
    bool             go to state 60
    literal          go to state 61
    int_literal      go to state 62
    float_literal    go to state 63
    sign_literal     go to state 49
    string_literal   go to state 50
    literal_convert  go to state 51
    id_term          go to state 52


State 121

  122 mul_expression: mul_expression '%' . operand

    INT             shift, and go to state 2
    FLOAT           shift, and go to state 3
    TRUE            shift, and go to state 11
    FALSE           shift, and go to state 12
    INT_LIT         shift, and go to state 56
    SIGN_INT_LIT    shift, and go to state 14
    FLOAT_LIT       shift, and go to state 57
    SIGN_FLOAT_LIT  shift, and go to state 16
    ID              shift, and go to state 58
    '"'             shift, and go to state 18
    '('             shift, and go to state 19
    '!'             shift, and go to state 21

    operand          go to state 198
    term             go to state 44
    bool             go to state 60
    literal          go to state 61
    int_literal      go to state 62
    float_literal    go to state 63
    sign_literal     go to state 49
    string_literal   go to state 50
    literal_convert  go to state 51
    id_term          go to state 52


State 122

  121 mul_expression: mul_expression '/' . operand

    INT             shift, and go to state 2
    FLOAT           shift, and go to state 3
    TRUE            shift, and go to state 11
    FALSE           shift, and go to state 12
    INT_LIT         shift, and go to state 56
    SIGN_INT_LIT    shift, and go to state 14
    FLOAT_LIT       shift, and go to state 57
    SIGN_FLOAT_LIT  shift, and go to state 16
    ID              shift, and go to state 58
    '"'             shift, and go to state 18
    '('             shift, and go to state 19
    '!'             shift, and go to state 21

    operand          go to state 199
    term             go to state 44
    bool             go to state 60
    literal          go to state 61
    int_literal      go to state 62
    float_literal    go to state 63
    sign_literal     go to state 49
    string_literal   go to state 50
    literal_convert  go to state 51
    id_term          go to state 52


State 123

   54 invalid_arithmetic: bool LOR . expression

    INT             shift, and go to state 2
    FLOAT           shift, and go to state 3
    LAND            shift, and go to state 4
    LOR             shift, and go to state 5
    TRUE            shift, and go to state 11
    FALSE           shift, and go to state 12
    INT_LIT         shift, and go to state 56
    SIGN_INT_LIT    shift, and go to state 14
    FLOAT_LIT       shift, and go to state 57
    SIGN_FLOAT_LIT  shift, and go to state 16
    ID              shift, and go to state 58
    '"'             shift, and go to state 18
    '('             shift, and go to state 19
    '!'             shift, and go to state 21

    INT             [reduce using rule 106 (expression)]
    FLOAT           [reduce using rule 106 (expression)]
    LAND            [reduce using rule 106 (expression)]
    LOR             [reduce using rule 106 (expression)]
    TRUE            [reduce using rule 106 (expression)]
    FALSE           [reduce using rule 106 (expression)]
    INT_LIT         [reduce using rule 106 (expression)]
    SIGN_INT_LIT    [reduce using rule 106 (expression)]
    FLOAT_LIT       [reduce using rule 106 (expression)]
    SIGN_FLOAT_LIT  [reduce using rule 106 (expression)]
    ID              [reduce using rule 106 (expression)]
    '"'             [reduce using rule 106 (expression)]
    '('             [reduce using rule 106 (expression)]
    '!'             [reduce using rule 106 (expression)]
    $default        reduce using rule 106 (expression)

    expression             go to state 200
    lor_expression         go to state 38
    land_expression        go to state 39
    comparsion_expression  go to state 40
    add_expression         go to state 41
    mul_expression         go to state 42
    operand                go to state 43
    term                   go to state 44
    bool                   go to state 60
    literal                go to state 61
    int_literal            go to state 62
    float_literal          go to state 63
    sign_literal           go to state 49
    string_literal         go to state 50
    literal_convert        go to state 51
    id_term                go to state 52


State 124

   85 error_stmt: literal assign .

    $default  reduce using rule 85 (error_stmt)


State 125

   52 invalid_arithmetic: int_literal LAND . bool

    TRUE   shift, and go to state 11
    FALSE  shift, and go to state 12
    '!'    shift, and go to state 21

    bool  go to state 201


State 126

   39 pure_arithmetic: int_literal '+' . int_literal

    INT_LIT  shift, and go to state 56

    int_literal  go to state 202


State 127

   40 pure_arithmetic: int_literal '-' . int_literal

    INT_LIT  shift, and go to state 56

    int_literal  go to state 203


State 128

   53 invalid_arithmetic: float_literal LAND . bool

    TRUE   shift, and go to state 11
    FALSE  shift, and go to state 12
    '!'    shift, and go to state 21

    bool  go to state 204


State 129

   16 declaration: VAR ID INT . literal_initial NEWLINE

    '='  shift, and go to state 205

    $default  reduce using rule 30 (literal_initial)

    literal_initial  go to state 206


State 130

   18 declaration: VAR ID FLOAT . literal_initial NEWLINE

    '='  shift, and go to state 205

    $default  reduce using rule 30 (literal_initial)

    literal_initial  go to state 207


State 131

   19 declaration: VAR ID BOOL . bool_initial NEWLINE

    '='  shift, and go to state 208

    $default  reduce using rule 28 (bool_initial)

    bool_initial  go to state 209


State 132

   17 declaration: VAR ID STRING . string_initial

    NEWLINE  shift, and go to state 210
    '='      shift, and go to state 211

    string_initial  go to state 212


State 133

   20 declaration: VAR ID '[' . INT_LIT ']' INT NEWLINE
   21            | VAR ID '[' . INT_LIT ']' FLOAT NEWLINE

    INT_LIT  shift, and go to state 213


State 134

  144 literal_convert: INT '(' FLOAT_LIT . ')'

    ')'  shift, and go to state 214


State 135

   93 ident: ID .

    $default  reduce using rule 93 (ident)


State 136

  143 literal_convert: INT '(' ident . ')'

    ')'  shift, and go to state 215


State 137

  146 literal_convert: FLOAT '(' INT_LIT . ')'

    ')'  shift, and go to state 216


State 138

  145 literal_convert: FLOAT '(' ident . ')'

    ')'  shift, and go to state 217


State 139

   38 print_stmt: PRINT $@3 '(' . expression ')'

    INT             shift, and go to state 2
    FLOAT           shift, and go to state 3
    LAND            shift, and go to state 4
    LOR             shift, and go to state 5
    TRUE            shift, and go to state 11
    FALSE           shift, and go to state 12
    INT_LIT         shift, and go to state 56
    SIGN_INT_LIT    shift, and go to state 14
    FLOAT_LIT       shift, and go to state 57
    SIGN_FLOAT_LIT  shift, and go to state 16
    ID              shift, and go to state 58
    '"'             shift, and go to state 18
    '('             shift, and go to state 19
    '!'             shift, and go to state 21

    INT             [reduce using rule 106 (expression)]
    FLOAT           [reduce using rule 106 (expression)]
    TRUE            [reduce using rule 106 (expression)]
    FALSE           [reduce using rule 106 (expression)]
    INT_LIT         [reduce using rule 106 (expression)]
    SIGN_INT_LIT    [reduce using rule 106 (expression)]
    FLOAT_LIT       [reduce using rule 106 (expression)]
    SIGN_FLOAT_LIT  [reduce using rule 106 (expression)]
    ID              [reduce using rule 106 (expression)]
    '"'             [reduce using rule 106 (expression)]
    '('             [reduce using rule 106 (expression)]
    '!'             [reduce using rule 106 (expression)]
    $default        reduce using rule 106 (expression)

    expression             go to state 218
    lor_expression         go to state 38
    land_expression        go to state 39
    comparsion_expression  go to state 40
    add_expression         go to state 41
    mul_expression         go to state 42
    operand                go to state 43
    term                   go to state 44
    bool                   go to state 60
    literal                go to state 61
    int_literal            go to state 62
    float_literal          go to state 63
    sign_literal           go to state 49
    string_literal         go to state 50
    literal_convert        go to state 51
    id_term                go to state 52


State 140

   36 print_stmt: PRINTLN $@2 '(' . expression ')'

    INT             shift, and go to state 2
    FLOAT           shift, and go to state 3
    LAND            shift, and go to state 4
    LOR             shift, and go to state 5
    TRUE            shift, and go to state 11
    FALSE           shift, and go to state 12
    INT_LIT         shift, and go to state 56
    SIGN_INT_LIT    shift, and go to state 14
    FLOAT_LIT       shift, and go to state 57
    SIGN_FLOAT_LIT  shift, and go to state 16
    ID              shift, and go to state 58
    '"'             shift, and go to state 18
    '('             shift, and go to state 19
    '!'             shift, and go to state 21

    INT             [reduce using rule 106 (expression)]
    FLOAT           [reduce using rule 106 (expression)]
    TRUE            [reduce using rule 106 (expression)]
    FALSE           [reduce using rule 106 (expression)]
    INT_LIT         [reduce using rule 106 (expression)]
    SIGN_INT_LIT    [reduce using rule 106 (expression)]
    FLOAT_LIT       [reduce using rule 106 (expression)]
    SIGN_FLOAT_LIT  [reduce using rule 106 (expression)]
    ID              [reduce using rule 106 (expression)]
    '"'             [reduce using rule 106 (expression)]
    '('             [reduce using rule 106 (expression)]
    '!'             [reduce using rule 106 (expression)]
    $default        reduce using rule 106 (expression)

    expression             go to state 219
    lor_expression         go to state 38
    land_expression        go to state 39
    comparsion_expression  go to state 40
    add_expression         go to state 41
    mul_expression         go to state 42
    operand                go to state 43
    term                   go to state 44
    bool                   go to state 60
    literal                go to state 61
    int_literal            go to state 62
    float_literal          go to state 63
    sign_literal           go to state 49
    string_literal         go to state 50
    literal_convert        go to state 51
    id_term                go to state 52


State 141

   63 if_stmt: IF expression block . else_stmt

    ELSE  shift, and go to state 220

    $default  reduce using rule 66 (else_stmt)

    else_stmt  go to state 221


State 142

   56 if_stmt: IF int_literal $@4 . block

    '{'  shift, and go to state 20

    block  go to state 222


State 143

   58 if_stmt: IF float_literal $@5 . block

    '{'  shift, and go to state 20

    block  go to state 223


State 144

   60 if_stmt: IF string_literal $@6 . block

    '{'  shift, and go to state 20

    block  go to state 224


State 145

   62 if_stmt: IF id_term $@7 . block

    '{'  shift, and go to state 20

    block  go to state 225


State 146

   43 pure_arithmetic: ID '+' . INT_LIT

    INT_LIT  shift, and go to state 162


State 147

   51 invalid_arithmetic: ID '%' . INT_LIT

    INT_LIT  shift, and go to state 166


State 148

   72 for_stmt: FOR pure_arithmetic '{' . $@10 stmts '}'

    $default  reduce using rule 71 ($@10)

    $@10  go to state 226


State 149

   73 for_stmt: FOR for_expr block .

    $default  reduce using rule 73 (for_stmt)


State 150

   74 for_expr: ident assign . ';' ident comparsion_expression ';' arithmetic_add_stmt
   75         | ident assign . ';' ident comparsion_expression ';' incdec_stmt

    ';'  shift, and go to state 227


State 151

   70 for_stmt: FOR int_literal '{' . $@9 stmts '}'

    $default  reduce using rule 69 ($@9)

    $@9  go to state 228


State 152

   68 for_stmt: FOR float_literal '{' . $@8 stmts '}'

    $default  reduce using rule 67 ($@8)

    $@8  go to state 229


State 153

   45 invalid_arithmetic: INT_LIT '+' FLOAT_LIT .

    $default  reduce using rule 45 (invalid_arithmetic)


State 154

   47 invalid_arithmetic: INT_LIT '-' FLOAT_LIT .

    $default  reduce using rule 47 (invalid_arithmetic)


State 155

   49 invalid_arithmetic: INT_LIT '*' FLOAT_LIT .

    $default  reduce using rule 49 (invalid_arithmetic)


State 156

   46 invalid_arithmetic: FLOAT_LIT '+' INT_LIT .

    $default  reduce using rule 46 (invalid_arithmetic)


State 157

   41 pure_arithmetic: FLOAT_LIT '+' FLOAT_LIT .

    $default  reduce using rule 41 (pure_arithmetic)


State 158

   48 invalid_arithmetic: FLOAT_LIT '-' INT_LIT .

    $default  reduce using rule 48 (invalid_arithmetic)


State 159

   42 pure_arithmetic: FLOAT_LIT '-' FLOAT_LIT .

    $default  reduce using rule 42 (pure_arithmetic)


State 160

   50 invalid_arithmetic: FLOAT_LIT '*' INT_LIT .

    $default  reduce using rule 50 (invalid_arithmetic)


State 161

   23 declaration: ID '[' INT_LIT . $@1 ']' array_initial NEWLINE

    $default  reduce using rule 22 ($@1)

    $@1  go to state 230


State 162

   43 pure_arithmetic: ID '+' INT_LIT .

    $default  reduce using rule 43 (pure_arithmetic)


State 163

   96 arithmetic_add_stmt: ID '+' ID .

    $default  reduce using rule 96 (arithmetic_add_stmt)


State 164

   97 arithmetic_add_stmt: ID '-' ID .

    $default  reduce using rule 97 (arithmetic_add_stmt)


State 165

   99 arithmetic_mul_stmt: ID '*' ID .

    $default  reduce using rule 99 (arithmetic_mul_stmt)


State 166

   51 invalid_arithmetic: ID '%' INT_LIT .

    $default  reduce using rule 51 (invalid_arithmetic)


State 167

  101 arithmetic_mul_stmt: ID '%' ID .

    $default  reduce using rule 101 (arithmetic_mul_stmt)


State 168

  100 arithmetic_mul_stmt: ID '/' ID .

    $default  reduce using rule 100 (arithmetic_mul_stmt)


State 169

  148 id_term: ID $@13 '[' . expression ']'

    INT             shift, and go to state 2
    FLOAT           shift, and go to state 3
    LAND            shift, and go to state 4
    LOR             shift, and go to state 5
    TRUE            shift, and go to state 11
    FALSE           shift, and go to state 12
    INT_LIT         shift, and go to state 56
    SIGN_INT_LIT    shift, and go to state 14
    FLOAT_LIT       shift, and go to state 57
    SIGN_FLOAT_LIT  shift, and go to state 16
    ID              shift, and go to state 58
    '"'             shift, and go to state 18
    '('             shift, and go to state 19
    '!'             shift, and go to state 21

    INT             [reduce using rule 106 (expression)]
    FLOAT           [reduce using rule 106 (expression)]
    TRUE            [reduce using rule 106 (expression)]
    FALSE           [reduce using rule 106 (expression)]
    INT_LIT         [reduce using rule 106 (expression)]
    SIGN_INT_LIT    [reduce using rule 106 (expression)]
    FLOAT_LIT       [reduce using rule 106 (expression)]
    SIGN_FLOAT_LIT  [reduce using rule 106 (expression)]
    ID              [reduce using rule 106 (expression)]
    '"'             [reduce using rule 106 (expression)]
    '('             [reduce using rule 106 (expression)]
    '!'             [reduce using rule 106 (expression)]
    $default        reduce using rule 106 (expression)

    expression             go to state 231
    lor_expression         go to state 38
    land_expression        go to state 39
    comparsion_expression  go to state 40
    add_expression         go to state 41
    mul_expression         go to state 42
    operand                go to state 43
    term                   go to state 44
    bool                   go to state 60
    literal                go to state 61
    int_literal            go to state 62
    float_literal          go to state 63
    sign_literal           go to state 49
    string_literal         go to state 50
    literal_convert        go to state 51
    id_term                go to state 52


State 170

  142 string_literal: '"' STRING_LIT '"' .

    $default  reduce using rule 142 (string_literal)


State 171

  124 operand: '(' expression ')' .

    $default  reduce using rule 124 (operand)


State 172

   95 block: '{' $@11 stmts . '}'

    '}'  shift, and go to state 232


State 173

  133 bool: '!' bool $@12 . expression

    INT             shift, and go to state 2
    FLOAT           shift, and go to state 3
    LAND            shift, and go to state 4
    LOR             shift, and go to state 5
    TRUE            shift, and go to state 11
    FALSE           shift, and go to state 12
    INT_LIT         shift, and go to state 56
    SIGN_INT_LIT    shift, and go to state 14
    FLOAT_LIT       shift, and go to state 57
    SIGN_FLOAT_LIT  shift, and go to state 16
    ID              shift, and go to state 58
    '"'             shift, and go to state 18
    '('             shift, and go to state 19
    '!'             shift, and go to state 21

    INT             [reduce using rule 106 (expression)]
    FLOAT           [reduce using rule 106 (expression)]
    LAND            [reduce using rule 106 (expression)]
    LOR             [reduce using rule 106 (expression)]
    TRUE            [reduce using rule 106 (expression)]
    FALSE           [reduce using rule 106 (expression)]
    INT_LIT         [reduce using rule 106 (expression)]
    SIGN_INT_LIT    [reduce using rule 106 (expression)]
    FLOAT_LIT       [reduce using rule 106 (expression)]
    SIGN_FLOAT_LIT  [reduce using rule 106 (expression)]
    ID              [reduce using rule 106 (expression)]
    '"'             [reduce using rule 106 (expression)]
    '('             [reduce using rule 106 (expression)]
    '!'             [reduce using rule 106 (expression)]
    $default        reduce using rule 106 (expression)

    expression             go to state 233
    lor_expression         go to state 38
    land_expression        go to state 39
    comparsion_expression  go to state 40
    add_expression         go to state 41
    mul_expression         go to state 42
    operand                go to state 43
    term                   go to state 44
    bool                   go to state 60
    literal                go to state 61
    int_literal            go to state 62
    float_literal          go to state 63
    sign_literal           go to state 49
    string_literal         go to state 50
    literal_convert        go to state 51
    id_term                go to state 52


State 174

    3 stmts: stmt stmts .

    $default  reduce using rule 3 (stmts)


State 175

   84 error_assign: ADD_ASSIGN ID .
   91 var: ID .
  148 id_term: ID . $@13 '[' expression ']'
  149        | ID .

    $end            reduce using rule 84 (error_assign)
    $end            [reduce using rule 91 (var)]
    $end            [reduce using rule 149 (id_term)]
    VAR             reduce using rule 84 (error_assign)
    VAR             [reduce using rule 91 (var)]
    VAR             [reduce using rule 149 (id_term)]
    INT             reduce using rule 84 (error_assign)
    INT             [reduce using rule 91 (var)]
    INT             [reduce using rule 149 (id_term)]
    FLOAT           reduce using rule 84 (error_assign)
    FLOAT           [reduce using rule 91 (var)]
    FLOAT           [reduce using rule 149 (id_term)]
    GEQ             reduce using rule 84 (error_assign)
    GEQ             [reduce using rule 91 (var)]
    GEQ             [reduce using rule 149 (id_term)]
    LEQ             reduce using rule 84 (error_assign)
    LEQ             [reduce using rule 91 (var)]
    LEQ             [reduce using rule 149 (id_term)]
    EQL             reduce using rule 84 (error_assign)
    EQL             [reduce using rule 91 (var)]
    EQL             [reduce using rule 149 (id_term)]
    NEQ             reduce using rule 84 (error_assign)
    NEQ             [reduce using rule 91 (var)]
    NEQ             [reduce using rule 149 (id_term)]
    LAND            reduce using rule 84 (error_assign)
    LAND            [reduce using rule 91 (var)]
    LAND            [reduce using rule 149 (id_term)]
    LOR             reduce using rule 84 (error_assign)
    LOR             [reduce using rule 91 (var)]
    LOR             [reduce using rule 149 (id_term)]
    NEWLINE         reduce using rule 84 (error_assign)
    NEWLINE         [reduce using rule 91 (var)]
    NEWLINE         [reduce using rule 149 (id_term)]
    PRINT           reduce using rule 84 (error_assign)
    PRINT           [reduce using rule 91 (var)]
    PRINT           [reduce using rule 149 (id_term)]
    PRINTLN         reduce using rule 84 (error_assign)
    PRINTLN         [reduce using rule 91 (var)]
    PRINTLN         [reduce using rule 149 (id_term)]
    IF              reduce using rule 84 (error_assign)
    IF              [reduce using rule 91 (var)]
    IF              [reduce using rule 149 (id_term)]
    FOR             reduce using rule 84 (error_assign)
    FOR             [reduce using rule 91 (var)]
    FOR             [reduce using rule 149 (id_term)]
    TRUE            reduce using rule 84 (error_assign)
    TRUE            [reduce using rule 91 (var)]
    TRUE            [reduce using rule 149 (id_term)]
    FALSE           reduce using rule 84 (error_assign)
    FALSE           [reduce using rule 91 (var)]
    FALSE           [reduce using rule 149 (id_term)]
    INT_LIT         reduce using rule 84 (error_assign)
    INT_LIT         [reduce using rule 91 (var)]
    INT_LIT         [reduce using rule 149 (id_term)]
    SIGN_INT_LIT    reduce using rule 84 (error_assign)
    SIGN_INT_LIT    [reduce using rule 91 (var)]
    SIGN_INT_LIT    [reduce using rule 149 (id_term)]
    FLOAT_LIT       reduce using rule 84 (error_assign)
    FLOAT_LIT       [reduce using rule 91 (var)]
    FLOAT_LIT       [reduce using rule 149 (id_term)]
    SIGN_FLOAT_LIT  reduce using rule 84 (error_assign)
    SIGN_FLOAT_LIT  [reduce using rule 91 (var)]
    SIGN_FLOAT_LIT  [reduce using rule 149 (id_term)]
    ID              reduce using rule 84 (error_assign)
    ID              [reduce using rule 91 (var)]
    ID              [reduce using rule 149 (id_term)]
    '['             reduce using rule 147 ($@13)
    '"'             reduce using rule 84 (error_assign)
    '"'             [reduce using rule 91 (var)]
    '"'             [reduce using rule 149 (id_term)]
    '('             reduce using rule 84 (error_assign)
    '('             [reduce using rule 91 (var)]
    '('             [reduce using rule 149 (id_term)]
    '+'             reduce using rule 149 (id_term)
    '-'             reduce using rule 149 (id_term)
    '*'             reduce using rule 149 (id_term)
    '%'             reduce using rule 149 (id_term)
    '{'             reduce using rule 84 (error_assign)
    '{'             [reduce using rule 91 (var)]
    '{'             [reduce using rule 149 (id_term)]
    '}'             reduce using rule 84 (error_assign)
    '}'             [reduce using rule 91 (var)]
    '}'             [reduce using rule 149 (id_term)]
    ';'             reduce using rule 84 (error_assign)
    ';'             [reduce using rule 91 (var)]
    ';'             [reduce using rule 149 (id_term)]
    '/'             reduce using rule 149 (id_term)
    '>'             reduce using rule 84 (error_assign)
    '>'             [reduce using rule 91 (var)]
    '>'             [reduce using rule 149 (id_term)]
    '<'             reduce using rule 84 (error_assign)
    '<'             [reduce using rule 91 (var)]
    '<'             [reduce using rule 149 (id_term)]
    '!'             reduce using rule 84 (error_assign)
    '!'             [reduce using rule 91 (var)]
    '!'             [reduce using rule 149 (id_term)]
    $default        reduce using rule 84 (error_assign)

    $@13  go to state 91


State 176

   77 assign: ADD_ASSIGN var .

    $default  reduce using rule 77 (assign)


State 177

   90 var: expression .
  110 comparsion_expression: expression . '>' add_expression
  111                      | expression . '<' add_expression
  112                      | expression . GEQ add_expression
  113                      | expression . LEQ add_expression
  114                      | expression . EQL add_expression
  115                      | expression . NEQ add_expression
  116                      | expression . add_expression

    INT             shift, and go to state 2
    FLOAT           shift, and go to state 3
    GEQ             shift, and go to state 109
    LEQ             shift, and go to state 110
    EQL             shift, and go to state 111
    NEQ             shift, and go to state 112
    TRUE            shift, and go to state 11
    FALSE           shift, and go to state 12
    INT_LIT         shift, and go to state 56
    SIGN_INT_LIT    shift, and go to state 14
    FLOAT_LIT       shift, and go to state 57
    SIGN_FLOAT_LIT  shift, and go to state 16
    ID              shift, and go to state 58
    '"'             shift, and go to state 18
    '('             shift, and go to state 19
    '>'             shift, and go to state 113
    '<'             shift, and go to state 114
    '!'             shift, and go to state 21

    INT             [reduce using rule 90 (var)]
    FLOAT           [reduce using rule 90 (var)]
    GEQ             [reduce using rule 90 (var)]
    LEQ             [reduce using rule 90 (var)]
    EQL             [reduce using rule 90 (var)]
    NEQ             [reduce using rule 90 (var)]
    TRUE            [reduce using rule 90 (var)]
    FALSE           [reduce using rule 90 (var)]
    INT_LIT         [reduce using rule 90 (var)]
    SIGN_INT_LIT    [reduce using rule 90 (var)]
    FLOAT_LIT       [reduce using rule 90 (var)]
    SIGN_FLOAT_LIT  [reduce using rule 90 (var)]
    ID              [reduce using rule 90 (var)]
    '"'             [reduce using rule 90 (var)]
    '('             [reduce using rule 90 (var)]
    '>'             [reduce using rule 90 (var)]
    '<'             [reduce using rule 90 (var)]
    '!'             [reduce using rule 90 (var)]
    $default        reduce using rule 90 (var)

    add_expression   go to state 115
    mul_expression   go to state 42
    operand          go to state 43
    term             go to state 44
    bool             go to state 60
    literal          go to state 61
    int_literal      go to state 62
    float_literal    go to state 63
    sign_literal     go to state 49
    string_literal   go to state 50
    literal_convert  go to state 51
    id_term          go to state 52


State 178

   89 var: bool .
  130 term: bool .

    $end            reduce using rule 89 (var)
    $end            [reduce using rule 130 (term)]
    VAR             reduce using rule 89 (var)
    VAR             [reduce using rule 130 (term)]
    INT             reduce using rule 89 (var)
    INT             [reduce using rule 130 (term)]
    FLOAT           reduce using rule 89 (var)
    FLOAT           [reduce using rule 130 (term)]
    GEQ             reduce using rule 89 (var)
    GEQ             [reduce using rule 130 (term)]
    LEQ             reduce using rule 89 (var)
    LEQ             [reduce using rule 130 (term)]
    EQL             reduce using rule 89 (var)
    EQL             [reduce using rule 130 (term)]
    NEQ             reduce using rule 89 (var)
    NEQ             [reduce using rule 130 (term)]
    LAND            reduce using rule 89 (var)
    LAND            [reduce using rule 130 (term)]
    LOR             reduce using rule 89 (var)
    LOR             [reduce using rule 130 (term)]
    NEWLINE         reduce using rule 89 (var)
    NEWLINE         [reduce using rule 130 (term)]
    PRINT           reduce using rule 89 (var)
    PRINT           [reduce using rule 130 (term)]
    PRINTLN         reduce using rule 89 (var)
    PRINTLN         [reduce using rule 130 (term)]
    IF              reduce using rule 89 (var)
    IF              [reduce using rule 130 (term)]
    FOR             reduce using rule 89 (var)
    FOR             [reduce using rule 130 (term)]
    TRUE            reduce using rule 89 (var)
    TRUE            [reduce using rule 130 (term)]
    FALSE           reduce using rule 89 (var)
    FALSE           [reduce using rule 130 (term)]
    INT_LIT         reduce using rule 89 (var)
    INT_LIT         [reduce using rule 130 (term)]
    SIGN_INT_LIT    reduce using rule 89 (var)
    SIGN_INT_LIT    [reduce using rule 130 (term)]
    FLOAT_LIT       reduce using rule 89 (var)
    FLOAT_LIT       [reduce using rule 130 (term)]
    SIGN_FLOAT_LIT  reduce using rule 89 (var)
    SIGN_FLOAT_LIT  [reduce using rule 130 (term)]
    ID              reduce using rule 89 (var)
    ID              [reduce using rule 130 (term)]
    '"'             reduce using rule 89 (var)
    '"'             [reduce using rule 130 (term)]
    '('             reduce using rule 89 (var)
    '('             [reduce using rule 130 (term)]
    '+'             reduce using rule 130 (term)
    '-'             reduce using rule 130 (term)
    '*'             reduce using rule 130 (term)
    '%'             reduce using rule 130 (term)
    '{'             reduce using rule 89 (var)
    '{'             [reduce using rule 130 (term)]
    '}'             reduce using rule 89 (var)
    '}'             [reduce using rule 130 (term)]
    ';'             reduce using rule 89 (var)
    ';'             [reduce using rule 130 (term)]
    '/'             reduce using rule 130 (term)
    '>'             reduce using rule 89 (var)
    '>'             [reduce using rule 130 (term)]
    '<'             reduce using rule 89 (var)
    '<'             [reduce using rule 130 (term)]
    '!'             reduce using rule 89 (var)
    '!'             [reduce using rule 130 (term)]
    $default        reduce using rule 89 (var)


State 179

   86 var: int_literal .
  136 literal: int_literal .

    $end            reduce using rule 86 (var)
    $end            [reduce using rule 136 (literal)]
    VAR             reduce using rule 86 (var)
    VAR             [reduce using rule 136 (literal)]
    INT             reduce using rule 86 (var)
    INT             [reduce using rule 136 (literal)]
    FLOAT           reduce using rule 86 (var)
    FLOAT           [reduce using rule 136 (literal)]
    GEQ             reduce using rule 86 (var)
    GEQ             [reduce using rule 136 (literal)]
    LEQ             reduce using rule 86 (var)
    LEQ             [reduce using rule 136 (literal)]
    EQL             reduce using rule 86 (var)
    EQL             [reduce using rule 136 (literal)]
    NEQ             reduce using rule 86 (var)
    NEQ             [reduce using rule 136 (literal)]
    LAND            reduce using rule 86 (var)
    LAND            [reduce using rule 136 (literal)]
    LOR             reduce using rule 86 (var)
    LOR             [reduce using rule 136 (literal)]
    NEWLINE         reduce using rule 86 (var)
    NEWLINE         [reduce using rule 136 (literal)]
    PRINT           reduce using rule 86 (var)
    PRINT           [reduce using rule 136 (literal)]
    PRINTLN         reduce using rule 86 (var)
    PRINTLN         [reduce using rule 136 (literal)]
    IF              reduce using rule 86 (var)
    IF              [reduce using rule 136 (literal)]
    FOR             reduce using rule 86 (var)
    FOR             [reduce using rule 136 (literal)]
    TRUE            reduce using rule 86 (var)
    TRUE            [reduce using rule 136 (literal)]
    FALSE           reduce using rule 86 (var)
    FALSE           [reduce using rule 136 (literal)]
    INT_LIT         reduce using rule 86 (var)
    INT_LIT         [reduce using rule 136 (literal)]
    SIGN_INT_LIT    reduce using rule 86 (var)
    SIGN_INT_LIT    [reduce using rule 136 (literal)]
    FLOAT_LIT       reduce using rule 86 (var)
    FLOAT_LIT       [reduce using rule 136 (literal)]
    SIGN_FLOAT_LIT  reduce using rule 86 (var)
    SIGN_FLOAT_LIT  [reduce using rule 136 (literal)]
    ID              reduce using rule 86 (var)
    ID              [reduce using rule 136 (literal)]
    '"'             reduce using rule 86 (var)
    '"'             [reduce using rule 136 (literal)]
    '('             reduce using rule 86 (var)
    '('             [reduce using rule 136 (literal)]
    '+'             reduce using rule 136 (literal)
    '-'             reduce using rule 136 (literal)
    '*'             reduce using rule 136 (literal)
    '%'             reduce using rule 136 (literal)
    '{'             reduce using rule 86 (var)
    '{'             [reduce using rule 136 (literal)]
    '}'             reduce using rule 86 (var)
    '}'             [reduce using rule 136 (literal)]
    ';'             reduce using rule 86 (var)
    ';'             [reduce using rule 136 (literal)]
    '/'             reduce using rule 136 (literal)
    '>'             reduce using rule 86 (var)
    '>'             [reduce using rule 136 (literal)]
    '<'             reduce using rule 86 (var)
    '<'             [reduce using rule 136 (literal)]
    '!'             reduce using rule 86 (var)
    '!'             [reduce using rule 136 (literal)]
    $default        reduce using rule 86 (var)


State 180

   87 var: float_literal .
  137 literal: float_literal .

    $end            reduce using rule 87 (var)
    $end            [reduce using rule 137 (literal)]
    VAR             reduce using rule 87 (var)
    VAR             [reduce using rule 137 (literal)]
    INT             reduce using rule 87 (var)
    INT             [reduce using rule 137 (literal)]
    FLOAT           reduce using rule 87 (var)
    FLOAT           [reduce using rule 137 (literal)]
    GEQ             reduce using rule 87 (var)
    GEQ             [reduce using rule 137 (literal)]
    LEQ             reduce using rule 87 (var)
    LEQ             [reduce using rule 137 (literal)]
    EQL             reduce using rule 87 (var)
    EQL             [reduce using rule 137 (literal)]
    NEQ             reduce using rule 87 (var)
    NEQ             [reduce using rule 137 (literal)]
    LAND            reduce using rule 87 (var)
    LAND            [reduce using rule 137 (literal)]
    LOR             reduce using rule 87 (var)
    LOR             [reduce using rule 137 (literal)]
    NEWLINE         reduce using rule 87 (var)
    NEWLINE         [reduce using rule 137 (literal)]
    PRINT           reduce using rule 87 (var)
    PRINT           [reduce using rule 137 (literal)]
    PRINTLN         reduce using rule 87 (var)
    PRINTLN         [reduce using rule 137 (literal)]
    IF              reduce using rule 87 (var)
    IF              [reduce using rule 137 (literal)]
    FOR             reduce using rule 87 (var)
    FOR             [reduce using rule 137 (literal)]
    TRUE            reduce using rule 87 (var)
    TRUE            [reduce using rule 137 (literal)]
    FALSE           reduce using rule 87 (var)
    FALSE           [reduce using rule 137 (literal)]
    INT_LIT         reduce using rule 87 (var)
    INT_LIT         [reduce using rule 137 (literal)]
    SIGN_INT_LIT    reduce using rule 87 (var)
    SIGN_INT_LIT    [reduce using rule 137 (literal)]
    FLOAT_LIT       reduce using rule 87 (var)
    FLOAT_LIT       [reduce using rule 137 (literal)]
    SIGN_FLOAT_LIT  reduce using rule 87 (var)
    SIGN_FLOAT_LIT  [reduce using rule 137 (literal)]
    ID              reduce using rule 87 (var)
    ID              [reduce using rule 137 (literal)]
    '"'             reduce using rule 87 (var)
    '"'             [reduce using rule 137 (literal)]
    '('             reduce using rule 87 (var)
    '('             [reduce using rule 137 (literal)]
    '+'             reduce using rule 137 (literal)
    '-'             reduce using rule 137 (literal)
    '*'             reduce using rule 137 (literal)
    '%'             reduce using rule 137 (literal)
    '{'             reduce using rule 87 (var)
    '{'             [reduce using rule 137 (literal)]
    '}'             reduce using rule 87 (var)
    '}'             [reduce using rule 137 (literal)]
    ';'             reduce using rule 87 (var)
    ';'             [reduce using rule 137 (literal)]
    '/'             reduce using rule 137 (literal)
    '>'             reduce using rule 87 (var)
    '>'             [reduce using rule 137 (literal)]
    '<'             reduce using rule 87 (var)
    '<'             [reduce using rule 137 (literal)]
    '!'             reduce using rule 87 (var)
    '!'             [reduce using rule 137 (literal)]
    $default        reduce using rule 87 (var)


State 181

   88 var: string_literal .
  129 term: string_literal .

    $end            reduce using rule 88 (var)
    $end            [reduce using rule 129 (term)]
    VAR             reduce using rule 88 (var)
    VAR             [reduce using rule 129 (term)]
    INT             reduce using rule 88 (var)
    INT             [reduce using rule 129 (term)]
    FLOAT           reduce using rule 88 (var)
    FLOAT           [reduce using rule 129 (term)]
    GEQ             reduce using rule 88 (var)
    GEQ             [reduce using rule 129 (term)]
    LEQ             reduce using rule 88 (var)
    LEQ             [reduce using rule 129 (term)]
    EQL             reduce using rule 88 (var)
    EQL             [reduce using rule 129 (term)]
    NEQ             reduce using rule 88 (var)
    NEQ             [reduce using rule 129 (term)]
    LAND            reduce using rule 88 (var)
    LAND            [reduce using rule 129 (term)]
    LOR             reduce using rule 88 (var)
    LOR             [reduce using rule 129 (term)]
    NEWLINE         reduce using rule 88 (var)
    NEWLINE         [reduce using rule 129 (term)]
    PRINT           reduce using rule 88 (var)
    PRINT           [reduce using rule 129 (term)]
    PRINTLN         reduce using rule 88 (var)
    PRINTLN         [reduce using rule 129 (term)]
    IF              reduce using rule 88 (var)
    IF              [reduce using rule 129 (term)]
    FOR             reduce using rule 88 (var)
    FOR             [reduce using rule 129 (term)]
    TRUE            reduce using rule 88 (var)
    TRUE            [reduce using rule 129 (term)]
    FALSE           reduce using rule 88 (var)
    FALSE           [reduce using rule 129 (term)]
    INT_LIT         reduce using rule 88 (var)
    INT_LIT         [reduce using rule 129 (term)]
    SIGN_INT_LIT    reduce using rule 88 (var)
    SIGN_INT_LIT    [reduce using rule 129 (term)]
    FLOAT_LIT       reduce using rule 88 (var)
    FLOAT_LIT       [reduce using rule 129 (term)]
    SIGN_FLOAT_LIT  reduce using rule 88 (var)
    SIGN_FLOAT_LIT  [reduce using rule 129 (term)]
    ID              reduce using rule 88 (var)
    ID              [reduce using rule 129 (term)]
    '"'             reduce using rule 88 (var)
    '"'             [reduce using rule 129 (term)]
    '('             reduce using rule 88 (var)
    '('             [reduce using rule 129 (term)]
    '+'             reduce using rule 129 (term)
    '-'             reduce using rule 129 (term)
    '*'             reduce using rule 129 (term)
    '%'             reduce using rule 129 (term)
    '{'             reduce using rule 88 (var)
    '{'             [reduce using rule 129 (term)]
    '}'             reduce using rule 88 (var)
    '}'             [reduce using rule 129 (term)]
    ';'             reduce using rule 88 (var)
    ';'             [reduce using rule 129 (term)]
    '/'             reduce using rule 129 (term)
    '>'             reduce using rule 88 (var)
    '>'             [reduce using rule 129 (term)]
    '<'             reduce using rule 88 (var)
    '<'             [reduce using rule 129 (term)]
    '!'             reduce using rule 88 (var)
    '!'             [reduce using rule 129 (term)]
    $default        reduce using rule 88 (var)


State 182

   91 var: ID .
  148 id_term: ID . $@13 '[' expression ']'
  149        | ID .

    $end            reduce using rule 91 (var)
    $end            [reduce using rule 149 (id_term)]
    VAR             reduce using rule 91 (var)
    VAR             [reduce using rule 149 (id_term)]
    INT             reduce using rule 91 (var)
    INT             [reduce using rule 149 (id_term)]
    FLOAT           reduce using rule 91 (var)
    FLOAT           [reduce using rule 149 (id_term)]
    GEQ             reduce using rule 91 (var)
    GEQ             [reduce using rule 149 (id_term)]
    LEQ             reduce using rule 91 (var)
    LEQ             [reduce using rule 149 (id_term)]
    EQL             reduce using rule 91 (var)
    EQL             [reduce using rule 149 (id_term)]
    NEQ             reduce using rule 91 (var)
    NEQ             [reduce using rule 149 (id_term)]
    LAND            reduce using rule 91 (var)
    LAND            [reduce using rule 149 (id_term)]
    LOR             reduce using rule 91 (var)
    LOR             [reduce using rule 149 (id_term)]
    NEWLINE         reduce using rule 91 (var)
    NEWLINE         [reduce using rule 149 (id_term)]
    PRINT           reduce using rule 91 (var)
    PRINT           [reduce using rule 149 (id_term)]
    PRINTLN         reduce using rule 91 (var)
    PRINTLN         [reduce using rule 149 (id_term)]
    IF              reduce using rule 91 (var)
    IF              [reduce using rule 149 (id_term)]
    FOR             reduce using rule 91 (var)
    FOR             [reduce using rule 149 (id_term)]
    TRUE            reduce using rule 91 (var)
    TRUE            [reduce using rule 149 (id_term)]
    FALSE           reduce using rule 91 (var)
    FALSE           [reduce using rule 149 (id_term)]
    INT_LIT         reduce using rule 91 (var)
    INT_LIT         [reduce using rule 149 (id_term)]
    SIGN_INT_LIT    reduce using rule 91 (var)
    SIGN_INT_LIT    [reduce using rule 149 (id_term)]
    FLOAT_LIT       reduce using rule 91 (var)
    FLOAT_LIT       [reduce using rule 149 (id_term)]
    SIGN_FLOAT_LIT  reduce using rule 91 (var)
    SIGN_FLOAT_LIT  [reduce using rule 149 (id_term)]
    ID              reduce using rule 91 (var)
    ID              [reduce using rule 149 (id_term)]
    '['             reduce using rule 147 ($@13)
    '"'             reduce using rule 91 (var)
    '"'             [reduce using rule 149 (id_term)]
    '('             reduce using rule 91 (var)
    '('             [reduce using rule 149 (id_term)]
    '+'             reduce using rule 149 (id_term)
    '-'             reduce using rule 149 (id_term)
    '*'             reduce using rule 149 (id_term)
    '%'             reduce using rule 149 (id_term)
    '{'             reduce using rule 91 (var)
    '{'             [reduce using rule 149 (id_term)]
    '}'             reduce using rule 91 (var)
    '}'             [reduce using rule 149 (id_term)]
    ';'             reduce using rule 91 (var)
    ';'             [reduce using rule 149 (id_term)]
    '/'             reduce using rule 149 (id_term)
    '>'             reduce using rule 91 (var)
    '>'             [reduce using rule 149 (id_term)]
    '<'             reduce using rule 91 (var)
    '<'             [reduce using rule 149 (id_term)]
    '!'             reduce using rule 91 (var)
    '!'             [reduce using rule 149 (id_term)]
    $default        reduce using rule 91 (var)

    $@13  go to state 91


State 183

   78 assign: SUB_ASSIGN var .

    $default  reduce using rule 78 (assign)


State 184

   79 assign: MUL_ASSIGN var .

    $default  reduce using rule 79 (assign)


State 185

   80 assign: QUO_ASSIGN var .

    $default  reduce using rule 80 (assign)


State 186

   81 assign: REM_ASSIGN var .

    $default  reduce using rule 81 (assign)


State 187

   83 error_assign: '=' var .

    $default  reduce using rule 83 (error_assign)


State 188

   24 declaration: ident assign NEWLINE .

    $default  reduce using rule 24 (declaration)


State 189

  112 comparsion_expression: expression GEQ add_expression .
  117 add_expression: add_expression . '+' mul_expression
  118               | add_expression . '-' mul_expression

    '+'  shift, and go to state 118
    '-'  shift, and go to state 119

    '+'       [reduce using rule 112 (comparsion_expression)]
    '-'       [reduce using rule 112 (comparsion_expression)]
    $default  reduce using rule 112 (comparsion_expression)


State 190

  113 comparsion_expression: expression LEQ add_expression .
  117 add_expression: add_expression . '+' mul_expression
  118               | add_expression . '-' mul_expression

    '+'  shift, and go to state 118
    '-'  shift, and go to state 119

    '+'       [reduce using rule 113 (comparsion_expression)]
    '-'       [reduce using rule 113 (comparsion_expression)]
    $default  reduce using rule 113 (comparsion_expression)


State 191

  114 comparsion_expression: expression EQL add_expression .
  117 add_expression: add_expression . '+' mul_expression
  118               | add_expression . '-' mul_expression

    '+'  shift, and go to state 118
    '-'  shift, and go to state 119

    '+'       [reduce using rule 114 (comparsion_expression)]
    '-'       [reduce using rule 114 (comparsion_expression)]
    $default  reduce using rule 114 (comparsion_expression)


State 192

  115 comparsion_expression: expression NEQ add_expression .
  117 add_expression: add_expression . '+' mul_expression
  118               | add_expression . '-' mul_expression

    '+'  shift, and go to state 118
    '-'  shift, and go to state 119

    '+'       [reduce using rule 115 (comparsion_expression)]
    '-'       [reduce using rule 115 (comparsion_expression)]
    $default  reduce using rule 115 (comparsion_expression)


State 193

  110 comparsion_expression: expression '>' add_expression .
  117 add_expression: add_expression . '+' mul_expression
  118               | add_expression . '-' mul_expression

    '+'  shift, and go to state 118
    '-'  shift, and go to state 119

    '+'       [reduce using rule 110 (comparsion_expression)]
    '-'       [reduce using rule 110 (comparsion_expression)]
    $default  reduce using rule 110 (comparsion_expression)


State 194

  111 comparsion_expression: expression '<' add_expression .
  117 add_expression: add_expression . '+' mul_expression
  118               | add_expression . '-' mul_expression

    '+'  shift, and go to state 118
    '-'  shift, and go to state 119

    '+'       [reduce using rule 111 (comparsion_expression)]
    '-'       [reduce using rule 111 (comparsion_expression)]
    $default  reduce using rule 111 (comparsion_expression)


State 195

  117 add_expression: add_expression '+' mul_expression .
  120 mul_expression: mul_expression . '*' operand
  121               | mul_expression . '/' operand
  122               | mul_expression . '%' operand

    '*'  shift, and go to state 120
    '%'  shift, and go to state 121
    '/'  shift, and go to state 122

    '*'       [reduce using rule 117 (add_expression)]
    '%'       [reduce using rule 117 (add_expression)]
    '/'       [reduce using rule 117 (add_expression)]
    $default  reduce using rule 117 (add_expression)


State 196

  118 add_expression: add_expression '-' mul_expression .
  120 mul_expression: mul_expression . '*' operand
  121               | mul_expression . '/' operand
  122               | mul_expression . '%' operand

    '*'  shift, and go to state 120
    '%'  shift, and go to state 121
    '/'  shift, and go to state 122

    '*'       [reduce using rule 118 (add_expression)]
    '%'       [reduce using rule 118 (add_expression)]
    '/'       [reduce using rule 118 (add_expression)]
    $default  reduce using rule 118 (add_expression)


State 197

  120 mul_expression: mul_expression '*' operand .

    $default  reduce using rule 120 (mul_expression)


State 198

  122 mul_expression: mul_expression '%' operand .

    $default  reduce using rule 122 (mul_expression)


State 199

  121 mul_expression: mul_expression '/' operand .

    $default  reduce using rule 121 (mul_expression)


State 200

   54 invalid_arithmetic: bool LOR expression .
  110 comparsion_expression: expression . '>' add_expression
  111                      | expression . '<' add_expression
  112                      | expression . GEQ add_expression
  113                      | expression . LEQ add_expression
  114                      | expression . EQL add_expression
  115                      | expression . NEQ add_expression
  116                      | expression . add_expression

    INT             shift, and go to state 2
    FLOAT           shift, and go to state 3
    GEQ             shift, and go to state 109
    LEQ             shift, and go to state 110
    EQL             shift, and go to state 111
    NEQ             shift, and go to state 112
    TRUE            shift, and go to state 11
    FALSE           shift, and go to state 12
    INT_LIT         shift, and go to state 56
    SIGN_INT_LIT    shift, and go to state 14
    FLOAT_LIT       shift, and go to state 57
    SIGN_FLOAT_LIT  shift, and go to state 16
    ID              shift, and go to state 58
    '"'             shift, and go to state 18
    '('             shift, and go to state 19
    '>'             shift, and go to state 113
    '<'             shift, and go to state 114
    '!'             shift, and go to state 21

    INT             [reduce using rule 54 (invalid_arithmetic)]
    FLOAT           [reduce using rule 54 (invalid_arithmetic)]
    GEQ             [reduce using rule 54 (invalid_arithmetic)]
    LEQ             [reduce using rule 54 (invalid_arithmetic)]
    EQL             [reduce using rule 54 (invalid_arithmetic)]
    NEQ             [reduce using rule 54 (invalid_arithmetic)]
    TRUE            [reduce using rule 54 (invalid_arithmetic)]
    FALSE           [reduce using rule 54 (invalid_arithmetic)]
    INT_LIT         [reduce using rule 54 (invalid_arithmetic)]
    SIGN_INT_LIT    [reduce using rule 54 (invalid_arithmetic)]
    FLOAT_LIT       [reduce using rule 54 (invalid_arithmetic)]
    SIGN_FLOAT_LIT  [reduce using rule 54 (invalid_arithmetic)]
    ID              [reduce using rule 54 (invalid_arithmetic)]
    '"'             [reduce using rule 54 (invalid_arithmetic)]
    '('             [reduce using rule 54 (invalid_arithmetic)]
    '>'             [reduce using rule 54 (invalid_arithmetic)]
    '<'             [reduce using rule 54 (invalid_arithmetic)]
    '!'             [reduce using rule 54 (invalid_arithmetic)]
    $default        reduce using rule 54 (invalid_arithmetic)

    add_expression   go to state 115
    mul_expression   go to state 42
    operand          go to state 43
    term             go to state 44
    bool             go to state 60
    literal          go to state 61
    int_literal      go to state 62
    float_literal    go to state 63
    sign_literal     go to state 49
    string_literal   go to state 50
    literal_convert  go to state 51
    id_term          go to state 52


State 201

   52 invalid_arithmetic: int_literal LAND bool .

    $default  reduce using rule 52 (invalid_arithmetic)


State 202

   39 pure_arithmetic: int_literal '+' int_literal .

    $default  reduce using rule 39 (pure_arithmetic)


State 203

   40 pure_arithmetic: int_literal '-' int_literal .

    $default  reduce using rule 40 (pure_arithmetic)


State 204

   53 invalid_arithmetic: float_literal LAND bool .

    $default  reduce using rule 53 (invalid_arithmetic)


State 205

   29 literal_initial: '=' . literal

    INT_LIT    shift, and go to state 56
    FLOAT_LIT  shift, and go to state 57

    literal        go to state 234
    int_literal    go to state 62
    float_literal  go to state 63


State 206

   16 declaration: VAR ID INT literal_initial . NEWLINE

    NEWLINE  shift, and go to state 235


State 207

   18 declaration: VAR ID FLOAT literal_initial . NEWLINE

    NEWLINE  shift, and go to state 236


State 208

   27 bool_initial: '=' . bool

    TRUE   shift, and go to state 11
    FALSE  shift, and go to state 12
    '!'    shift, and go to state 21

    bool  go to state 237


State 209

   19 declaration: VAR ID BOOL bool_initial . NEWLINE

    NEWLINE  shift, and go to state 238


State 210

   32 string_initial: NEWLINE .

    $default  reduce using rule 32 (string_initial)


State 211

   31 string_initial: '=' . '"' STRING_LIT '"' NEWLINE

    '"'  shift, and go to state 239


State 212

   17 declaration: VAR ID STRING string_initial .

    $default  reduce using rule 17 (declaration)


State 213

   20 declaration: VAR ID '[' INT_LIT . ']' INT NEWLINE
   21            | VAR ID '[' INT_LIT . ']' FLOAT NEWLINE

    ']'  shift, and go to state 240


State 214

  144 literal_convert: INT '(' FLOAT_LIT ')' .

    $default  reduce using rule 144 (literal_convert)


State 215

  143 literal_convert: INT '(' ident ')' .

    $default  reduce using rule 143 (literal_convert)


State 216

  146 literal_convert: FLOAT '(' INT_LIT ')' .

    $default  reduce using rule 146 (literal_convert)


State 217

  145 literal_convert: FLOAT '(' ident ')' .

    $default  reduce using rule 145 (literal_convert)


State 218

   38 print_stmt: PRINT $@3 '(' expression . ')'
  110 comparsion_expression: expression . '>' add_expression
  111                      | expression . '<' add_expression
  112                      | expression . GEQ add_expression
  113                      | expression . LEQ add_expression
  114                      | expression . EQL add_expression
  115                      | expression . NEQ add_expression
  116                      | expression . add_expression

    INT             shift, and go to state 2
    FLOAT           shift, and go to state 3
    GEQ             shift, and go to state 109
    LEQ             shift, and go to state 110
    EQL             shift, and go to state 111
    NEQ             shift, and go to state 112
    TRUE            shift, and go to state 11
    FALSE           shift, and go to state 12
    INT_LIT         shift, and go to state 56
    SIGN_INT_LIT    shift, and go to state 14
    FLOAT_LIT       shift, and go to state 57
    SIGN_FLOAT_LIT  shift, and go to state 16
    ID              shift, and go to state 58
    '"'             shift, and go to state 18
    '('             shift, and go to state 19
    ')'             shift, and go to state 241
    '>'             shift, and go to state 113
    '<'             shift, and go to state 114
    '!'             shift, and go to state 21

    add_expression   go to state 115
    mul_expression   go to state 42
    operand          go to state 43
    term             go to state 44
    bool             go to state 60
    literal          go to state 61
    int_literal      go to state 62
    float_literal    go to state 63
    sign_literal     go to state 49
    string_literal   go to state 50
    literal_convert  go to state 51
    id_term          go to state 52


State 219

   36 print_stmt: PRINTLN $@2 '(' expression . ')'
  110 comparsion_expression: expression . '>' add_expression
  111                      | expression . '<' add_expression
  112                      | expression . GEQ add_expression
  113                      | expression . LEQ add_expression
  114                      | expression . EQL add_expression
  115                      | expression . NEQ add_expression
  116                      | expression . add_expression

    INT             shift, and go to state 2
    FLOAT           shift, and go to state 3
    GEQ             shift, and go to state 109
    LEQ             shift, and go to state 110
    EQL             shift, and go to state 111
    NEQ             shift, and go to state 112
    TRUE            shift, and go to state 11
    FALSE           shift, and go to state 12
    INT_LIT         shift, and go to state 56
    SIGN_INT_LIT    shift, and go to state 14
    FLOAT_LIT       shift, and go to state 57
    SIGN_FLOAT_LIT  shift, and go to state 16
    ID              shift, and go to state 58
    '"'             shift, and go to state 18
    '('             shift, and go to state 19
    ')'             shift, and go to state 242
    '>'             shift, and go to state 113
    '<'             shift, and go to state 114
    '!'             shift, and go to state 21

    add_expression   go to state 115
    mul_expression   go to state 42
    operand          go to state 43
    term             go to state 44
    bool             go to state 60
    literal          go to state 61
    int_literal      go to state 62
    float_literal    go to state 63
    sign_literal     go to state 49
    string_literal   go to state 50
    literal_convert  go to state 51
    id_term          go to state 52


State 220

   64 else_stmt: ELSE . if_stmt
   65          | ELSE . block

    IF   shift, and go to state 9
    '{'  shift, and go to state 20

    if_stmt  go to state 243
    block    go to state 244


State 221

   63 if_stmt: IF expression block else_stmt .

    $default  reduce using rule 63 (if_stmt)


State 222

   56 if_stmt: IF int_literal $@4 block .

    $default  reduce using rule 56 (if_stmt)


State 223

   58 if_stmt: IF float_literal $@5 block .

    $default  reduce using rule 58 (if_stmt)


State 224

   60 if_stmt: IF string_literal $@6 block .

    $default  reduce using rule 60 (if_stmt)


State 225

   62 if_stmt: IF id_term $@7 block .

    $default  reduce using rule 62 (if_stmt)


State 226

   72 for_stmt: FOR pure_arithmetic '{' $@10 . stmts '}'

    VAR             shift, and go to state 1
    INT             shift, and go to state 2
    FLOAT           shift, and go to state 3
    LAND            shift, and go to state 4
    LOR             shift, and go to state 5
    NEWLINE         shift, and go to state 6
    PRINT           shift, and go to state 7
    PRINTLN         shift, and go to state 8
    IF              shift, and go to state 9
    FOR             shift, and go to state 10
    TRUE            shift, and go to state 11
    FALSE           shift, and go to state 12
    INT_LIT         shift, and go to state 13
    SIGN_INT_LIT    shift, and go to state 14
    FLOAT_LIT       shift, and go to state 15
    SIGN_FLOAT_LIT  shift, and go to state 16
    ID              shift, and go to state 17
    '"'             shift, and go to state 18
    '('             shift, and go to state 19
    '{'             shift, and go to state 20
    '!'             shift, and go to state 21

    VAR             [reduce using rule 106 (expression)]
    INT             [reduce using rule 106 (expression)]
    FLOAT           [reduce using rule 106 (expression)]
    LAND            [reduce using rule 106 (expression)]
    LOR             [reduce using rule 106 (expression)]
    NEWLINE         [reduce using rule 106 (expression)]
    PRINT           [reduce using rule 106 (expression)]
    PRINTLN         [reduce using rule 106 (expression)]
    IF              [reduce using rule 106 (expression)]
    FOR             [reduce using rule 106 (expression)]
    TRUE            [reduce using rule 106 (expression)]
    FALSE           [reduce using rule 106 (expression)]
    INT_LIT         [reduce using rule 106 (expression)]
    SIGN_INT_LIT    [reduce using rule 106 (expression)]
    FLOAT_LIT       [reduce using rule 106 (expression)]
    SIGN_FLOAT_LIT  [reduce using rule 106 (expression)]
    ID              [reduce using rule 106 (expression)]
    '"'             [reduce using rule 106 (expression)]
    '('             [reduce using rule 106 (expression)]
    '{'             [reduce using rule 106 (expression)]
    '}'             reduce using rule 4 (stmts)
    '}'             [reduce using rule 106 (expression)]
    '!'             [reduce using rule 106 (expression)]
    $default        reduce using rule 106 (expression)

    stmts                  go to state 245
    stmt                   go to state 98
    declaration            go to state 24
    incdec_stmt            go to state 25
    print_stmt             go to state 26
    pure_arithmetic        go to state 27
    invalid_arithmetic     go to state 28
    if_stmt                go to state 29
    for_stmt               go to state 30
    error_stmt             go to state 31
    ident                  go to state 32
    block                  go to state 33
    arithmetic_add_stmt    go to state 34
    arithmetic_mul_stmt    go to state 35
    expression_stmt        go to state 36
    expression             go to state 37
    lor_expression         go to state 38
    land_expression        go to state 39
    comparsion_expression  go to state 40
    add_expression         go to state 41
    mul_expression         go to state 42
    operand                go to state 43
    term                   go to state 44
    bool                   go to state 45
    literal                go to state 46
    int_literal            go to state 47
    float_literal          go to state 48
    sign_literal           go to state 49
    string_literal         go to state 50
    literal_convert        go to state 51
    id_term                go to state 52


State 227

   74 for_expr: ident assign ';' . ident comparsion_expression ';' arithmetic_add_stmt
   75         | ident assign ';' . ident comparsion_expression ';' incdec_stmt

    ID  shift, and go to state 135

    ident  go to state 246


State 228

   70 for_stmt: FOR int_literal '{' $@9 . stmts '}'

    VAR             shift, and go to state 1
    INT             shift, and go to state 2
    FLOAT           shift, and go to state 3
    LAND            shift, and go to state 4
    LOR             shift, and go to state 5
    NEWLINE         shift, and go to state 6
    PRINT           shift, and go to state 7
    PRINTLN         shift, and go to state 8
    IF              shift, and go to state 9
    FOR             shift, and go to state 10
    TRUE            shift, and go to state 11
    FALSE           shift, and go to state 12
    INT_LIT         shift, and go to state 13
    SIGN_INT_LIT    shift, and go to state 14
    FLOAT_LIT       shift, and go to state 15
    SIGN_FLOAT_LIT  shift, and go to state 16
    ID              shift, and go to state 17
    '"'             shift, and go to state 18
    '('             shift, and go to state 19
    '{'             shift, and go to state 20
    '!'             shift, and go to state 21

    VAR             [reduce using rule 106 (expression)]
    INT             [reduce using rule 106 (expression)]
    FLOAT           [reduce using rule 106 (expression)]
    LAND            [reduce using rule 106 (expression)]
    LOR             [reduce using rule 106 (expression)]
    NEWLINE         [reduce using rule 106 (expression)]
    PRINT           [reduce using rule 106 (expression)]
    PRINTLN         [reduce using rule 106 (expression)]
    IF              [reduce using rule 106 (expression)]
    FOR             [reduce using rule 106 (expression)]
    TRUE            [reduce using rule 106 (expression)]
    FALSE           [reduce using rule 106 (expression)]
    INT_LIT         [reduce using rule 106 (expression)]
    SIGN_INT_LIT    [reduce using rule 106 (expression)]
    FLOAT_LIT       [reduce using rule 106 (expression)]
    SIGN_FLOAT_LIT  [reduce using rule 106 (expression)]
    ID              [reduce using rule 106 (expression)]
    '"'             [reduce using rule 106 (expression)]
    '('             [reduce using rule 106 (expression)]
    '{'             [reduce using rule 106 (expression)]
    '}'             reduce using rule 4 (stmts)
    '}'             [reduce using rule 106 (expression)]
    '!'             [reduce using rule 106 (expression)]
    $default        reduce using rule 106 (expression)

    stmts                  go to state 247
    stmt                   go to state 98
    declaration            go to state 24
    incdec_stmt            go to state 25
    print_stmt             go to state 26
    pure_arithmetic        go to state 27
    invalid_arithmetic     go to state 28
    if_stmt                go to state 29
    for_stmt               go to state 30
    error_stmt             go to state 31
    ident                  go to state 32
    block                  go to state 33
    arithmetic_add_stmt    go to state 34
    arithmetic_mul_stmt    go to state 35
    expression_stmt        go to state 36
    expression             go to state 37
    lor_expression         go to state 38
    land_expression        go to state 39
    comparsion_expression  go to state 40
    add_expression         go to state 41
    mul_expression         go to state 42
    operand                go to state 43
    term                   go to state 44
    bool                   go to state 45
    literal                go to state 46
    int_literal            go to state 47
    float_literal          go to state 48
    sign_literal           go to state 49
    string_literal         go to state 50
    literal_convert        go to state 51
    id_term                go to state 52


State 229

   68 for_stmt: FOR float_literal '{' $@8 . stmts '}'

    VAR             shift, and go to state 1
    INT             shift, and go to state 2
    FLOAT           shift, and go to state 3
    LAND            shift, and go to state 4
    LOR             shift, and go to state 5
    NEWLINE         shift, and go to state 6
    PRINT           shift, and go to state 7
    PRINTLN         shift, and go to state 8
    IF              shift, and go to state 9
    FOR             shift, and go to state 10
    TRUE            shift, and go to state 11
    FALSE           shift, and go to state 12
    INT_LIT         shift, and go to state 13
    SIGN_INT_LIT    shift, and go to state 14
    FLOAT_LIT       shift, and go to state 15
    SIGN_FLOAT_LIT  shift, and go to state 16
    ID              shift, and go to state 17
    '"'             shift, and go to state 18
    '('             shift, and go to state 19
    '{'             shift, and go to state 20
    '!'             shift, and go to state 21

    VAR             [reduce using rule 106 (expression)]
    INT             [reduce using rule 106 (expression)]
    FLOAT           [reduce using rule 106 (expression)]
    LAND            [reduce using rule 106 (expression)]
    LOR             [reduce using rule 106 (expression)]
    NEWLINE         [reduce using rule 106 (expression)]
    PRINT           [reduce using rule 106 (expression)]
    PRINTLN         [reduce using rule 106 (expression)]
    IF              [reduce using rule 106 (expression)]
    FOR             [reduce using rule 106 (expression)]
    TRUE            [reduce using rule 106 (expression)]
    FALSE           [reduce using rule 106 (expression)]
    INT_LIT         [reduce using rule 106 (expression)]
    SIGN_INT_LIT    [reduce using rule 106 (expression)]
    FLOAT_LIT       [reduce using rule 106 (expression)]
    SIGN_FLOAT_LIT  [reduce using rule 106 (expression)]
    ID              [reduce using rule 106 (expression)]
    '"'             [reduce using rule 106 (expression)]
    '('             [reduce using rule 106 (expression)]
    '{'             [reduce using rule 106 (expression)]
    '}'             reduce using rule 4 (stmts)
    '}'             [reduce using rule 106 (expression)]
    '!'             [reduce using rule 106 (expression)]
    $default        reduce using rule 106 (expression)

    stmts                  go to state 248
    stmt                   go to state 98
    declaration            go to state 24
    incdec_stmt            go to state 25
    print_stmt             go to state 26
    pure_arithmetic        go to state 27
    invalid_arithmetic     go to state 28
    if_stmt                go to state 29
    for_stmt               go to state 30
    error_stmt             go to state 31
    ident                  go to state 32
    block                  go to state 33
    arithmetic_add_stmt    go to state 34
    arithmetic_mul_stmt    go to state 35
    expression_stmt        go to state 36
    expression             go to state 37
    lor_expression         go to state 38
    land_expression        go to state 39
    comparsion_expression  go to state 40
    add_expression         go to state 41
    mul_expression         go to state 42
    operand                go to state 43
    term                   go to state 44
    bool                   go to state 45
    literal                go to state 46
    int_literal            go to state 47
    float_literal          go to state 48
    sign_literal           go to state 49
    string_literal         go to state 50
    literal_convert        go to state 51
    id_term                go to state 52


State 230

   23 declaration: ID '[' INT_LIT $@1 . ']' array_initial NEWLINE

    ']'  shift, and go to state 249


State 231

  110 comparsion_expression: expression . '>' add_expression
  111                      | expression . '<' add_expression
  112                      | expression . GEQ add_expression
  113                      | expression . LEQ add_expression
  114                      | expression . EQL add_expression
  115                      | expression . NEQ add_expression
  116                      | expression . add_expression
  148 id_term: ID $@13 '[' expression . ']'

    INT             shift, and go to state 2
    FLOAT           shift, and go to state 3
    GEQ             shift, and go to state 109
    LEQ             shift, and go to state 110
    EQL             shift, and go to state 111
    NEQ             shift, and go to state 112
    TRUE            shift, and go to state 11
    FALSE           shift, and go to state 12
    INT_LIT         shift, and go to state 56
    SIGN_INT_LIT    shift, and go to state 14
    FLOAT_LIT       shift, and go to state 57
    SIGN_FLOAT_LIT  shift, and go to state 16
    ID              shift, and go to state 58
    ']'             shift, and go to state 250
    '"'             shift, and go to state 18
    '('             shift, and go to state 19
    '>'             shift, and go to state 113
    '<'             shift, and go to state 114
    '!'             shift, and go to state 21

    add_expression   go to state 115
    mul_expression   go to state 42
    operand          go to state 43
    term             go to state 44
    bool             go to state 60
    literal          go to state 61
    int_literal      go to state 62
    float_literal    go to state 63
    sign_literal     go to state 49
    string_literal   go to state 50
    literal_convert  go to state 51
    id_term          go to state 52


State 232

   95 block: '{' $@11 stmts '}' .

    $default  reduce using rule 95 (block)


State 233

  110 comparsion_expression: expression . '>' add_expression
  111                      | expression . '<' add_expression
  112                      | expression . GEQ add_expression
  113                      | expression . LEQ add_expression
  114                      | expression . EQL add_expression
  115                      | expression . NEQ add_expression
  116                      | expression . add_expression
  133 bool: '!' bool $@12 expression .

    INT             shift, and go to state 2
    FLOAT           shift, and go to state 3
    GEQ             shift, and go to state 109
    LEQ             shift, and go to state 110
    EQL             shift, and go to state 111
    NEQ             shift, and go to state 112
    TRUE            shift, and go to state 11
    FALSE           shift, and go to state 12
    INT_LIT         shift, and go to state 56
    SIGN_INT_LIT    shift, and go to state 14
    FLOAT_LIT       shift, and go to state 57
    SIGN_FLOAT_LIT  shift, and go to state 16
    ID              shift, and go to state 58
    '"'             shift, and go to state 18
    '('             shift, and go to state 19
    '>'             shift, and go to state 113
    '<'             shift, and go to state 114
    '!'             shift, and go to state 21

    INT             [reduce using rule 133 (bool)]
    FLOAT           [reduce using rule 133 (bool)]
    GEQ             [reduce using rule 133 (bool)]
    LEQ             [reduce using rule 133 (bool)]
    EQL             [reduce using rule 133 (bool)]
    NEQ             [reduce using rule 133 (bool)]
    TRUE            [reduce using rule 133 (bool)]
    FALSE           [reduce using rule 133 (bool)]
    INT_LIT         [reduce using rule 133 (bool)]
    SIGN_INT_LIT    [reduce using rule 133 (bool)]
    FLOAT_LIT       [reduce using rule 133 (bool)]
    SIGN_FLOAT_LIT  [reduce using rule 133 (bool)]
    ID              [reduce using rule 133 (bool)]
    '"'             [reduce using rule 133 (bool)]
    '('             [reduce using rule 133 (bool)]
    '>'             [reduce using rule 133 (bool)]
    '<'             [reduce using rule 133 (bool)]
    '!'             [reduce using rule 133 (bool)]
    $default        reduce using rule 133 (bool)

    add_expression   go to state 115
    mul_expression   go to state 42
    operand          go to state 43
    term             go to state 44
    bool             go to state 60
    literal          go to state 61
    int_literal      go to state 62
    float_literal    go to state 63
    sign_literal     go to state 49
    string_literal   go to state 50
    literal_convert  go to state 51
    id_term          go to state 52


State 234

   29 literal_initial: '=' literal .

    $default  reduce using rule 29 (literal_initial)


State 235

   16 declaration: VAR ID INT literal_initial NEWLINE .

    $default  reduce using rule 16 (declaration)


State 236

   18 declaration: VAR ID FLOAT literal_initial NEWLINE .

    $default  reduce using rule 18 (declaration)


State 237

   27 bool_initial: '=' bool .

    $default  reduce using rule 27 (bool_initial)


State 238

   19 declaration: VAR ID BOOL bool_initial NEWLINE .

    $default  reduce using rule 19 (declaration)


State 239

   31 string_initial: '=' '"' . STRING_LIT '"' NEWLINE

    STRING_LIT  shift, and go to state 251


State 240

   20 declaration: VAR ID '[' INT_LIT ']' . INT NEWLINE
   21            | VAR ID '[' INT_LIT ']' . FLOAT NEWLINE

    INT    shift, and go to state 252
    FLOAT  shift, and go to state 253


State 241

   38 print_stmt: PRINT $@3 '(' expression ')' .

    $default  reduce using rule 38 (print_stmt)


State 242

   36 print_stmt: PRINTLN $@2 '(' expression ')' .

    $default  reduce using rule 36 (print_stmt)


State 243

   64 else_stmt: ELSE if_stmt .

    $default  reduce using rule 64 (else_stmt)


State 244

   65 else_stmt: ELSE block .

    $default  reduce using rule 65 (else_stmt)


State 245

   72 for_stmt: FOR pure_arithmetic '{' $@10 stmts . '}'

    '}'  shift, and go to state 254


State 246

   74 for_expr: ident assign ';' ident . comparsion_expression ';' arithmetic_add_stmt
   75         | ident assign ';' ident . comparsion_expression ';' incdec_stmt

    INT             shift, and go to state 2
    FLOAT           shift, and go to state 3
    LAND            shift, and go to state 4
    LOR             shift, and go to state 5
    TRUE            shift, and go to state 11
    FALSE           shift, and go to state 12
    INT_LIT         shift, and go to state 56
    SIGN_INT_LIT    shift, and go to state 14
    FLOAT_LIT       shift, and go to state 57
    SIGN_FLOAT_LIT  shift, and go to state 16
    ID              shift, and go to state 58
    '"'             shift, and go to state 18
    '('             shift, and go to state 19
    '!'             shift, and go to state 21

    INT             [reduce using rule 106 (expression)]
    FLOAT           [reduce using rule 106 (expression)]
    TRUE            [reduce using rule 106 (expression)]
    FALSE           [reduce using rule 106 (expression)]
    INT_LIT         [reduce using rule 106 (expression)]
    SIGN_INT_LIT    [reduce using rule 106 (expression)]
    FLOAT_LIT       [reduce using rule 106 (expression)]
    SIGN_FLOAT_LIT  [reduce using rule 106 (expression)]
    ID              [reduce using rule 106 (expression)]
    '"'             [reduce using rule 106 (expression)]
    '('             [reduce using rule 106 (expression)]
    '!'             [reduce using rule 106 (expression)]
    $default        reduce using rule 106 (expression)

    expression             go to state 255
    lor_expression         go to state 38
    land_expression        go to state 39
    comparsion_expression  go to state 256
    add_expression         go to state 41
    mul_expression         go to state 42
    operand                go to state 43
    term                   go to state 44
    bool                   go to state 60
    literal                go to state 61
    int_literal            go to state 62
    float_literal          go to state 63
    sign_literal           go to state 49
    string_literal         go to state 50
    literal_convert        go to state 51
    id_term                go to state 52


State 247

   70 for_stmt: FOR int_literal '{' $@9 stmts . '}'

    '}'  shift, and go to state 257


State 248

   68 for_stmt: FOR float_literal '{' $@8 stmts . '}'

    '}'  shift, and go to state 258


State 249

   23 declaration: ID '[' INT_LIT $@1 ']' . array_initial NEWLINE

    ADD_ASSIGN  shift, and go to state 101
    SUB_ASSIGN  shift, and go to state 102
    MUL_ASSIGN  shift, and go to state 103
    QUO_ASSIGN  shift, and go to state 104
    REM_ASSIGN  shift, and go to state 105
    '='         shift, and go to state 106

    $default  reduce using rule 26 (array_initial)

    array_initial  go to state 259
    assign         go to state 260
    error_assign   go to state 108


State 250

  148 id_term: ID $@13 '[' expression ']' .

    $default  reduce using rule 148 (id_term)


State 251

   31 string_initial: '=' '"' STRING_LIT . '"' NEWLINE

    '"'  shift, and go to state 261


State 252

   20 declaration: VAR ID '[' INT_LIT ']' INT . NEWLINE

    NEWLINE  shift, and go to state 262


State 253

   21 declaration: VAR ID '[' INT_LIT ']' FLOAT . NEWLINE

    NEWLINE  shift, and go to state 263


State 254

   72 for_stmt: FOR pure_arithmetic '{' $@10 stmts '}' .

    $default  reduce using rule 72 (for_stmt)


State 255

  110 comparsion_expression: expression . '>' add_expression
  111                      | expression . '<' add_expression
  112                      | expression . GEQ add_expression
  113                      | expression . LEQ add_expression
  114                      | expression . EQL add_expression
  115                      | expression . NEQ add_expression
  116                      | expression . add_expression

    INT             shift, and go to state 2
    FLOAT           shift, and go to state 3
    GEQ             shift, and go to state 109
    LEQ             shift, and go to state 110
    EQL             shift, and go to state 111
    NEQ             shift, and go to state 112
    TRUE            shift, and go to state 11
    FALSE           shift, and go to state 12
    INT_LIT         shift, and go to state 56
    SIGN_INT_LIT    shift, and go to state 14
    FLOAT_LIT       shift, and go to state 57
    SIGN_FLOAT_LIT  shift, and go to state 16
    ID              shift, and go to state 58
    '"'             shift, and go to state 18
    '('             shift, and go to state 19
    '>'             shift, and go to state 113
    '<'             shift, and go to state 114
    '!'             shift, and go to state 21

    add_expression   go to state 115
    mul_expression   go to state 42
    operand          go to state 43
    term             go to state 44
    bool             go to state 60
    literal          go to state 61
    int_literal      go to state 62
    float_literal    go to state 63
    sign_literal     go to state 49
    string_literal   go to state 50
    literal_convert  go to state 51
    id_term          go to state 52


State 256

   74 for_expr: ident assign ';' ident comparsion_expression . ';' arithmetic_add_stmt
   75         | ident assign ';' ident comparsion_expression . ';' incdec_stmt
  103 expression: comparsion_expression . expression

    INT             shift, and go to state 2
    FLOAT           shift, and go to state 3
    LAND            shift, and go to state 4
    LOR             shift, and go to state 5
    TRUE            shift, and go to state 11
    FALSE           shift, and go to state 12
    INT_LIT         shift, and go to state 56
    SIGN_INT_LIT    shift, and go to state 14
    FLOAT_LIT       shift, and go to state 57
    SIGN_FLOAT_LIT  shift, and go to state 16
    ID              shift, and go to state 58
    '"'             shift, and go to state 18
    '('             shift, and go to state 19
    ';'             shift, and go to state 264
    '!'             shift, and go to state 21

    INT             [reduce using rule 106 (expression)]
    FLOAT           [reduce using rule 106 (expression)]
    TRUE            [reduce using rule 106 (expression)]
    FALSE           [reduce using rule 106 (expression)]
    INT_LIT         [reduce using rule 106 (expression)]
    SIGN_INT_LIT    [reduce using rule 106 (expression)]
    FLOAT_LIT       [reduce using rule 106 (expression)]
    SIGN_FLOAT_LIT  [reduce using rule 106 (expression)]
    ID              [reduce using rule 106 (expression)]
    '"'             [reduce using rule 106 (expression)]
    '('             [reduce using rule 106 (expression)]
    '!'             [reduce using rule 106 (expression)]
    $default        reduce using rule 106 (expression)

    expression             go to state 117
    lor_expression         go to state 38
    land_expression        go to state 39
    comparsion_expression  go to state 40
    add_expression         go to state 41
    mul_expression         go to state 42
    operand                go to state 43
    term                   go to state 44
    bool                   go to state 60
    literal                go to state 61
    int_literal            go to state 62
    float_literal          go to state 63
    sign_literal           go to state 49
    string_literal         go to state 50
    literal_convert        go to state 51
    id_term                go to state 52


State 257

   70 for_stmt: FOR int_literal '{' $@9 stmts '}' .

    $default  reduce using rule 70 (for_stmt)


State 258

   68 for_stmt: FOR float_literal '{' $@8 stmts '}' .

    $default  reduce using rule 68 (for_stmt)


State 259

   23 declaration: ID '[' INT_LIT $@1 ']' array_initial . NEWLINE

    NEWLINE  shift, and go to state 265


State 260

   25 array_initial: assign .

    $default  reduce using rule 25 (array_initial)


State 261

   31 string_initial: '=' '"' STRING_LIT '"' . NEWLINE

    NEWLINE  shift, and go to state 266


State 262

   20 declaration: VAR ID '[' INT_LIT ']' INT NEWLINE .

    $default  reduce using rule 20 (declaration)


State 263

   21 declaration: VAR ID '[' INT_LIT ']' FLOAT NEWLINE .

    $default  reduce using rule 21 (declaration)


State 264

   74 for_expr: ident assign ';' ident comparsion_expression ';' . arithmetic_add_stmt
   75         | ident assign ';' ident comparsion_expression ';' . incdec_stmt

    ID  shift, and go to state 267

    incdec_stmt          go to state 268
    ident                go to state 269
    arithmetic_add_stmt  go to state 270
    arithmetic_mul_stmt  go to state 35


State 265

   23 declaration: ID '[' INT_LIT $@1 ']' array_initial NEWLINE .

    $default  reduce using rule 23 (declaration)


State 266

   31 string_initial: '=' '"' STRING_LIT '"' NEWLINE .

    $default  reduce using rule 31 (string_initial)


State 267

   93 ident: ID .
   96 arithmetic_add_stmt: ID . '+' ID
   97                    | ID . '-' ID
   99 arithmetic_mul_stmt: ID . '*' ID
  100                    | ID . '/' ID
  101                    | ID . '%' ID

    '+'  shift, and go to state 271
    '-'  shift, and go to state 87
    '*'  shift, and go to state 88
    '%'  shift, and go to state 272
    '/'  shift, and go to state 90

    $default  reduce using rule 93 (ident)


State 268

   75 for_expr: ident assign ';' ident comparsion_expression ';' incdec_stmt .

    $default  reduce using rule 75 (for_expr)


State 269

   33 incdec_stmt: ident . INC
   34            | ident . DEC

    INC  shift, and go to state 99
    DEC  shift, and go to state 100


State 270

   74 for_expr: ident assign ';' ident comparsion_expression ';' arithmetic_add_stmt .

    $default  reduce using rule 74 (for_expr)


State 271

   96 arithmetic_add_stmt: ID '+' . ID

    ID  shift, and go to state 163


State 272

  101 arithmetic_mul_stmt: ID '%' . ID

    ID  shift, and go to state 167
