State 0 conflicts: 21 shift/reduce, 1 reduce/reduce
State 4 conflicts: 14 shift/reduce
State 5 conflicts: 14 shift/reduce
State 13 conflicts: 3 shift/reduce
State 15 conflicts: 3 shift/reduce
State 17 conflicts: 7 shift/reduce
State 19 conflicts: 12 shift/reduce
State 23 conflicts: 21 shift/reduce, 1 reduce/reduce
State 37 conflicts: 18 shift/reduce
State 38 conflicts: 14 shift/reduce
State 40 conflicts: 14 shift/reduce
State 41 conflicts: 2 shift/reduce
State 42 conflicts: 3 shift/reduce
State 45 conflicts: 1 shift/reduce
State 47 conflicts: 3 shift/reduce
State 48 conflicts: 1 shift/reduce
State 54 conflicts: 12 shift/reduce
State 59 conflicts: 18 shift/reduce
State 64 conflicts: 18 shift/reduce
State 67 conflicts: 12 shift/reduce
State 82 conflicts: 12 shift/reduce
State 91 conflicts: 21 shift/reduce, 1 reduce/reduce
State 95 conflicts: 21 shift/reduce, 2 reduce/reduce
State 98 conflicts: 1 shift/reduce
State 103 conflicts: 14 shift/reduce, 30 reduce/reduce
State 112 conflicts: 2 shift/reduce
State 113 conflicts: 18 shift/reduce
State 114 conflicts: 18 shift/reduce
State 120 conflicts: 14 shift/reduce
State 131 conflicts: 1 shift/reduce
State 132 conflicts: 1 shift/reduce, 1 reduce/reduce
State 138 conflicts: 12 shift/reduce
State 139 conflicts: 12 shift/reduce
State 166 conflicts: 12 shift/reduce
State 173 conflicts: 14 shift/reduce, 30 reduce/reduce
State 174 conflicts: 14 shift/reduce, 30 reduce/reduce
State 175 conflicts: 14 shift/reduce, 30 reduce/reduce
State 176 conflicts: 14 shift/reduce, 30 reduce/reduce
State 177 conflicts: 14 shift/reduce, 30 reduce/reduce
State 178 conflicts: 30 reduce/reduce
State 180 conflicts: 18 shift/reduce
State 181 conflicts: 30 reduce/reduce
State 182 conflicts: 30 reduce/reduce
State 183 conflicts: 30 reduce/reduce
State 184 conflicts: 30 reduce/reduce
State 186 conflicts: 2 shift/reduce
State 187 conflicts: 2 shift/reduce
State 188 conflicts: 2 shift/reduce
State 189 conflicts: 2 shift/reduce
State 190 conflicts: 2 shift/reduce
State 191 conflicts: 2 shift/reduce
State 192 conflicts: 3 shift/reduce
State 193 conflicts: 3 shift/reduce
State 197 conflicts: 18 shift/reduce
State 219 conflicts: 21 shift/reduce, 1 reduce/reduce
State 222 conflicts: 21 shift/reduce, 1 reduce/reduce
State 223 conflicts: 21 shift/reduce, 1 reduce/reduce
State 228 conflicts: 14 shift/reduce
State 249 conflicts: 12 shift/reduce
State 255 conflicts: 18 shift/reduce
State 266 conflicts: 12 shift/reduce


Grammar

    0 $accept: Program $end

    1 Program: stmt stmts
    2        | %empty

    3 stmts: stmt stmts
    4      | %empty

    5 stmt: declaration
    6     | print_stmt
    7     | error_stmt
    8     | if_stmt
    9     | for_stmt
   10     | pure_arithmetic
   11     | incdec_stmt
   12     | arithmetic_add_stmt
   13     | expression_stmt
   14     | block
   15     | NEWLINE

   16 $@1: %empty

   17 declaration: VAR ID INT $@1 literal_initial NEWLINE
   18            | VAR ID STRING string_initial

   19 $@2: %empty

   20 declaration: VAR ID FLOAT $@2 literal_initial NEWLINE
   21            | VAR ID BOOL bool_initial NEWLINE
   22            | VAR ID '[' INT_LIT ']' INT NEWLINE
   23            | VAR ID '[' INT_LIT ']' FLOAT NEWLINE

   24 $@3: %empty

   25 $@4: %empty

   26 declaration: ID '[' INT_LIT $@3 ']' array_initial $@4 NEWLINE

   27 $@5: %empty

   28 declaration: ident assign $@5 NEWLINE

   29 $@6: %empty

   30 declaration: ID '=' expression $@6 NEWLINE

   31 array_initial: assign
   32              | %empty

   33 bool_initial: '=' bool
   34             | %empty

   35 literal_initial: '=' literal
   36                | %empty

   37 string_initial: '=' '"' STRING_LIT '"' NEWLINE

   38 $@7: %empty

   39 string_initial: $@7 NEWLINE

   40 incdec_stmt: ident INC
   41            | ident DEC

   42 $@8: %empty

   43 print_stmt: PRINTLN $@8 '(' expression ')'

   44 $@9: %empty

   45 print_stmt: PRINT $@9 '(' expression ')'

   46 pure_arithmetic: int_literal '+' int_literal
   47                | int_literal '-' int_literal
   48                | FLOAT_LIT '+' FLOAT_LIT
   49                | FLOAT_LIT '-' FLOAT_LIT
   50                | ID '+' INT_LIT
   51                | invalid_arithmetic

   52 invalid_arithmetic: INT_LIT '+' FLOAT_LIT
   53                   | FLOAT_LIT '+' INT_LIT
   54                   | INT_LIT '-' FLOAT_LIT
   55                   | FLOAT_LIT '-' INT_LIT
   56                   | INT_LIT '*' FLOAT_LIT
   57                   | FLOAT_LIT '*' INT_LIT
   58                   | ID '%' INT_LIT
   59                   | int_literal LAND bool
   60                   | float_literal LAND bool
   61                   | bool LOR expression

   62 $@10: %empty

   63 $@11: %empty

   64 $@12: %empty

   65 if_stmt: IF $@10 expression $@11 block $@12 else_stmt

   66 else_stmt: ELSE if_stmt
   67          | ELSE block
   68          | %empty

   69 $@13: %empty

   70 for_stmt: FOR float_literal '{' $@13 stmts '}'

   71 $@14: %empty

   72 for_stmt: FOR int_literal '{' $@14 stmts '}'

   73 $@15: %empty

   74 for_stmt: FOR pure_arithmetic '{' $@15 stmts '}'
   75         | FOR for_expr block

   76 $@16: %empty

   77 for_expr: ident assign $@16 ';' comparsion_expression ';' incdec_stmt

   78 $@17: %empty

   79 for_expr: ident $@17 '>' int_literal

   80 $@18: %empty

   81 assign: ADD_ASSIGN $@18 var

   82 $@19: %empty

   83 assign: SUB_ASSIGN $@19 var

   84 $@20: %empty

   85 assign: MUL_ASSIGN $@20 var

   86 $@21: %empty

   87 assign: QUO_ASSIGN $@21 var

   88 $@22: %empty

   89 assign: REM_ASSIGN $@22 var
   90       | '=' var
   91       | error_assign

   92 error_assign: ADD_ASSIGN ID

   93 error_stmt: literal assign

   94 var: int_literal
   95    | float_literal
   96    | string_literal
   97    | bool
   98    | expression
   99    | ID
  100    | %empty

  101 ident: ID

  102 $@23: %empty

  103 block: '{' $@23 stmts '}'

  104 arithmetic_add_stmt: ID '+' ID
  105                    | ID '-' ID
  106                    | arithmetic_mul_stmt

  107 arithmetic_mul_stmt: ID '*' ID
  108                    | ID '/' ID
  109                    | ID '%' ID

  110 expression_stmt: expression

  111 expression: comparsion_expression expression
  112           | lor_expression expression
  113           | add_expression
  114           | %empty

  115 lor_expression: land_expression
  116               | LOR expression

  117 land_expression: LAND expression

  118 comparsion_expression: expression '>' add_expression
  119                      | expression '<' add_expression
  120                      | expression GEQ add_expression
  121                      | expression LEQ add_expression
  122                      | expression EQL add_expression
  123                      | expression NEQ add_expression
  124                      | expression add_expression

  125 add_expression: add_expression '+' mul_expression
  126               | add_expression '-' mul_expression
  127               | mul_expression

  128 mul_expression: mul_expression '*' operand
  129               | mul_expression '/' operand
  130               | mul_expression '%' operand
  131               | operand

  132 operand: '(' expression ')'
  133        | term

  134 term: literal
  135     | sign_literal
  136     | literal_convert
  137     | string_literal
  138     | bool
  139     | id_term

  140 $@24: %empty

  141 $@25: %empty

  142 bool: '!' $@24 bool $@25 expression
  143     | TRUE
  144     | FALSE

  145 literal: int_literal
  146        | float_literal

  147 int_literal: INT_LIT

  148 float_literal: FLOAT_LIT

  149 sign_literal: SIGN_INT_LIT
  150             | SIGN_FLOAT_LIT

  151 string_literal: '"' STRING_LIT '"'

  152 literal_convert: INT '(' ident ')'
  153                | INT '(' FLOAT_LIT ')'
  154                | FLOAT '(' ident ')'
  155                | FLOAT '(' INT_LIT ')'
  156                | INT '(' ID '[' INT_LIT ']' ')'
  157                | INT '(' expression ')'

  158 $@26: %empty

  159 id_term: ID $@26 '[' expression ']'
  160        | ID


Terminals, with rules where they appear

$end (0) 0
'!' (33) 142
'"' (34) 37 151
'%' (37) 58 109 130
'(' (40) 43 45 132 152 153 154 155 156 157
')' (41) 43 45 132 152 153 154 155 156 157
'*' (42) 56 57 107 128
'+' (43) 46 48 50 52 53 104 125
'-' (45) 47 49 54 55 105 126
'/' (47) 108 129
';' (59) 77
'<' (60) 119
'=' (61) 30 33 35 37 90
'>' (62) 79 118
'[' (91) 22 23 26 156 159
']' (93) 22 23 26 156 159
'{' (123) 70 72 74 103
'}' (125) 70 72 74 103
error (256)
VAR (258) 17 18 20 21 22 23
INT (259) 17 22 152 153 156 157
FLOAT (260) 20 23 154 155
BOOL (261) 21
STRING (262) 18
INC (263) 40
DEC (264) 41
GEQ (265) 120
LEQ (266) 121
EQL (267) 122
NEQ (268) 123
ADD_ASSIGN (269) 81 92
SUB_ASSIGN (270) 83
MUL_ASSIGN (271) 85
QUO_ASSIGN (272) 87
REM_ASSIGN (273) 89
LAND (274) 59 60 117
LOR (275) 61 116
NEWLINE (276) 15 17 20 21 22 23 26 28 30 37 39
PRINT (277) 45
PRINTLN (278) 43
IF (279) 65
ELSE (280) 66 67
FOR (281) 70 72 74 75
TRUE (282) 143
FALSE (283) 144
INT_LIT (284) 22 23 26 50 52 53 54 55 56 57 58 147 155 156
SIGN_INT_LIT (285) 149
FLOAT_LIT (286) 48 49 52 53 54 55 56 57 148 153
SIGN_FLOAT_LIT (287) 150
STRING_LIT (288) 37 151
ID (289) 17 18 20 21 22 23 26 30 50 58 92 99 101 104 105 107 108 109
    156 159 160


Nonterminals, with rules where they appear

$accept (52)
    on left: 0
Program (53)
    on left: 1 2, on right: 0
stmts (54)
    on left: 3 4, on right: 1 3 70 72 74 103
stmt (55)
    on left: 5 6 7 8 9 10 11 12 13 14 15, on right: 1 3
declaration (56)
    on left: 17 18 20 21 22 23 26 28 30, on right: 5
$@1 (57)
    on left: 16, on right: 17
$@2 (58)
    on left: 19, on right: 20
$@3 (59)
    on left: 24, on right: 26
$@4 (60)
    on left: 25, on right: 26
$@5 (61)
    on left: 27, on right: 28
$@6 (62)
    on left: 29, on right: 30
array_initial (63)
    on left: 31 32, on right: 26
bool_initial (64)
    on left: 33 34, on right: 21
literal_initial (65)
    on left: 35 36, on right: 17 20
string_initial (66)
    on left: 37 39, on right: 18
$@7 (67)
    on left: 38, on right: 39
incdec_stmt (68)
    on left: 40 41, on right: 11 77
print_stmt (69)
    on left: 43 45, on right: 6
$@8 (70)
    on left: 42, on right: 43
$@9 (71)
    on left: 44, on right: 45
pure_arithmetic (72)
    on left: 46 47 48 49 50 51, on right: 10 74
invalid_arithmetic (73)
    on left: 52 53 54 55 56 57 58 59 60 61, on right: 51
if_stmt (74)
    on left: 65, on right: 8 66
$@10 (75)
    on left: 62, on right: 65
$@11 (76)
    on left: 63, on right: 65
$@12 (77)
    on left: 64, on right: 65
else_stmt (78)
    on left: 66 67 68, on right: 65
for_stmt (79)
    on left: 70 72 74 75, on right: 9
$@13 (80)
    on left: 69, on right: 70
$@14 (81)
    on left: 71, on right: 72
$@15 (82)
    on left: 73, on right: 74
for_expr (83)
    on left: 77 79, on right: 75
$@16 (84)
    on left: 76, on right: 77
$@17 (85)
    on left: 78, on right: 79
assign (86)
    on left: 81 83 85 87 89 90 91, on right: 28 31 77 93
$@18 (87)
    on left: 80, on right: 81
$@19 (88)
    on left: 82, on right: 83
$@20 (89)
    on left: 84, on right: 85
$@21 (90)
    on left: 86, on right: 87
$@22 (91)
    on left: 88, on right: 89
error_assign (92)
    on left: 92, on right: 91
error_stmt (93)
    on left: 93, on right: 7
var (94)
    on left: 94 95 96 97 98 99 100, on right: 81 83 85 87 89 90
ident (95)
    on left: 101, on right: 28 40 41 77 79 152 154
block (96)
    on left: 103, on right: 14 65 67 75
$@23 (97)
    on left: 102, on right: 103
arithmetic_add_stmt (98)
    on left: 104 105 106, on right: 12
arithmetic_mul_stmt (99)
    on left: 107 108 109, on right: 106
expression_stmt (100)
    on left: 110, on right: 13
expression (101)
    on left: 111 112 113 114, on right: 30 43 45 61 65 98 110 111 112
    116 117 118 119 120 121 122 123 124 132 142 157 159
lor_expression (102)
    on left: 115 116, on right: 112
land_expression (103)
    on left: 117, on right: 115
comparsion_expression (104)
    on left: 118 119 120 121 122 123 124, on right: 77 111
add_expression (105)
    on left: 125 126 127, on right: 113 118 119 120 121 122 123 124
    125 126
mul_expression (106)
    on left: 128 129 130 131, on right: 125 126 127 128 129 130
operand (107)
    on left: 132 133, on right: 128 129 130 131
term (108)
    on left: 134 135 136 137 138 139, on right: 133
bool (109)
    on left: 142 143 144, on right: 33 59 60 61 97 138 142
$@24 (110)
    on left: 140, on right: 142
$@25 (111)
    on left: 141, on right: 142
literal (112)
    on left: 145 146, on right: 35 93 134
int_literal (113)
    on left: 147, on right: 46 47 59 72 79 94 145
float_literal (114)
    on left: 148, on right: 60 70 95 146
sign_literal (115)
    on left: 149 150, on right: 135
string_literal (116)
    on left: 151, on right: 96 137
literal_convert (117)
    on left: 152 153 154 155 156 157, on right: 136
id_term (118)
    on left: 159 160, on right: 139
$@26 (119)
    on left: 158, on right: 159


State 0

    0 $accept: . Program $end

    VAR             shift, and go to state 1
    INT             shift, and go to state 2
    FLOAT           shift, and go to state 3
    LAND            shift, and go to state 4
    LOR             shift, and go to state 5
    NEWLINE         shift, and go to state 6
    PRINT           shift, and go to state 7
    PRINTLN         shift, and go to state 8
    IF              shift, and go to state 9
    FOR             shift, and go to state 10
    TRUE            shift, and go to state 11
    FALSE           shift, and go to state 12
    INT_LIT         shift, and go to state 13
    SIGN_INT_LIT    shift, and go to state 14
    FLOAT_LIT       shift, and go to state 15
    SIGN_FLOAT_LIT  shift, and go to state 16
    ID              shift, and go to state 17
    '"'             shift, and go to state 18
    '('             shift, and go to state 19
    '{'             shift, and go to state 20
    '!'             shift, and go to state 21

    $end            reduce using rule 2 (Program)
    $end            [reduce using rule 114 (expression)]
    VAR             [reduce using rule 114 (expression)]
    INT             [reduce using rule 114 (expression)]
    FLOAT           [reduce using rule 114 (expression)]
    LAND            [reduce using rule 114 (expression)]
    LOR             [reduce using rule 114 (expression)]
    NEWLINE         [reduce using rule 114 (expression)]
    PRINT           [reduce using rule 114 (expression)]
    PRINTLN         [reduce using rule 114 (expression)]
    IF              [reduce using rule 114 (expression)]
    FOR             [reduce using rule 114 (expression)]
    TRUE            [reduce using rule 114 (expression)]
    FALSE           [reduce using rule 114 (expression)]
    INT_LIT         [reduce using rule 114 (expression)]
    SIGN_INT_LIT    [reduce using rule 114 (expression)]
    FLOAT_LIT       [reduce using rule 114 (expression)]
    SIGN_FLOAT_LIT  [reduce using rule 114 (expression)]
    ID              [reduce using rule 114 (expression)]
    '"'             [reduce using rule 114 (expression)]
    '('             [reduce using rule 114 (expression)]
    '{'             [reduce using rule 114 (expression)]
    '!'             [reduce using rule 114 (expression)]
    $default        reduce using rule 114 (expression)

    Program                go to state 22
    stmt                   go to state 23
    declaration            go to state 24
    incdec_stmt            go to state 25
    print_stmt             go to state 26
    pure_arithmetic        go to state 27
    invalid_arithmetic     go to state 28
    if_stmt                go to state 29
    for_stmt               go to state 30
    error_stmt             go to state 31
    ident                  go to state 32
    block                  go to state 33
    arithmetic_add_stmt    go to state 34
    arithmetic_mul_stmt    go to state 35
    expression_stmt        go to state 36
    expression             go to state 37
    lor_expression         go to state 38
    land_expression        go to state 39
    comparsion_expression  go to state 40
    add_expression         go to state 41
    mul_expression         go to state 42
    operand                go to state 43
    term                   go to state 44
    bool                   go to state 45
    literal                go to state 46
    int_literal            go to state 47
    float_literal          go to state 48
    sign_literal           go to state 49
    string_literal         go to state 50
    literal_convert        go to state 51
    id_term                go to state 52


State 1

   17 declaration: VAR . ID INT $@1 literal_initial NEWLINE
   18            | VAR . ID STRING string_initial
   20            | VAR . ID FLOAT $@2 literal_initial NEWLINE
   21            | VAR . ID BOOL bool_initial NEWLINE
   22            | VAR . ID '[' INT_LIT ']' INT NEWLINE
   23            | VAR . ID '[' INT_LIT ']' FLOAT NEWLINE

    ID  shift, and go to state 53


State 2

  152 literal_convert: INT . '(' ident ')'
  153                | INT . '(' FLOAT_LIT ')'
  156                | INT . '(' ID '[' INT_LIT ']' ')'
  157                | INT . '(' expression ')'

    '('  shift, and go to state 54


State 3

  154 literal_convert: FLOAT . '(' ident ')'
  155                | FLOAT . '(' INT_LIT ')'

    '('  shift, and go to state 55


State 4

  117 land_expression: LAND . expression

    INT             shift, and go to state 2
    FLOAT           shift, and go to state 3
    LAND            shift, and go to state 4
    LOR             shift, and go to state 5
    TRUE            shift, and go to state 11
    FALSE           shift, and go to state 12
    INT_LIT         shift, and go to state 56
    SIGN_INT_LIT    shift, and go to state 14
    FLOAT_LIT       shift, and go to state 57
    SIGN_FLOAT_LIT  shift, and go to state 16
    ID              shift, and go to state 58
    '"'             shift, and go to state 18
    '('             shift, and go to state 19
    '!'             shift, and go to state 21

    INT             [reduce using rule 114 (expression)]
    FLOAT           [reduce using rule 114 (expression)]
    LAND            [reduce using rule 114 (expression)]
    LOR             [reduce using rule 114 (expression)]
    TRUE            [reduce using rule 114 (expression)]
    FALSE           [reduce using rule 114 (expression)]
    INT_LIT         [reduce using rule 114 (expression)]
    SIGN_INT_LIT    [reduce using rule 114 (expression)]
    FLOAT_LIT       [reduce using rule 114 (expression)]
    SIGN_FLOAT_LIT  [reduce using rule 114 (expression)]
    ID              [reduce using rule 114 (expression)]
    '"'             [reduce using rule 114 (expression)]
    '('             [reduce using rule 114 (expression)]
    '!'             [reduce using rule 114 (expression)]
    $default        reduce using rule 114 (expression)

    expression             go to state 59
    lor_expression         go to state 38
    land_expression        go to state 39
    comparsion_expression  go to state 40
    add_expression         go to state 41
    mul_expression         go to state 42
    operand                go to state 43
    term                   go to state 44
    bool                   go to state 60
    literal                go to state 61
    int_literal            go to state 62
    float_literal          go to state 63
    sign_literal           go to state 49
    string_literal         go to state 50
    literal_convert        go to state 51
    id_term                go to state 52


State 5

  116 lor_expression: LOR . expression

    INT             shift, and go to state 2
    FLOAT           shift, and go to state 3
    LAND            shift, and go to state 4
    LOR             shift, and go to state 5
    TRUE            shift, and go to state 11
    FALSE           shift, and go to state 12
    INT_LIT         shift, and go to state 56
    SIGN_INT_LIT    shift, and go to state 14
    FLOAT_LIT       shift, and go to state 57
    SIGN_FLOAT_LIT  shift, and go to state 16
    ID              shift, and go to state 58
    '"'             shift, and go to state 18
    '('             shift, and go to state 19
    '!'             shift, and go to state 21

    INT             [reduce using rule 114 (expression)]
    FLOAT           [reduce using rule 114 (expression)]
    LAND            [reduce using rule 114 (expression)]
    LOR             [reduce using rule 114 (expression)]
    TRUE            [reduce using rule 114 (expression)]
    FALSE           [reduce using rule 114 (expression)]
    INT_LIT         [reduce using rule 114 (expression)]
    SIGN_INT_LIT    [reduce using rule 114 (expression)]
    FLOAT_LIT       [reduce using rule 114 (expression)]
    SIGN_FLOAT_LIT  [reduce using rule 114 (expression)]
    ID              [reduce using rule 114 (expression)]
    '"'             [reduce using rule 114 (expression)]
    '('             [reduce using rule 114 (expression)]
    '!'             [reduce using rule 114 (expression)]
    $default        reduce using rule 114 (expression)

    expression             go to state 64
    lor_expression         go to state 38
    land_expression        go to state 39
    comparsion_expression  go to state 40
    add_expression         go to state 41
    mul_expression         go to state 42
    operand                go to state 43
    term                   go to state 44
    bool                   go to state 60
    literal                go to state 61
    int_literal            go to state 62
    float_literal          go to state 63
    sign_literal           go to state 49
    string_literal         go to state 50
    literal_convert        go to state 51
    id_term                go to state 52


State 6

   15 stmt: NEWLINE .

    $default  reduce using rule 15 (stmt)


State 7

   45 print_stmt: PRINT . $@9 '(' expression ')'

    $default  reduce using rule 44 ($@9)

    $@9  go to state 65


State 8

   43 print_stmt: PRINTLN . $@8 '(' expression ')'

    $default  reduce using rule 42 ($@8)

    $@8  go to state 66


State 9

   65 if_stmt: IF . $@10 expression $@11 block $@12 else_stmt

    $default  reduce using rule 62 ($@10)

    $@10  go to state 67


State 10

   70 for_stmt: FOR . float_literal '{' $@13 stmts '}'
   72         | FOR . int_literal '{' $@14 stmts '}'
   74         | FOR . pure_arithmetic '{' $@15 stmts '}'
   75         | FOR . for_expr block

    TRUE       shift, and go to state 11
    FALSE      shift, and go to state 12
    INT_LIT    shift, and go to state 13
    FLOAT_LIT  shift, and go to state 15
    ID         shift, and go to state 68
    '!'        shift, and go to state 21

    pure_arithmetic     go to state 69
    invalid_arithmetic  go to state 28
    for_expr            go to state 70
    ident               go to state 71
    bool                go to state 72
    int_literal         go to state 73
    float_literal       go to state 74


State 11

  143 bool: TRUE .

    $default  reduce using rule 143 (bool)


State 12

  144 bool: FALSE .

    $default  reduce using rule 144 (bool)


State 13

   52 invalid_arithmetic: INT_LIT . '+' FLOAT_LIT
   54                   | INT_LIT . '-' FLOAT_LIT
   56                   | INT_LIT . '*' FLOAT_LIT
  147 int_literal: INT_LIT .

    '+'  shift, and go to state 75
    '-'  shift, and go to state 76
    '*'  shift, and go to state 77

    '+'       [reduce using rule 147 (int_literal)]
    '-'       [reduce using rule 147 (int_literal)]
    '*'       [reduce using rule 147 (int_literal)]
    $default  reduce using rule 147 (int_literal)


State 14

  149 sign_literal: SIGN_INT_LIT .

    $default  reduce using rule 149 (sign_literal)


State 15

   48 pure_arithmetic: FLOAT_LIT . '+' FLOAT_LIT
   49                | FLOAT_LIT . '-' FLOAT_LIT
   53 invalid_arithmetic: FLOAT_LIT . '+' INT_LIT
   55                   | FLOAT_LIT . '-' INT_LIT
   57                   | FLOAT_LIT . '*' INT_LIT
  148 float_literal: FLOAT_LIT .

    '+'  shift, and go to state 78
    '-'  shift, and go to state 79
    '*'  shift, and go to state 80

    '+'       [reduce using rule 148 (float_literal)]
    '-'       [reduce using rule 148 (float_literal)]
    '*'       [reduce using rule 148 (float_literal)]
    $default  reduce using rule 148 (float_literal)


State 16

  150 sign_literal: SIGN_FLOAT_LIT .

    $default  reduce using rule 150 (sign_literal)


State 17

   26 declaration: ID . '[' INT_LIT $@3 ']' array_initial $@4 NEWLINE
   30            | ID . '=' expression $@6 NEWLINE
   50 pure_arithmetic: ID . '+' INT_LIT
   58 invalid_arithmetic: ID . '%' INT_LIT
  101 ident: ID .
  104 arithmetic_add_stmt: ID . '+' ID
  105                    | ID . '-' ID
  107 arithmetic_mul_stmt: ID . '*' ID
  108                    | ID . '/' ID
  109                    | ID . '%' ID
  159 id_term: ID . $@26 '[' expression ']'
  160        | ID .

    '['  shift, and go to state 81
    '='  shift, and go to state 82
    '+'  shift, and go to state 83
    '-'  shift, and go to state 84
    '*'  shift, and go to state 85
    '%'  shift, and go to state 86
    '/'  shift, and go to state 87

    INC         reduce using rule 101 (ident)
    DEC         reduce using rule 101 (ident)
    ADD_ASSIGN  reduce using rule 101 (ident)
    SUB_ASSIGN  reduce using rule 101 (ident)
    MUL_ASSIGN  reduce using rule 101 (ident)
    QUO_ASSIGN  reduce using rule 101 (ident)
    REM_ASSIGN  reduce using rule 101 (ident)
    '['         [reduce using rule 158 ($@26)]
    '='         [reduce using rule 101 (ident)]
    '+'         [reduce using rule 160 (id_term)]
    '-'         [reduce using rule 160 (id_term)]
    '*'         [reduce using rule 160 (id_term)]
    '%'         [reduce using rule 160 (id_term)]
    '/'         [reduce using rule 160 (id_term)]
    $default    reduce using rule 160 (id_term)

    $@26  go to state 88


State 18

  151 string_literal: '"' . STRING_LIT '"'

    STRING_LIT  shift, and go to state 89


State 19

  132 operand: '(' . expression ')'

    INT             shift, and go to state 2
    FLOAT           shift, and go to state 3
    LAND            shift, and go to state 4
    LOR             shift, and go to state 5
    TRUE            shift, and go to state 11
    FALSE           shift, and go to state 12
    INT_LIT         shift, and go to state 56
    SIGN_INT_LIT    shift, and go to state 14
    FLOAT_LIT       shift, and go to state 57
    SIGN_FLOAT_LIT  shift, and go to state 16
    ID              shift, and go to state 58
    '"'             shift, and go to state 18
    '('             shift, and go to state 19
    '!'             shift, and go to state 21

    INT             [reduce using rule 114 (expression)]
    FLOAT           [reduce using rule 114 (expression)]
    TRUE            [reduce using rule 114 (expression)]
    FALSE           [reduce using rule 114 (expression)]
    INT_LIT         [reduce using rule 114 (expression)]
    SIGN_INT_LIT    [reduce using rule 114 (expression)]
    FLOAT_LIT       [reduce using rule 114 (expression)]
    SIGN_FLOAT_LIT  [reduce using rule 114 (expression)]
    ID              [reduce using rule 114 (expression)]
    '"'             [reduce using rule 114 (expression)]
    '('             [reduce using rule 114 (expression)]
    '!'             [reduce using rule 114 (expression)]
    $default        reduce using rule 114 (expression)

    expression             go to state 90
    lor_expression         go to state 38
    land_expression        go to state 39
    comparsion_expression  go to state 40
    add_expression         go to state 41
    mul_expression         go to state 42
    operand                go to state 43
    term                   go to state 44
    bool                   go to state 60
    literal                go to state 61
    int_literal            go to state 62
    float_literal          go to state 63
    sign_literal           go to state 49
    string_literal         go to state 50
    literal_convert        go to state 51
    id_term                go to state 52


State 20

  103 block: '{' . $@23 stmts '}'

    $default  reduce using rule 102 ($@23)

    $@23  go to state 91


State 21

  142 bool: '!' . $@24 bool $@25 expression

    $default  reduce using rule 140 ($@24)

    $@24  go to state 92


State 22

    0 $accept: Program . $end

    $end  shift, and go to state 93


State 23

    1 Program: stmt . stmts

    VAR             shift, and go to state 1
    INT             shift, and go to state 2
    FLOAT           shift, and go to state 3
    LAND            shift, and go to state 4
    LOR             shift, and go to state 5
    NEWLINE         shift, and go to state 6
    PRINT           shift, and go to state 7
    PRINTLN         shift, and go to state 8
    IF              shift, and go to state 9
    FOR             shift, and go to state 10
    TRUE            shift, and go to state 11
    FALSE           shift, and go to state 12
    INT_LIT         shift, and go to state 13
    SIGN_INT_LIT    shift, and go to state 14
    FLOAT_LIT       shift, and go to state 15
    SIGN_FLOAT_LIT  shift, and go to state 16
    ID              shift, and go to state 17
    '"'             shift, and go to state 18
    '('             shift, and go to state 19
    '{'             shift, and go to state 20
    '!'             shift, and go to state 21

    $end            reduce using rule 4 (stmts)
    $end            [reduce using rule 114 (expression)]
    VAR             [reduce using rule 114 (expression)]
    INT             [reduce using rule 114 (expression)]
    FLOAT           [reduce using rule 114 (expression)]
    LAND            [reduce using rule 114 (expression)]
    LOR             [reduce using rule 114 (expression)]
    NEWLINE         [reduce using rule 114 (expression)]
    PRINT           [reduce using rule 114 (expression)]
    PRINTLN         [reduce using rule 114 (expression)]
    IF              [reduce using rule 114 (expression)]
    FOR             [reduce using rule 114 (expression)]
    TRUE            [reduce using rule 114 (expression)]
    FALSE           [reduce using rule 114 (expression)]
    INT_LIT         [reduce using rule 114 (expression)]
    SIGN_INT_LIT    [reduce using rule 114 (expression)]
    FLOAT_LIT       [reduce using rule 114 (expression)]
    SIGN_FLOAT_LIT  [reduce using rule 114 (expression)]
    ID              [reduce using rule 114 (expression)]
    '"'             [reduce using rule 114 (expression)]
    '('             [reduce using rule 114 (expression)]
    '{'             [reduce using rule 114 (expression)]
    '!'             [reduce using rule 114 (expression)]
    $default        reduce using rule 114 (expression)

    stmts                  go to state 94
    stmt                   go to state 95
    declaration            go to state 24
    incdec_stmt            go to state 25
    print_stmt             go to state 26
    pure_arithmetic        go to state 27
    invalid_arithmetic     go to state 28
    if_stmt                go to state 29
    for_stmt               go to state 30
    error_stmt             go to state 31
    ident                  go to state 32
    block                  go to state 33
    arithmetic_add_stmt    go to state 34
    arithmetic_mul_stmt    go to state 35
    expression_stmt        go to state 36
    expression             go to state 37
    lor_expression         go to state 38
    land_expression        go to state 39
    comparsion_expression  go to state 40
    add_expression         go to state 41
    mul_expression         go to state 42
    operand                go to state 43
    term                   go to state 44
    bool                   go to state 45
    literal                go to state 46
    int_literal            go to state 47
    float_literal          go to state 48
    sign_literal           go to state 49
    string_literal         go to state 50
    literal_convert        go to state 51
    id_term                go to state 52


State 24

    5 stmt: declaration .

    $default  reduce using rule 5 (stmt)


State 25

   11 stmt: incdec_stmt .

    $default  reduce using rule 11 (stmt)


State 26

    6 stmt: print_stmt .

    $default  reduce using rule 6 (stmt)


State 27

   10 stmt: pure_arithmetic .

    $default  reduce using rule 10 (stmt)


State 28

   51 pure_arithmetic: invalid_arithmetic .

    $default  reduce using rule 51 (pure_arithmetic)


State 29

    8 stmt: if_stmt .

    $default  reduce using rule 8 (stmt)


State 30

    9 stmt: for_stmt .

    $default  reduce using rule 9 (stmt)


State 31

    7 stmt: error_stmt .

    $default  reduce using rule 7 (stmt)


State 32

   28 declaration: ident . assign $@5 NEWLINE
   40 incdec_stmt: ident . INC
   41            | ident . DEC

    INC         shift, and go to state 96
    DEC         shift, and go to state 97
    ADD_ASSIGN  shift, and go to state 98
    SUB_ASSIGN  shift, and go to state 99
    MUL_ASSIGN  shift, and go to state 100
    QUO_ASSIGN  shift, and go to state 101
    REM_ASSIGN  shift, and go to state 102
    '='         shift, and go to state 103

    assign        go to state 104
    error_assign  go to state 105


State 33

   14 stmt: block .

    $default  reduce using rule 14 (stmt)


State 34

   12 stmt: arithmetic_add_stmt .

    $default  reduce using rule 12 (stmt)


State 35

  106 arithmetic_add_stmt: arithmetic_mul_stmt .

    $default  reduce using rule 106 (arithmetic_add_stmt)


State 36

   13 stmt: expression_stmt .

    $default  reduce using rule 13 (stmt)


State 37

  110 expression_stmt: expression .
  118 comparsion_expression: expression . '>' add_expression
  119                      | expression . '<' add_expression
  120                      | expression . GEQ add_expression
  121                      | expression . LEQ add_expression
  122                      | expression . EQL add_expression
  123                      | expression . NEQ add_expression
  124                      | expression . add_expression

    INT             shift, and go to state 2
    FLOAT           shift, and go to state 3
    GEQ             shift, and go to state 106
    LEQ             shift, and go to state 107
    EQL             shift, and go to state 108
    NEQ             shift, and go to state 109
    TRUE            shift, and go to state 11
    FALSE           shift, and go to state 12
    INT_LIT         shift, and go to state 56
    SIGN_INT_LIT    shift, and go to state 14
    FLOAT_LIT       shift, and go to state 57
    SIGN_FLOAT_LIT  shift, and go to state 16
    ID              shift, and go to state 58
    '"'             shift, and go to state 18
    '('             shift, and go to state 19
    '>'             shift, and go to state 110
    '<'             shift, and go to state 111
    '!'             shift, and go to state 21

    INT             [reduce using rule 110 (expression_stmt)]
    FLOAT           [reduce using rule 110 (expression_stmt)]
    GEQ             [reduce using rule 110 (expression_stmt)]
    LEQ             [reduce using rule 110 (expression_stmt)]
    EQL             [reduce using rule 110 (expression_stmt)]
    NEQ             [reduce using rule 110 (expression_stmt)]
    TRUE            [reduce using rule 110 (expression_stmt)]
    FALSE           [reduce using rule 110 (expression_stmt)]
    INT_LIT         [reduce using rule 110 (expression_stmt)]
    SIGN_INT_LIT    [reduce using rule 110 (expression_stmt)]
    FLOAT_LIT       [reduce using rule 110 (expression_stmt)]
    SIGN_FLOAT_LIT  [reduce using rule 110 (expression_stmt)]
    ID              [reduce using rule 110 (expression_stmt)]
    '"'             [reduce using rule 110 (expression_stmt)]
    '('             [reduce using rule 110 (expression_stmt)]
    '>'             [reduce using rule 110 (expression_stmt)]
    '<'             [reduce using rule 110 (expression_stmt)]
    '!'             [reduce using rule 110 (expression_stmt)]
    $default        reduce using rule 110 (expression_stmt)

    add_expression   go to state 112
    mul_expression   go to state 42
    operand          go to state 43
    term             go to state 44
    bool             go to state 60
    literal          go to state 61
    int_literal      go to state 62
    float_literal    go to state 63
    sign_literal     go to state 49
    string_literal   go to state 50
    literal_convert  go to state 51
    id_term          go to state 52


State 38

  112 expression: lor_expression . expression

    INT             shift, and go to state 2
    FLOAT           shift, and go to state 3
    LAND            shift, and go to state 4
    LOR             shift, and go to state 5
    TRUE            shift, and go to state 11
    FALSE           shift, and go to state 12
    INT_LIT         shift, and go to state 56
    SIGN_INT_LIT    shift, and go to state 14
    FLOAT_LIT       shift, and go to state 57
    SIGN_FLOAT_LIT  shift, and go to state 16
    ID              shift, and go to state 58
    '"'             shift, and go to state 18
    '('             shift, and go to state 19
    '!'             shift, and go to state 21

    INT             [reduce using rule 114 (expression)]
    FLOAT           [reduce using rule 114 (expression)]
    LAND            [reduce using rule 114 (expression)]
    LOR             [reduce using rule 114 (expression)]
    TRUE            [reduce using rule 114 (expression)]
    FALSE           [reduce using rule 114 (expression)]
    INT_LIT         [reduce using rule 114 (expression)]
    SIGN_INT_LIT    [reduce using rule 114 (expression)]
    FLOAT_LIT       [reduce using rule 114 (expression)]
    SIGN_FLOAT_LIT  [reduce using rule 114 (expression)]
    ID              [reduce using rule 114 (expression)]
    '"'             [reduce using rule 114 (expression)]
    '('             [reduce using rule 114 (expression)]
    '!'             [reduce using rule 114 (expression)]
    $default        reduce using rule 114 (expression)

    expression             go to state 113
    lor_expression         go to state 38
    land_expression        go to state 39
    comparsion_expression  go to state 40
    add_expression         go to state 41
    mul_expression         go to state 42
    operand                go to state 43
    term                   go to state 44
    bool                   go to state 60
    literal                go to state 61
    int_literal            go to state 62
    float_literal          go to state 63
    sign_literal           go to state 49
    string_literal         go to state 50
    literal_convert        go to state 51
    id_term                go to state 52


State 39

  115 lor_expression: land_expression .

    $default  reduce using rule 115 (lor_expression)


State 40

  111 expression: comparsion_expression . expression

    INT             shift, and go to state 2
    FLOAT           shift, and go to state 3
    LAND            shift, and go to state 4
    LOR             shift, and go to state 5
    TRUE            shift, and go to state 11
    FALSE           shift, and go to state 12
    INT_LIT         shift, and go to state 56
    SIGN_INT_LIT    shift, and go to state 14
    FLOAT_LIT       shift, and go to state 57
    SIGN_FLOAT_LIT  shift, and go to state 16
    ID              shift, and go to state 58
    '"'             shift, and go to state 18
    '('             shift, and go to state 19
    '!'             shift, and go to state 21

    INT             [reduce using rule 114 (expression)]
    FLOAT           [reduce using rule 114 (expression)]
    LAND            [reduce using rule 114 (expression)]
    LOR             [reduce using rule 114 (expression)]
    TRUE            [reduce using rule 114 (expression)]
    FALSE           [reduce using rule 114 (expression)]
    INT_LIT         [reduce using rule 114 (expression)]
    SIGN_INT_LIT    [reduce using rule 114 (expression)]
    FLOAT_LIT       [reduce using rule 114 (expression)]
    SIGN_FLOAT_LIT  [reduce using rule 114 (expression)]
    ID              [reduce using rule 114 (expression)]
    '"'             [reduce using rule 114 (expression)]
    '('             [reduce using rule 114 (expression)]
    '!'             [reduce using rule 114 (expression)]
    $default        reduce using rule 114 (expression)

    expression             go to state 114
    lor_expression         go to state 38
    land_expression        go to state 39
    comparsion_expression  go to state 40
    add_expression         go to state 41
    mul_expression         go to state 42
    operand                go to state 43
    term                   go to state 44
    bool                   go to state 60
    literal                go to state 61
    int_literal            go to state 62
    float_literal          go to state 63
    sign_literal           go to state 49
    string_literal         go to state 50
    literal_convert        go to state 51
    id_term                go to state 52


State 41

  113 expression: add_expression .
  125 add_expression: add_expression . '+' mul_expression
  126               | add_expression . '-' mul_expression

    '+'  shift, and go to state 115
    '-'  shift, and go to state 116

    '+'       [reduce using rule 113 (expression)]
    '-'       [reduce using rule 113 (expression)]
    $default  reduce using rule 113 (expression)


State 42

  127 add_expression: mul_expression .
  128 mul_expression: mul_expression . '*' operand
  129               | mul_expression . '/' operand
  130               | mul_expression . '%' operand

    '*'  shift, and go to state 117
    '%'  shift, and go to state 118
    '/'  shift, and go to state 119

    '*'       [reduce using rule 127 (add_expression)]
    '%'       [reduce using rule 127 (add_expression)]
    '/'       [reduce using rule 127 (add_expression)]
    $default  reduce using rule 127 (add_expression)


State 43

  131 mul_expression: operand .

    $default  reduce using rule 131 (mul_expression)


State 44

  133 operand: term .

    $default  reduce using rule 133 (operand)


State 45

   61 invalid_arithmetic: bool . LOR expression
  138 term: bool .

    LOR  shift, and go to state 120

    LOR       [reduce using rule 138 (term)]
    $default  reduce using rule 138 (term)


State 46

   93 error_stmt: literal . assign
  134 term: literal .

    ADD_ASSIGN  shift, and go to state 98
    SUB_ASSIGN  shift, and go to state 99
    MUL_ASSIGN  shift, and go to state 100
    QUO_ASSIGN  shift, and go to state 101
    REM_ASSIGN  shift, and go to state 102
    '='         shift, and go to state 103

    $default  reduce using rule 134 (term)

    assign        go to state 121
    error_assign  go to state 105


State 47

   46 pure_arithmetic: int_literal . '+' int_literal
   47                | int_literal . '-' int_literal
   59 invalid_arithmetic: int_literal . LAND bool
  145 literal: int_literal .

    LAND  shift, and go to state 122
    '+'   shift, and go to state 123
    '-'   shift, and go to state 124

    LAND      [reduce using rule 145 (literal)]
    '+'       [reduce using rule 145 (literal)]
    '-'       [reduce using rule 145 (literal)]
    $default  reduce using rule 145 (literal)


State 48

   60 invalid_arithmetic: float_literal . LAND bool
  146 literal: float_literal .

    LAND  shift, and go to state 125

    LAND      [reduce using rule 146 (literal)]
    $default  reduce using rule 146 (literal)


State 49

  135 term: sign_literal .

    $default  reduce using rule 135 (term)


State 50

  137 term: string_literal .

    $default  reduce using rule 137 (term)


State 51

  136 term: literal_convert .

    $default  reduce using rule 136 (term)


State 52

  139 term: id_term .

    $default  reduce using rule 139 (term)


State 53

   17 declaration: VAR ID . INT $@1 literal_initial NEWLINE
   18            | VAR ID . STRING string_initial
   20            | VAR ID . FLOAT $@2 literal_initial NEWLINE
   21            | VAR ID . BOOL bool_initial NEWLINE
   22            | VAR ID . '[' INT_LIT ']' INT NEWLINE
   23            | VAR ID . '[' INT_LIT ']' FLOAT NEWLINE

    INT     shift, and go to state 126
    FLOAT   shift, and go to state 127
    BOOL    shift, and go to state 128
    STRING  shift, and go to state 129
    '['     shift, and go to state 130


State 54

  152 literal_convert: INT '(' . ident ')'
  153                | INT '(' . FLOAT_LIT ')'
  156                | INT '(' . ID '[' INT_LIT ']' ')'
  157                | INT '(' . expression ')'

    INT             shift, and go to state 2
    FLOAT           shift, and go to state 3
    LAND            shift, and go to state 4
    LOR             shift, and go to state 5
    TRUE            shift, and go to state 11
    FALSE           shift, and go to state 12
    INT_LIT         shift, and go to state 56
    SIGN_INT_LIT    shift, and go to state 14
    FLOAT_LIT       shift, and go to state 131
    SIGN_FLOAT_LIT  shift, and go to state 16
    ID              shift, and go to state 132
    '"'             shift, and go to state 18
    '('             shift, and go to state 19
    '!'             shift, and go to state 21

    INT             [reduce using rule 114 (expression)]
    FLOAT           [reduce using rule 114 (expression)]
    TRUE            [reduce using rule 114 (expression)]
    FALSE           [reduce using rule 114 (expression)]
    INT_LIT         [reduce using rule 114 (expression)]
    SIGN_INT_LIT    [reduce using rule 114 (expression)]
    FLOAT_LIT       [reduce using rule 114 (expression)]
    SIGN_FLOAT_LIT  [reduce using rule 114 (expression)]
    ID              [reduce using rule 114 (expression)]
    '"'             [reduce using rule 114 (expression)]
    '('             [reduce using rule 114 (expression)]
    '!'             [reduce using rule 114 (expression)]
    $default        reduce using rule 114 (expression)

    ident                  go to state 133
    expression             go to state 134
    lor_expression         go to state 38
    land_expression        go to state 39
    comparsion_expression  go to state 40
    add_expression         go to state 41
    mul_expression         go to state 42
    operand                go to state 43
    term                   go to state 44
    bool                   go to state 60
    literal                go to state 61
    int_literal            go to state 62
    float_literal          go to state 63
    sign_literal           go to state 49
    string_literal         go to state 50
    literal_convert        go to state 51
    id_term                go to state 52


State 55

  154 literal_convert: FLOAT '(' . ident ')'
  155                | FLOAT '(' . INT_LIT ')'

    INT_LIT  shift, and go to state 135
    ID       shift, and go to state 136

    ident  go to state 137


State 56

  147 int_literal: INT_LIT .

    $default  reduce using rule 147 (int_literal)


State 57

  148 float_literal: FLOAT_LIT .

    $default  reduce using rule 148 (float_literal)


State 58

  159 id_term: ID . $@26 '[' expression ']'
  160        | ID .

    '['       reduce using rule 158 ($@26)
    $default  reduce using rule 160 (id_term)

    $@26  go to state 88


State 59

  117 land_expression: LAND expression .
  118 comparsion_expression: expression . '>' add_expression
  119                      | expression . '<' add_expression
  120                      | expression . GEQ add_expression
  121                      | expression . LEQ add_expression
  122                      | expression . EQL add_expression
  123                      | expression . NEQ add_expression
  124                      | expression . add_expression

    INT             shift, and go to state 2
    FLOAT           shift, and go to state 3
    GEQ             shift, and go to state 106
    LEQ             shift, and go to state 107
    EQL             shift, and go to state 108
    NEQ             shift, and go to state 109
    TRUE            shift, and go to state 11
    FALSE           shift, and go to state 12
    INT_LIT         shift, and go to state 56
    SIGN_INT_LIT    shift, and go to state 14
    FLOAT_LIT       shift, and go to state 57
    SIGN_FLOAT_LIT  shift, and go to state 16
    ID              shift, and go to state 58
    '"'             shift, and go to state 18
    '('             shift, and go to state 19
    '>'             shift, and go to state 110
    '<'             shift, and go to state 111
    '!'             shift, and go to state 21

    INT             [reduce using rule 117 (land_expression)]
    FLOAT           [reduce using rule 117 (land_expression)]
    GEQ             [reduce using rule 117 (land_expression)]
    LEQ             [reduce using rule 117 (land_expression)]
    EQL             [reduce using rule 117 (land_expression)]
    NEQ             [reduce using rule 117 (land_expression)]
    TRUE            [reduce using rule 117 (land_expression)]
    FALSE           [reduce using rule 117 (land_expression)]
    INT_LIT         [reduce using rule 117 (land_expression)]
    SIGN_INT_LIT    [reduce using rule 117 (land_expression)]
    FLOAT_LIT       [reduce using rule 117 (land_expression)]
    SIGN_FLOAT_LIT  [reduce using rule 117 (land_expression)]
    ID              [reduce using rule 117 (land_expression)]
    '"'             [reduce using rule 117 (land_expression)]
    '('             [reduce using rule 117 (land_expression)]
    '>'             [reduce using rule 117 (land_expression)]
    '<'             [reduce using rule 117 (land_expression)]
    '!'             [reduce using rule 117 (land_expression)]
    $default        reduce using rule 117 (land_expression)

    add_expression   go to state 112
    mul_expression   go to state 42
    operand          go to state 43
    term             go to state 44
    bool             go to state 60
    literal          go to state 61
    int_literal      go to state 62
    float_literal    go to state 63
    sign_literal     go to state 49
    string_literal   go to state 50
    literal_convert  go to state 51
    id_term          go to state 52


State 60

  138 term: bool .

    $default  reduce using rule 138 (term)


State 61

  134 term: literal .

    $default  reduce using rule 134 (term)


State 62

  145 literal: int_literal .

    $default  reduce using rule 145 (literal)


State 63

  146 literal: float_literal .

    $default  reduce using rule 146 (literal)


State 64

  116 lor_expression: LOR expression .
  118 comparsion_expression: expression . '>' add_expression
  119                      | expression . '<' add_expression
  120                      | expression . GEQ add_expression
  121                      | expression . LEQ add_expression
  122                      | expression . EQL add_expression
  123                      | expression . NEQ add_expression
  124                      | expression . add_expression

    INT             shift, and go to state 2
    FLOAT           shift, and go to state 3
    GEQ             shift, and go to state 106
    LEQ             shift, and go to state 107
    EQL             shift, and go to state 108
    NEQ             shift, and go to state 109
    TRUE            shift, and go to state 11
    FALSE           shift, and go to state 12
    INT_LIT         shift, and go to state 56
    SIGN_INT_LIT    shift, and go to state 14
    FLOAT_LIT       shift, and go to state 57
    SIGN_FLOAT_LIT  shift, and go to state 16
    ID              shift, and go to state 58
    '"'             shift, and go to state 18
    '('             shift, and go to state 19
    '>'             shift, and go to state 110
    '<'             shift, and go to state 111
    '!'             shift, and go to state 21

    INT             [reduce using rule 116 (lor_expression)]
    FLOAT           [reduce using rule 116 (lor_expression)]
    GEQ             [reduce using rule 116 (lor_expression)]
    LEQ             [reduce using rule 116 (lor_expression)]
    EQL             [reduce using rule 116 (lor_expression)]
    NEQ             [reduce using rule 116 (lor_expression)]
    TRUE            [reduce using rule 116 (lor_expression)]
    FALSE           [reduce using rule 116 (lor_expression)]
    INT_LIT         [reduce using rule 116 (lor_expression)]
    SIGN_INT_LIT    [reduce using rule 116 (lor_expression)]
    FLOAT_LIT       [reduce using rule 116 (lor_expression)]
    SIGN_FLOAT_LIT  [reduce using rule 116 (lor_expression)]
    ID              [reduce using rule 116 (lor_expression)]
    '"'             [reduce using rule 116 (lor_expression)]
    '('             [reduce using rule 116 (lor_expression)]
    '>'             [reduce using rule 116 (lor_expression)]
    '<'             [reduce using rule 116 (lor_expression)]
    '!'             [reduce using rule 116 (lor_expression)]
    $default        reduce using rule 116 (lor_expression)

    add_expression   go to state 112
    mul_expression   go to state 42
    operand          go to state 43
    term             go to state 44
    bool             go to state 60
    literal          go to state 61
    int_literal      go to state 62
    float_literal    go to state 63
    sign_literal     go to state 49
    string_literal   go to state 50
    literal_convert  go to state 51
    id_term          go to state 52


State 65

   45 print_stmt: PRINT $@9 . '(' expression ')'

    '('  shift, and go to state 138


State 66

   43 print_stmt: PRINTLN $@8 . '(' expression ')'

    '('  shift, and go to state 139


State 67

   65 if_stmt: IF $@10 . expression $@11 block $@12 else_stmt

    INT             shift, and go to state 2
    FLOAT           shift, and go to state 3
    LAND            shift, and go to state 4
    LOR             shift, and go to state 5
    TRUE            shift, and go to state 11
    FALSE           shift, and go to state 12
    INT_LIT         shift, and go to state 56
    SIGN_INT_LIT    shift, and go to state 14
    FLOAT_LIT       shift, and go to state 57
    SIGN_FLOAT_LIT  shift, and go to state 16
    ID              shift, and go to state 58
    '"'             shift, and go to state 18
    '('             shift, and go to state 19
    '!'             shift, and go to state 21

    INT             [reduce using rule 114 (expression)]
    FLOAT           [reduce using rule 114 (expression)]
    TRUE            [reduce using rule 114 (expression)]
    FALSE           [reduce using rule 114 (expression)]
    INT_LIT         [reduce using rule 114 (expression)]
    SIGN_INT_LIT    [reduce using rule 114 (expression)]
    FLOAT_LIT       [reduce using rule 114 (expression)]
    SIGN_FLOAT_LIT  [reduce using rule 114 (expression)]
    ID              [reduce using rule 114 (expression)]
    '"'             [reduce using rule 114 (expression)]
    '('             [reduce using rule 114 (expression)]
    '!'             [reduce using rule 114 (expression)]
    $default        reduce using rule 114 (expression)

    expression             go to state 140
    lor_expression         go to state 38
    land_expression        go to state 39
    comparsion_expression  go to state 40
    add_expression         go to state 41
    mul_expression         go to state 42
    operand                go to state 43
    term                   go to state 44
    bool                   go to state 60
    literal                go to state 61
    int_literal            go to state 62
    float_literal          go to state 63
    sign_literal           go to state 49
    string_literal         go to state 50
    literal_convert        go to state 51
    id_term                go to state 52


State 68

   50 pure_arithmetic: ID . '+' INT_LIT
   58 invalid_arithmetic: ID . '%' INT_LIT
  101 ident: ID .

    '+'  shift, and go to state 141
    '%'  shift, and go to state 142

    $default  reduce using rule 101 (ident)


State 69

   74 for_stmt: FOR pure_arithmetic . '{' $@15 stmts '}'

    '{'  shift, and go to state 143


State 70

   75 for_stmt: FOR for_expr . block

    '{'  shift, and go to state 20

    block  go to state 144


State 71

   77 for_expr: ident . assign $@16 ';' comparsion_expression ';' incdec_stmt
   79         | ident . $@17 '>' int_literal

    ADD_ASSIGN  shift, and go to state 98
    SUB_ASSIGN  shift, and go to state 99
    MUL_ASSIGN  shift, and go to state 100
    QUO_ASSIGN  shift, and go to state 101
    REM_ASSIGN  shift, and go to state 102
    '='         shift, and go to state 103

    $default  reduce using rule 78 ($@17)

    $@17          go to state 145
    assign        go to state 146
    error_assign  go to state 105


State 72

   61 invalid_arithmetic: bool . LOR expression

    LOR  shift, and go to state 120


State 73

   46 pure_arithmetic: int_literal . '+' int_literal
   47                | int_literal . '-' int_literal
   59 invalid_arithmetic: int_literal . LAND bool
   72 for_stmt: FOR int_literal . '{' $@14 stmts '}'

    LAND  shift, and go to state 122
    '+'   shift, and go to state 123
    '-'   shift, and go to state 124
    '{'   shift, and go to state 147


State 74

   60 invalid_arithmetic: float_literal . LAND bool
   70 for_stmt: FOR float_literal . '{' $@13 stmts '}'

    LAND  shift, and go to state 125
    '{'   shift, and go to state 148


State 75

   52 invalid_arithmetic: INT_LIT '+' . FLOAT_LIT

    FLOAT_LIT  shift, and go to state 149


State 76

   54 invalid_arithmetic: INT_LIT '-' . FLOAT_LIT

    FLOAT_LIT  shift, and go to state 150


State 77

   56 invalid_arithmetic: INT_LIT '*' . FLOAT_LIT

    FLOAT_LIT  shift, and go to state 151


State 78

   48 pure_arithmetic: FLOAT_LIT '+' . FLOAT_LIT
   53 invalid_arithmetic: FLOAT_LIT '+' . INT_LIT

    INT_LIT    shift, and go to state 152
    FLOAT_LIT  shift, and go to state 153


State 79

   49 pure_arithmetic: FLOAT_LIT '-' . FLOAT_LIT
   55 invalid_arithmetic: FLOAT_LIT '-' . INT_LIT

    INT_LIT    shift, and go to state 154
    FLOAT_LIT  shift, and go to state 155


State 80

   57 invalid_arithmetic: FLOAT_LIT '*' . INT_LIT

    INT_LIT  shift, and go to state 156


State 81

   26 declaration: ID '[' . INT_LIT $@3 ']' array_initial $@4 NEWLINE

    INT_LIT  shift, and go to state 157


State 82

   30 declaration: ID '=' . expression $@6 NEWLINE

    INT             shift, and go to state 2
    FLOAT           shift, and go to state 3
    LAND            shift, and go to state 4
    LOR             shift, and go to state 5
    TRUE            shift, and go to state 11
    FALSE           shift, and go to state 12
    INT_LIT         shift, and go to state 56
    SIGN_INT_LIT    shift, and go to state 14
    FLOAT_LIT       shift, and go to state 57
    SIGN_FLOAT_LIT  shift, and go to state 16
    ID              shift, and go to state 58
    '"'             shift, and go to state 18
    '('             shift, and go to state 19
    '!'             shift, and go to state 21

    INT             [reduce using rule 114 (expression)]
    FLOAT           [reduce using rule 114 (expression)]
    TRUE            [reduce using rule 114 (expression)]
    FALSE           [reduce using rule 114 (expression)]
    INT_LIT         [reduce using rule 114 (expression)]
    SIGN_INT_LIT    [reduce using rule 114 (expression)]
    FLOAT_LIT       [reduce using rule 114 (expression)]
    SIGN_FLOAT_LIT  [reduce using rule 114 (expression)]
    ID              [reduce using rule 114 (expression)]
    '"'             [reduce using rule 114 (expression)]
    '('             [reduce using rule 114 (expression)]
    '!'             [reduce using rule 114 (expression)]
    $default        reduce using rule 114 (expression)

    expression             go to state 158
    lor_expression         go to state 38
    land_expression        go to state 39
    comparsion_expression  go to state 40
    add_expression         go to state 41
    mul_expression         go to state 42
    operand                go to state 43
    term                   go to state 44
    bool                   go to state 60
    literal                go to state 61
    int_literal            go to state 62
    float_literal          go to state 63
    sign_literal           go to state 49
    string_literal         go to state 50
    literal_convert        go to state 51
    id_term                go to state 52


State 83

   50 pure_arithmetic: ID '+' . INT_LIT
  104 arithmetic_add_stmt: ID '+' . ID

    INT_LIT  shift, and go to state 159
    ID       shift, and go to state 160


State 84

  105 arithmetic_add_stmt: ID '-' . ID

    ID  shift, and go to state 161


State 85

  107 arithmetic_mul_stmt: ID '*' . ID

    ID  shift, and go to state 162


State 86

   58 invalid_arithmetic: ID '%' . INT_LIT
  109 arithmetic_mul_stmt: ID '%' . ID

    INT_LIT  shift, and go to state 163
    ID       shift, and go to state 164


State 87

  108 arithmetic_mul_stmt: ID '/' . ID

    ID  shift, and go to state 165


State 88

  159 id_term: ID $@26 . '[' expression ']'

    '['  shift, and go to state 166


State 89

  151 string_literal: '"' STRING_LIT . '"'

    '"'  shift, and go to state 167


State 90

  118 comparsion_expression: expression . '>' add_expression
  119                      | expression . '<' add_expression
  120                      | expression . GEQ add_expression
  121                      | expression . LEQ add_expression
  122                      | expression . EQL add_expression
  123                      | expression . NEQ add_expression
  124                      | expression . add_expression
  132 operand: '(' expression . ')'

    INT             shift, and go to state 2
    FLOAT           shift, and go to state 3
    GEQ             shift, and go to state 106
    LEQ             shift, and go to state 107
    EQL             shift, and go to state 108
    NEQ             shift, and go to state 109
    TRUE            shift, and go to state 11
    FALSE           shift, and go to state 12
    INT_LIT         shift, and go to state 56
    SIGN_INT_LIT    shift, and go to state 14
    FLOAT_LIT       shift, and go to state 57
    SIGN_FLOAT_LIT  shift, and go to state 16
    ID              shift, and go to state 58
    '"'             shift, and go to state 18
    '('             shift, and go to state 19
    ')'             shift, and go to state 168
    '>'             shift, and go to state 110
    '<'             shift, and go to state 111
    '!'             shift, and go to state 21

    add_expression   go to state 112
    mul_expression   go to state 42
    operand          go to state 43
    term             go to state 44
    bool             go to state 60
    literal          go to state 61
    int_literal      go to state 62
    float_literal    go to state 63
    sign_literal     go to state 49
    string_literal   go to state 50
    literal_convert  go to state 51
    id_term          go to state 52


State 91

  103 block: '{' $@23 . stmts '}'

    VAR             shift, and go to state 1
    INT             shift, and go to state 2
    FLOAT           shift, and go to state 3
    LAND            shift, and go to state 4
    LOR             shift, and go to state 5
    NEWLINE         shift, and go to state 6
    PRINT           shift, and go to state 7
    PRINTLN         shift, and go to state 8
    IF              shift, and go to state 9
    FOR             shift, and go to state 10
    TRUE            shift, and go to state 11
    FALSE           shift, and go to state 12
    INT_LIT         shift, and go to state 13
    SIGN_INT_LIT    shift, and go to state 14
    FLOAT_LIT       shift, and go to state 15
    SIGN_FLOAT_LIT  shift, and go to state 16
    ID              shift, and go to state 17
    '"'             shift, and go to state 18
    '('             shift, and go to state 19
    '{'             shift, and go to state 20
    '!'             shift, and go to state 21

    VAR             [reduce using rule 114 (expression)]
    INT             [reduce using rule 114 (expression)]
    FLOAT           [reduce using rule 114 (expression)]
    LAND            [reduce using rule 114 (expression)]
    LOR             [reduce using rule 114 (expression)]
    NEWLINE         [reduce using rule 114 (expression)]
    PRINT           [reduce using rule 114 (expression)]
    PRINTLN         [reduce using rule 114 (expression)]
    IF              [reduce using rule 114 (expression)]
    FOR             [reduce using rule 114 (expression)]
    TRUE            [reduce using rule 114 (expression)]
    FALSE           [reduce using rule 114 (expression)]
    INT_LIT         [reduce using rule 114 (expression)]
    SIGN_INT_LIT    [reduce using rule 114 (expression)]
    FLOAT_LIT       [reduce using rule 114 (expression)]
    SIGN_FLOAT_LIT  [reduce using rule 114 (expression)]
    ID              [reduce using rule 114 (expression)]
    '"'             [reduce using rule 114 (expression)]
    '('             [reduce using rule 114 (expression)]
    '{'             [reduce using rule 114 (expression)]
    '}'             reduce using rule 4 (stmts)
    '}'             [reduce using rule 114 (expression)]
    '!'             [reduce using rule 114 (expression)]
    $default        reduce using rule 114 (expression)

    stmts                  go to state 169
    stmt                   go to state 95
    declaration            go to state 24
    incdec_stmt            go to state 25
    print_stmt             go to state 26
    pure_arithmetic        go to state 27
    invalid_arithmetic     go to state 28
    if_stmt                go to state 29
    for_stmt               go to state 30
    error_stmt             go to state 31
    ident                  go to state 32
    block                  go to state 33
    arithmetic_add_stmt    go to state 34
    arithmetic_mul_stmt    go to state 35
    expression_stmt        go to state 36
    expression             go to state 37
    lor_expression         go to state 38
    land_expression        go to state 39
    comparsion_expression  go to state 40
    add_expression         go to state 41
    mul_expression         go to state 42
    operand                go to state 43
    term                   go to state 44
    bool                   go to state 45
    literal                go to state 46
    int_literal            go to state 47
    float_literal          go to state 48
    sign_literal           go to state 49
    string_literal         go to state 50
    literal_convert        go to state 51
    id_term                go to state 52


State 92

  142 bool: '!' $@24 . bool $@25 expression

    TRUE   shift, and go to state 11
    FALSE  shift, and go to state 12
    '!'    shift, and go to state 21

    bool  go to state 170


State 93

    0 $accept: Program $end .

    $default  accept


State 94

    1 Program: stmt stmts .

    $default  reduce using rule 1 (Program)


State 95

    3 stmts: stmt . stmts

    VAR             shift, and go to state 1
    INT             shift, and go to state 2
    FLOAT           shift, and go to state 3
    LAND            shift, and go to state 4
    LOR             shift, and go to state 5
    NEWLINE         shift, and go to state 6
    PRINT           shift, and go to state 7
    PRINTLN         shift, and go to state 8
    IF              shift, and go to state 9
    FOR             shift, and go to state 10
    TRUE            shift, and go to state 11
    FALSE           shift, and go to state 12
    INT_LIT         shift, and go to state 13
    SIGN_INT_LIT    shift, and go to state 14
    FLOAT_LIT       shift, and go to state 15
    SIGN_FLOAT_LIT  shift, and go to state 16
    ID              shift, and go to state 17
    '"'             shift, and go to state 18
    '('             shift, and go to state 19
    '{'             shift, and go to state 20
    '!'             shift, and go to state 21

    $end            reduce using rule 4 (stmts)
    $end            [reduce using rule 114 (expression)]
    VAR             [reduce using rule 114 (expression)]
    INT             [reduce using rule 114 (expression)]
    FLOAT           [reduce using rule 114 (expression)]
    LAND            [reduce using rule 114 (expression)]
    LOR             [reduce using rule 114 (expression)]
    NEWLINE         [reduce using rule 114 (expression)]
    PRINT           [reduce using rule 114 (expression)]
    PRINTLN         [reduce using rule 114 (expression)]
    IF              [reduce using rule 114 (expression)]
    FOR             [reduce using rule 114 (expression)]
    TRUE            [reduce using rule 114 (expression)]
    FALSE           [reduce using rule 114 (expression)]
    INT_LIT         [reduce using rule 114 (expression)]
    SIGN_INT_LIT    [reduce using rule 114 (expression)]
    FLOAT_LIT       [reduce using rule 114 (expression)]
    SIGN_FLOAT_LIT  [reduce using rule 114 (expression)]
    ID              [reduce using rule 114 (expression)]
    '"'             [reduce using rule 114 (expression)]
    '('             [reduce using rule 114 (expression)]
    '{'             [reduce using rule 114 (expression)]
    '}'             reduce using rule 4 (stmts)
    '}'             [reduce using rule 114 (expression)]
    '!'             [reduce using rule 114 (expression)]
    $default        reduce using rule 114 (expression)

    stmts                  go to state 171
    stmt                   go to state 95
    declaration            go to state 24
    incdec_stmt            go to state 25
    print_stmt             go to state 26
    pure_arithmetic        go to state 27
    invalid_arithmetic     go to state 28
    if_stmt                go to state 29
    for_stmt               go to state 30
    error_stmt             go to state 31
    ident                  go to state 32
    block                  go to state 33
    arithmetic_add_stmt    go to state 34
    arithmetic_mul_stmt    go to state 35
    expression_stmt        go to state 36
    expression             go to state 37
    lor_expression         go to state 38
    land_expression        go to state 39
    comparsion_expression  go to state 40
    add_expression         go to state 41
    mul_expression         go to state 42
    operand                go to state 43
    term                   go to state 44
    bool                   go to state 45
    literal                go to state 46
    int_literal            go to state 47
    float_literal          go to state 48
    sign_literal           go to state 49
    string_literal         go to state 50
    literal_convert        go to state 51
    id_term                go to state 52


State 96

   40 incdec_stmt: ident INC .

    $default  reduce using rule 40 (incdec_stmt)


State 97

   41 incdec_stmt: ident DEC .

    $default  reduce using rule 41 (incdec_stmt)


State 98

   81 assign: ADD_ASSIGN . $@18 var
   92 error_assign: ADD_ASSIGN . ID

    ID  shift, and go to state 172

    ID        [reduce using rule 80 ($@18)]
    $default  reduce using rule 80 ($@18)

    $@18  go to state 173


State 99

   83 assign: SUB_ASSIGN . $@19 var

    $default  reduce using rule 82 ($@19)

    $@19  go to state 174


State 100

   85 assign: MUL_ASSIGN . $@20 var

    $default  reduce using rule 84 ($@20)

    $@20  go to state 175


State 101

   87 assign: QUO_ASSIGN . $@21 var

    $default  reduce using rule 86 ($@21)

    $@21  go to state 176


State 102

   89 assign: REM_ASSIGN . $@22 var

    $default  reduce using rule 88 ($@22)

    $@22  go to state 177


State 103

   90 assign: '=' . var

    INT             shift, and go to state 2
    FLOAT           shift, and go to state 3
    LAND            shift, and go to state 4
    LOR             shift, and go to state 5
    TRUE            shift, and go to state 11
    FALSE           shift, and go to state 12
    INT_LIT         shift, and go to state 56
    SIGN_INT_LIT    shift, and go to state 14
    FLOAT_LIT       shift, and go to state 57
    SIGN_FLOAT_LIT  shift, and go to state 16
    ID              shift, and go to state 178
    '"'             shift, and go to state 18
    '('             shift, and go to state 19
    '!'             shift, and go to state 21

    $end            reduce using rule 100 (var)
    $end            [reduce using rule 114 (expression)]
    VAR             reduce using rule 100 (var)
    VAR             [reduce using rule 114 (expression)]
    INT             [reduce using rule 100 (var)]
    INT             [reduce using rule 114 (expression)]
    FLOAT           [reduce using rule 100 (var)]
    FLOAT           [reduce using rule 114 (expression)]
    GEQ             reduce using rule 100 (var)
    GEQ             [reduce using rule 114 (expression)]
    LEQ             reduce using rule 100 (var)
    LEQ             [reduce using rule 114 (expression)]
    EQL             reduce using rule 100 (var)
    EQL             [reduce using rule 114 (expression)]
    NEQ             reduce using rule 100 (var)
    NEQ             [reduce using rule 114 (expression)]
    LAND            [reduce using rule 100 (var)]
    LAND            [reduce using rule 114 (expression)]
    LOR             [reduce using rule 100 (var)]
    LOR             [reduce using rule 114 (expression)]
    NEWLINE         reduce using rule 100 (var)
    NEWLINE         [reduce using rule 114 (expression)]
    PRINT           reduce using rule 100 (var)
    PRINT           [reduce using rule 114 (expression)]
    PRINTLN         reduce using rule 100 (var)
    PRINTLN         [reduce using rule 114 (expression)]
    IF              reduce using rule 100 (var)
    IF              [reduce using rule 114 (expression)]
    FOR             reduce using rule 100 (var)
    FOR             [reduce using rule 114 (expression)]
    TRUE            [reduce using rule 100 (var)]
    TRUE            [reduce using rule 114 (expression)]
    FALSE           [reduce using rule 100 (var)]
    FALSE           [reduce using rule 114 (expression)]
    INT_LIT         [reduce using rule 100 (var)]
    INT_LIT         [reduce using rule 114 (expression)]
    SIGN_INT_LIT    [reduce using rule 100 (var)]
    SIGN_INT_LIT    [reduce using rule 114 (expression)]
    FLOAT_LIT       [reduce using rule 100 (var)]
    FLOAT_LIT       [reduce using rule 114 (expression)]
    SIGN_FLOAT_LIT  [reduce using rule 100 (var)]
    SIGN_FLOAT_LIT  [reduce using rule 114 (expression)]
    ID              [reduce using rule 100 (var)]
    ID              [reduce using rule 114 (expression)]
    '"'             [reduce using rule 100 (var)]
    '"'             [reduce using rule 114 (expression)]
    '('             [reduce using rule 100 (var)]
    '('             [reduce using rule 114 (expression)]
    '{'             reduce using rule 100 (var)
    '{'             [reduce using rule 114 (expression)]
    '}'             reduce using rule 100 (var)
    '}'             [reduce using rule 114 (expression)]
    ';'             reduce using rule 100 (var)
    ';'             [reduce using rule 114 (expression)]
    '>'             reduce using rule 100 (var)
    '>'             [reduce using rule 114 (expression)]
    '<'             reduce using rule 100 (var)
    '<'             [reduce using rule 114 (expression)]
    '!'             [reduce using rule 100 (var)]
    '!'             [reduce using rule 114 (expression)]
    $default        reduce using rule 100 (var)

    var                    go to state 179
    expression             go to state 180
    lor_expression         go to state 38
    land_expression        go to state 39
    comparsion_expression  go to state 40
    add_expression         go to state 41
    mul_expression         go to state 42
    operand                go to state 43
    term                   go to state 44
    bool                   go to state 181
    literal                go to state 61
    int_literal            go to state 182
    float_literal          go to state 183
    sign_literal           go to state 49
    string_literal         go to state 184
    literal_convert        go to state 51
    id_term                go to state 52


State 104

   28 declaration: ident assign . $@5 NEWLINE

    $default  reduce using rule 27 ($@5)

    $@5  go to state 185


State 105

   91 assign: error_assign .

    $default  reduce using rule 91 (assign)


State 106

  120 comparsion_expression: expression GEQ . add_expression

    INT             shift, and go to state 2
    FLOAT           shift, and go to state 3
    TRUE            shift, and go to state 11
    FALSE           shift, and go to state 12
    INT_LIT         shift, and go to state 56
    SIGN_INT_LIT    shift, and go to state 14
    FLOAT_LIT       shift, and go to state 57
    SIGN_FLOAT_LIT  shift, and go to state 16
    ID              shift, and go to state 58
    '"'             shift, and go to state 18
    '('             shift, and go to state 19
    '!'             shift, and go to state 21

    add_expression   go to state 186
    mul_expression   go to state 42
    operand          go to state 43
    term             go to state 44
    bool             go to state 60
    literal          go to state 61
    int_literal      go to state 62
    float_literal    go to state 63
    sign_literal     go to state 49
    string_literal   go to state 50
    literal_convert  go to state 51
    id_term          go to state 52


State 107

  121 comparsion_expression: expression LEQ . add_expression

    INT             shift, and go to state 2
    FLOAT           shift, and go to state 3
    TRUE            shift, and go to state 11
    FALSE           shift, and go to state 12
    INT_LIT         shift, and go to state 56
    SIGN_INT_LIT    shift, and go to state 14
    FLOAT_LIT       shift, and go to state 57
    SIGN_FLOAT_LIT  shift, and go to state 16
    ID              shift, and go to state 58
    '"'             shift, and go to state 18
    '('             shift, and go to state 19
    '!'             shift, and go to state 21

    add_expression   go to state 187
    mul_expression   go to state 42
    operand          go to state 43
    term             go to state 44
    bool             go to state 60
    literal          go to state 61
    int_literal      go to state 62
    float_literal    go to state 63
    sign_literal     go to state 49
    string_literal   go to state 50
    literal_convert  go to state 51
    id_term          go to state 52


State 108

  122 comparsion_expression: expression EQL . add_expression

    INT             shift, and go to state 2
    FLOAT           shift, and go to state 3
    TRUE            shift, and go to state 11
    FALSE           shift, and go to state 12
    INT_LIT         shift, and go to state 56
    SIGN_INT_LIT    shift, and go to state 14
    FLOAT_LIT       shift, and go to state 57
    SIGN_FLOAT_LIT  shift, and go to state 16
    ID              shift, and go to state 58
    '"'             shift, and go to state 18
    '('             shift, and go to state 19
    '!'             shift, and go to state 21

    add_expression   go to state 188
    mul_expression   go to state 42
    operand          go to state 43
    term             go to state 44
    bool             go to state 60
    literal          go to state 61
    int_literal      go to state 62
    float_literal    go to state 63
    sign_literal     go to state 49
    string_literal   go to state 50
    literal_convert  go to state 51
    id_term          go to state 52


State 109

  123 comparsion_expression: expression NEQ . add_expression

    INT             shift, and go to state 2
    FLOAT           shift, and go to state 3
    TRUE            shift, and go to state 11
    FALSE           shift, and go to state 12
    INT_LIT         shift, and go to state 56
    SIGN_INT_LIT    shift, and go to state 14
    FLOAT_LIT       shift, and go to state 57
    SIGN_FLOAT_LIT  shift, and go to state 16
    ID              shift, and go to state 58
    '"'             shift, and go to state 18
    '('             shift, and go to state 19
    '!'             shift, and go to state 21

    add_expression   go to state 189
    mul_expression   go to state 42
    operand          go to state 43
    term             go to state 44
    bool             go to state 60
    literal          go to state 61
    int_literal      go to state 62
    float_literal    go to state 63
    sign_literal     go to state 49
    string_literal   go to state 50
    literal_convert  go to state 51
    id_term          go to state 52


State 110

  118 comparsion_expression: expression '>' . add_expression

    INT             shift, and go to state 2
    FLOAT           shift, and go to state 3
    TRUE            shift, and go to state 11
    FALSE           shift, and go to state 12
    INT_LIT         shift, and go to state 56
    SIGN_INT_LIT    shift, and go to state 14
    FLOAT_LIT       shift, and go to state 57
    SIGN_FLOAT_LIT  shift, and go to state 16
    ID              shift, and go to state 58
    '"'             shift, and go to state 18
    '('             shift, and go to state 19
    '!'             shift, and go to state 21

    add_expression   go to state 190
    mul_expression   go to state 42
    operand          go to state 43
    term             go to state 44
    bool             go to state 60
    literal          go to state 61
    int_literal      go to state 62
    float_literal    go to state 63
    sign_literal     go to state 49
    string_literal   go to state 50
    literal_convert  go to state 51
    id_term          go to state 52


State 111

  119 comparsion_expression: expression '<' . add_expression

    INT             shift, and go to state 2
    FLOAT           shift, and go to state 3
    TRUE            shift, and go to state 11
    FALSE           shift, and go to state 12
    INT_LIT         shift, and go to state 56
    SIGN_INT_LIT    shift, and go to state 14
    FLOAT_LIT       shift, and go to state 57
    SIGN_FLOAT_LIT  shift, and go to state 16
    ID              shift, and go to state 58
    '"'             shift, and go to state 18
    '('             shift, and go to state 19
    '!'             shift, and go to state 21

    add_expression   go to state 191
    mul_expression   go to state 42
    operand          go to state 43
    term             go to state 44
    bool             go to state 60
    literal          go to state 61
    int_literal      go to state 62
    float_literal    go to state 63
    sign_literal     go to state 49
    string_literal   go to state 50
    literal_convert  go to state 51
    id_term          go to state 52


State 112

  124 comparsion_expression: expression add_expression .
  125 add_expression: add_expression . '+' mul_expression
  126               | add_expression . '-' mul_expression

    '+'  shift, and go to state 115
    '-'  shift, and go to state 116

    '+'       [reduce using rule 124 (comparsion_expression)]
    '-'       [reduce using rule 124 (comparsion_expression)]
    $default  reduce using rule 124 (comparsion_expression)


State 113

  112 expression: lor_expression expression .
  118 comparsion_expression: expression . '>' add_expression
  119                      | expression . '<' add_expression
  120                      | expression . GEQ add_expression
  121                      | expression . LEQ add_expression
  122                      | expression . EQL add_expression
  123                      | expression . NEQ add_expression
  124                      | expression . add_expression

    INT             shift, and go to state 2
    FLOAT           shift, and go to state 3
    GEQ             shift, and go to state 106
    LEQ             shift, and go to state 107
    EQL             shift, and go to state 108
    NEQ             shift, and go to state 109
    TRUE            shift, and go to state 11
    FALSE           shift, and go to state 12
    INT_LIT         shift, and go to state 56
    SIGN_INT_LIT    shift, and go to state 14
    FLOAT_LIT       shift, and go to state 57
    SIGN_FLOAT_LIT  shift, and go to state 16
    ID              shift, and go to state 58
    '"'             shift, and go to state 18
    '('             shift, and go to state 19
    '>'             shift, and go to state 110
    '<'             shift, and go to state 111
    '!'             shift, and go to state 21

    INT             [reduce using rule 112 (expression)]
    FLOAT           [reduce using rule 112 (expression)]
    GEQ             [reduce using rule 112 (expression)]
    LEQ             [reduce using rule 112 (expression)]
    EQL             [reduce using rule 112 (expression)]
    NEQ             [reduce using rule 112 (expression)]
    TRUE            [reduce using rule 112 (expression)]
    FALSE           [reduce using rule 112 (expression)]
    INT_LIT         [reduce using rule 112 (expression)]
    SIGN_INT_LIT    [reduce using rule 112 (expression)]
    FLOAT_LIT       [reduce using rule 112 (expression)]
    SIGN_FLOAT_LIT  [reduce using rule 112 (expression)]
    ID              [reduce using rule 112 (expression)]
    '"'             [reduce using rule 112 (expression)]
    '('             [reduce using rule 112 (expression)]
    '>'             [reduce using rule 112 (expression)]
    '<'             [reduce using rule 112 (expression)]
    '!'             [reduce using rule 112 (expression)]
    $default        reduce using rule 112 (expression)

    add_expression   go to state 112
    mul_expression   go to state 42
    operand          go to state 43
    term             go to state 44
    bool             go to state 60
    literal          go to state 61
    int_literal      go to state 62
    float_literal    go to state 63
    sign_literal     go to state 49
    string_literal   go to state 50
    literal_convert  go to state 51
    id_term          go to state 52


State 114

  111 expression: comparsion_expression expression .
  118 comparsion_expression: expression . '>' add_expression
  119                      | expression . '<' add_expression
  120                      | expression . GEQ add_expression
  121                      | expression . LEQ add_expression
  122                      | expression . EQL add_expression
  123                      | expression . NEQ add_expression
  124                      | expression . add_expression

    INT             shift, and go to state 2
    FLOAT           shift, and go to state 3
    GEQ             shift, and go to state 106
    LEQ             shift, and go to state 107
    EQL             shift, and go to state 108
    NEQ             shift, and go to state 109
    TRUE            shift, and go to state 11
    FALSE           shift, and go to state 12
    INT_LIT         shift, and go to state 56
    SIGN_INT_LIT    shift, and go to state 14
    FLOAT_LIT       shift, and go to state 57
    SIGN_FLOAT_LIT  shift, and go to state 16
    ID              shift, and go to state 58
    '"'             shift, and go to state 18
    '('             shift, and go to state 19
    '>'             shift, and go to state 110
    '<'             shift, and go to state 111
    '!'             shift, and go to state 21

    INT             [reduce using rule 111 (expression)]
    FLOAT           [reduce using rule 111 (expression)]
    GEQ             [reduce using rule 111 (expression)]
    LEQ             [reduce using rule 111 (expression)]
    EQL             [reduce using rule 111 (expression)]
    NEQ             [reduce using rule 111 (expression)]
    TRUE            [reduce using rule 111 (expression)]
    FALSE           [reduce using rule 111 (expression)]
    INT_LIT         [reduce using rule 111 (expression)]
    SIGN_INT_LIT    [reduce using rule 111 (expression)]
    FLOAT_LIT       [reduce using rule 111 (expression)]
    SIGN_FLOAT_LIT  [reduce using rule 111 (expression)]
    ID              [reduce using rule 111 (expression)]
    '"'             [reduce using rule 111 (expression)]
    '('             [reduce using rule 111 (expression)]
    '>'             [reduce using rule 111 (expression)]
    '<'             [reduce using rule 111 (expression)]
    '!'             [reduce using rule 111 (expression)]
    $default        reduce using rule 111 (expression)

    add_expression   go to state 112
    mul_expression   go to state 42
    operand          go to state 43
    term             go to state 44
    bool             go to state 60
    literal          go to state 61
    int_literal      go to state 62
    float_literal    go to state 63
    sign_literal     go to state 49
    string_literal   go to state 50
    literal_convert  go to state 51
    id_term          go to state 52


State 115

  125 add_expression: add_expression '+' . mul_expression

    INT             shift, and go to state 2
    FLOAT           shift, and go to state 3
    TRUE            shift, and go to state 11
    FALSE           shift, and go to state 12
    INT_LIT         shift, and go to state 56
    SIGN_INT_LIT    shift, and go to state 14
    FLOAT_LIT       shift, and go to state 57
    SIGN_FLOAT_LIT  shift, and go to state 16
    ID              shift, and go to state 58
    '"'             shift, and go to state 18
    '('             shift, and go to state 19
    '!'             shift, and go to state 21

    mul_expression   go to state 192
    operand          go to state 43
    term             go to state 44
    bool             go to state 60
    literal          go to state 61
    int_literal      go to state 62
    float_literal    go to state 63
    sign_literal     go to state 49
    string_literal   go to state 50
    literal_convert  go to state 51
    id_term          go to state 52


State 116

  126 add_expression: add_expression '-' . mul_expression

    INT             shift, and go to state 2
    FLOAT           shift, and go to state 3
    TRUE            shift, and go to state 11
    FALSE           shift, and go to state 12
    INT_LIT         shift, and go to state 56
    SIGN_INT_LIT    shift, and go to state 14
    FLOAT_LIT       shift, and go to state 57
    SIGN_FLOAT_LIT  shift, and go to state 16
    ID              shift, and go to state 58
    '"'             shift, and go to state 18
    '('             shift, and go to state 19
    '!'             shift, and go to state 21

    mul_expression   go to state 193
    operand          go to state 43
    term             go to state 44
    bool             go to state 60
    literal          go to state 61
    int_literal      go to state 62
    float_literal    go to state 63
    sign_literal     go to state 49
    string_literal   go to state 50
    literal_convert  go to state 51
    id_term          go to state 52


State 117

  128 mul_expression: mul_expression '*' . operand

    INT             shift, and go to state 2
    FLOAT           shift, and go to state 3
    TRUE            shift, and go to state 11
    FALSE           shift, and go to state 12
    INT_LIT         shift, and go to state 56
    SIGN_INT_LIT    shift, and go to state 14
    FLOAT_LIT       shift, and go to state 57
    SIGN_FLOAT_LIT  shift, and go to state 16
    ID              shift, and go to state 58
    '"'             shift, and go to state 18
    '('             shift, and go to state 19
    '!'             shift, and go to state 21

    operand          go to state 194
    term             go to state 44
    bool             go to state 60
    literal          go to state 61
    int_literal      go to state 62
    float_literal    go to state 63
    sign_literal     go to state 49
    string_literal   go to state 50
    literal_convert  go to state 51
    id_term          go to state 52


State 118

  130 mul_expression: mul_expression '%' . operand

    INT             shift, and go to state 2
    FLOAT           shift, and go to state 3
    TRUE            shift, and go to state 11
    FALSE           shift, and go to state 12
    INT_LIT         shift, and go to state 56
    SIGN_INT_LIT    shift, and go to state 14
    FLOAT_LIT       shift, and go to state 57
    SIGN_FLOAT_LIT  shift, and go to state 16
    ID              shift, and go to state 58
    '"'             shift, and go to state 18
    '('             shift, and go to state 19
    '!'             shift, and go to state 21

    operand          go to state 195
    term             go to state 44
    bool             go to state 60
    literal          go to state 61
    int_literal      go to state 62
    float_literal    go to state 63
    sign_literal     go to state 49
    string_literal   go to state 50
    literal_convert  go to state 51
    id_term          go to state 52


State 119

  129 mul_expression: mul_expression '/' . operand

    INT             shift, and go to state 2
    FLOAT           shift, and go to state 3
    TRUE            shift, and go to state 11
    FALSE           shift, and go to state 12
    INT_LIT         shift, and go to state 56
    SIGN_INT_LIT    shift, and go to state 14
    FLOAT_LIT       shift, and go to state 57
    SIGN_FLOAT_LIT  shift, and go to state 16
    ID              shift, and go to state 58
    '"'             shift, and go to state 18
    '('             shift, and go to state 19
    '!'             shift, and go to state 21

    operand          go to state 196
    term             go to state 44
    bool             go to state 60
    literal          go to state 61
    int_literal      go to state 62
    float_literal    go to state 63
    sign_literal     go to state 49
    string_literal   go to state 50
    literal_convert  go to state 51
    id_term          go to state 52


State 120

   61 invalid_arithmetic: bool LOR . expression

    INT             shift, and go to state 2
    FLOAT           shift, and go to state 3
    LAND            shift, and go to state 4
    LOR             shift, and go to state 5
    TRUE            shift, and go to state 11
    FALSE           shift, and go to state 12
    INT_LIT         shift, and go to state 56
    SIGN_INT_LIT    shift, and go to state 14
    FLOAT_LIT       shift, and go to state 57
    SIGN_FLOAT_LIT  shift, and go to state 16
    ID              shift, and go to state 58
    '"'             shift, and go to state 18
    '('             shift, and go to state 19
    '!'             shift, and go to state 21

    INT             [reduce using rule 114 (expression)]
    FLOAT           [reduce using rule 114 (expression)]
    LAND            [reduce using rule 114 (expression)]
    LOR             [reduce using rule 114 (expression)]
    TRUE            [reduce using rule 114 (expression)]
    FALSE           [reduce using rule 114 (expression)]
    INT_LIT         [reduce using rule 114 (expression)]
    SIGN_INT_LIT    [reduce using rule 114 (expression)]
    FLOAT_LIT       [reduce using rule 114 (expression)]
    SIGN_FLOAT_LIT  [reduce using rule 114 (expression)]
    ID              [reduce using rule 114 (expression)]
    '"'             [reduce using rule 114 (expression)]
    '('             [reduce using rule 114 (expression)]
    '!'             [reduce using rule 114 (expression)]
    $default        reduce using rule 114 (expression)

    expression             go to state 197
    lor_expression         go to state 38
    land_expression        go to state 39
    comparsion_expression  go to state 40
    add_expression         go to state 41
    mul_expression         go to state 42
    operand                go to state 43
    term                   go to state 44
    bool                   go to state 60
    literal                go to state 61
    int_literal            go to state 62
    float_literal          go to state 63
    sign_literal           go to state 49
    string_literal         go to state 50
    literal_convert        go to state 51
    id_term                go to state 52


State 121

   93 error_stmt: literal assign .

    $default  reduce using rule 93 (error_stmt)


State 122

   59 invalid_arithmetic: int_literal LAND . bool

    TRUE   shift, and go to state 11
    FALSE  shift, and go to state 12
    '!'    shift, and go to state 21

    bool  go to state 198


State 123

   46 pure_arithmetic: int_literal '+' . int_literal

    INT_LIT  shift, and go to state 56

    int_literal  go to state 199


State 124

   47 pure_arithmetic: int_literal '-' . int_literal

    INT_LIT  shift, and go to state 56

    int_literal  go to state 200


State 125

   60 invalid_arithmetic: float_literal LAND . bool

    TRUE   shift, and go to state 11
    FALSE  shift, and go to state 12
    '!'    shift, and go to state 21

    bool  go to state 201


State 126

   17 declaration: VAR ID INT . $@1 literal_initial NEWLINE

    $default  reduce using rule 16 ($@1)

    $@1  go to state 202


State 127

   20 declaration: VAR ID FLOAT . $@2 literal_initial NEWLINE

    $default  reduce using rule 19 ($@2)

    $@2  go to state 203


State 128

   21 declaration: VAR ID BOOL . bool_initial NEWLINE

    '='  shift, and go to state 204

    $default  reduce using rule 34 (bool_initial)

    bool_initial  go to state 205


State 129

   18 declaration: VAR ID STRING . string_initial

    '='  shift, and go to state 206

    $default  reduce using rule 38 ($@7)

    string_initial  go to state 207
    $@7             go to state 208


State 130

   22 declaration: VAR ID '[' . INT_LIT ']' INT NEWLINE
   23            | VAR ID '[' . INT_LIT ']' FLOAT NEWLINE

    INT_LIT  shift, and go to state 209


State 131

  148 float_literal: FLOAT_LIT .
  153 literal_convert: INT '(' FLOAT_LIT . ')'

    ')'  shift, and go to state 210

    ')'       [reduce using rule 148 (float_literal)]
    $default  reduce using rule 148 (float_literal)


State 132

  101 ident: ID .
  156 literal_convert: INT '(' ID . '[' INT_LIT ']' ')'
  159 id_term: ID . $@26 '[' expression ']'
  160        | ID .

    '['  shift, and go to state 211

    '['       [reduce using rule 158 ($@26)]
    ')'       reduce using rule 101 (ident)
    ')'       [reduce using rule 160 (id_term)]
    $default  reduce using rule 160 (id_term)

    $@26  go to state 88


State 133

  152 literal_convert: INT '(' ident . ')'

    ')'  shift, and go to state 212


State 134

  118 comparsion_expression: expression . '>' add_expression
  119                      | expression . '<' add_expression
  120                      | expression . GEQ add_expression
  121                      | expression . LEQ add_expression
  122                      | expression . EQL add_expression
  123                      | expression . NEQ add_expression
  124                      | expression . add_expression
  157 literal_convert: INT '(' expression . ')'

    INT             shift, and go to state 2
    FLOAT           shift, and go to state 3
    GEQ             shift, and go to state 106
    LEQ             shift, and go to state 107
    EQL             shift, and go to state 108
    NEQ             shift, and go to state 109
    TRUE            shift, and go to state 11
    FALSE           shift, and go to state 12
    INT_LIT         shift, and go to state 56
    SIGN_INT_LIT    shift, and go to state 14
    FLOAT_LIT       shift, and go to state 57
    SIGN_FLOAT_LIT  shift, and go to state 16
    ID              shift, and go to state 58
    '"'             shift, and go to state 18
    '('             shift, and go to state 19
    ')'             shift, and go to state 213
    '>'             shift, and go to state 110
    '<'             shift, and go to state 111
    '!'             shift, and go to state 21

    add_expression   go to state 112
    mul_expression   go to state 42
    operand          go to state 43
    term             go to state 44
    bool             go to state 60
    literal          go to state 61
    int_literal      go to state 62
    float_literal    go to state 63
    sign_literal     go to state 49
    string_literal   go to state 50
    literal_convert  go to state 51
    id_term          go to state 52


State 135

  155 literal_convert: FLOAT '(' INT_LIT . ')'

    ')'  shift, and go to state 214


State 136

  101 ident: ID .

    $default  reduce using rule 101 (ident)


State 137

  154 literal_convert: FLOAT '(' ident . ')'

    ')'  shift, and go to state 215


State 138

   45 print_stmt: PRINT $@9 '(' . expression ')'

    INT             shift, and go to state 2
    FLOAT           shift, and go to state 3
    LAND            shift, and go to state 4
    LOR             shift, and go to state 5
    TRUE            shift, and go to state 11
    FALSE           shift, and go to state 12
    INT_LIT         shift, and go to state 56
    SIGN_INT_LIT    shift, and go to state 14
    FLOAT_LIT       shift, and go to state 57
    SIGN_FLOAT_LIT  shift, and go to state 16
    ID              shift, and go to state 58
    '"'             shift, and go to state 18
    '('             shift, and go to state 19
    '!'             shift, and go to state 21

    INT             [reduce using rule 114 (expression)]
    FLOAT           [reduce using rule 114 (expression)]
    TRUE            [reduce using rule 114 (expression)]
    FALSE           [reduce using rule 114 (expression)]
    INT_LIT         [reduce using rule 114 (expression)]
    SIGN_INT_LIT    [reduce using rule 114 (expression)]
    FLOAT_LIT       [reduce using rule 114 (expression)]
    SIGN_FLOAT_LIT  [reduce using rule 114 (expression)]
    ID              [reduce using rule 114 (expression)]
    '"'             [reduce using rule 114 (expression)]
    '('             [reduce using rule 114 (expression)]
    '!'             [reduce using rule 114 (expression)]
    $default        reduce using rule 114 (expression)

    expression             go to state 216
    lor_expression         go to state 38
    land_expression        go to state 39
    comparsion_expression  go to state 40
    add_expression         go to state 41
    mul_expression         go to state 42
    operand                go to state 43
    term                   go to state 44
    bool                   go to state 60
    literal                go to state 61
    int_literal            go to state 62
    float_literal          go to state 63
    sign_literal           go to state 49
    string_literal         go to state 50
    literal_convert        go to state 51
    id_term                go to state 52


State 139

   43 print_stmt: PRINTLN $@8 '(' . expression ')'

    INT             shift, and go to state 2
    FLOAT           shift, and go to state 3
    LAND            shift, and go to state 4
    LOR             shift, and go to state 5
    TRUE            shift, and go to state 11
    FALSE           shift, and go to state 12
    INT_LIT         shift, and go to state 56
    SIGN_INT_LIT    shift, and go to state 14
    FLOAT_LIT       shift, and go to state 57
    SIGN_FLOAT_LIT  shift, and go to state 16
    ID              shift, and go to state 58
    '"'             shift, and go to state 18
    '('             shift, and go to state 19
    '!'             shift, and go to state 21

    INT             [reduce using rule 114 (expression)]
    FLOAT           [reduce using rule 114 (expression)]
    TRUE            [reduce using rule 114 (expression)]
    FALSE           [reduce using rule 114 (expression)]
    INT_LIT         [reduce using rule 114 (expression)]
    SIGN_INT_LIT    [reduce using rule 114 (expression)]
    FLOAT_LIT       [reduce using rule 114 (expression)]
    SIGN_FLOAT_LIT  [reduce using rule 114 (expression)]
    ID              [reduce using rule 114 (expression)]
    '"'             [reduce using rule 114 (expression)]
    '('             [reduce using rule 114 (expression)]
    '!'             [reduce using rule 114 (expression)]
    $default        reduce using rule 114 (expression)

    expression             go to state 217
    lor_expression         go to state 38
    land_expression        go to state 39
    comparsion_expression  go to state 40
    add_expression         go to state 41
    mul_expression         go to state 42
    operand                go to state 43
    term                   go to state 44
    bool                   go to state 60
    literal                go to state 61
    int_literal            go to state 62
    float_literal          go to state 63
    sign_literal           go to state 49
    string_literal         go to state 50
    literal_convert        go to state 51
    id_term                go to state 52


State 140

   65 if_stmt: IF $@10 expression . $@11 block $@12 else_stmt
  118 comparsion_expression: expression . '>' add_expression
  119                      | expression . '<' add_expression
  120                      | expression . GEQ add_expression
  121                      | expression . LEQ add_expression
  122                      | expression . EQL add_expression
  123                      | expression . NEQ add_expression
  124                      | expression . add_expression

    INT             shift, and go to state 2
    FLOAT           shift, and go to state 3
    GEQ             shift, and go to state 106
    LEQ             shift, and go to state 107
    EQL             shift, and go to state 108
    NEQ             shift, and go to state 109
    TRUE            shift, and go to state 11
    FALSE           shift, and go to state 12
    INT_LIT         shift, and go to state 56
    SIGN_INT_LIT    shift, and go to state 14
    FLOAT_LIT       shift, and go to state 57
    SIGN_FLOAT_LIT  shift, and go to state 16
    ID              shift, and go to state 58
    '"'             shift, and go to state 18
    '('             shift, and go to state 19
    '>'             shift, and go to state 110
    '<'             shift, and go to state 111
    '!'             shift, and go to state 21

    $default  reduce using rule 63 ($@11)

    $@11             go to state 218
    add_expression   go to state 112
    mul_expression   go to state 42
    operand          go to state 43
    term             go to state 44
    bool             go to state 60
    literal          go to state 61
    int_literal      go to state 62
    float_literal    go to state 63
    sign_literal     go to state 49
    string_literal   go to state 50
    literal_convert  go to state 51
    id_term          go to state 52


State 141

   50 pure_arithmetic: ID '+' . INT_LIT

    INT_LIT  shift, and go to state 159


State 142

   58 invalid_arithmetic: ID '%' . INT_LIT

    INT_LIT  shift, and go to state 163


State 143

   74 for_stmt: FOR pure_arithmetic '{' . $@15 stmts '}'

    $default  reduce using rule 73 ($@15)

    $@15  go to state 219


State 144

   75 for_stmt: FOR for_expr block .

    $default  reduce using rule 75 (for_stmt)


State 145

   79 for_expr: ident $@17 . '>' int_literal

    '>'  shift, and go to state 220


State 146

   77 for_expr: ident assign . $@16 ';' comparsion_expression ';' incdec_stmt

    $default  reduce using rule 76 ($@16)

    $@16  go to state 221


State 147

   72 for_stmt: FOR int_literal '{' . $@14 stmts '}'

    $default  reduce using rule 71 ($@14)

    $@14  go to state 222


State 148

   70 for_stmt: FOR float_literal '{' . $@13 stmts '}'

    $default  reduce using rule 69 ($@13)

    $@13  go to state 223


State 149

   52 invalid_arithmetic: INT_LIT '+' FLOAT_LIT .

    $default  reduce using rule 52 (invalid_arithmetic)


State 150

   54 invalid_arithmetic: INT_LIT '-' FLOAT_LIT .

    $default  reduce using rule 54 (invalid_arithmetic)


State 151

   56 invalid_arithmetic: INT_LIT '*' FLOAT_LIT .

    $default  reduce using rule 56 (invalid_arithmetic)


State 152

   53 invalid_arithmetic: FLOAT_LIT '+' INT_LIT .

    $default  reduce using rule 53 (invalid_arithmetic)


State 153

   48 pure_arithmetic: FLOAT_LIT '+' FLOAT_LIT .

    $default  reduce using rule 48 (pure_arithmetic)


State 154

   55 invalid_arithmetic: FLOAT_LIT '-' INT_LIT .

    $default  reduce using rule 55 (invalid_arithmetic)


State 155

   49 pure_arithmetic: FLOAT_LIT '-' FLOAT_LIT .

    $default  reduce using rule 49 (pure_arithmetic)


State 156

   57 invalid_arithmetic: FLOAT_LIT '*' INT_LIT .

    $default  reduce using rule 57 (invalid_arithmetic)


State 157

   26 declaration: ID '[' INT_LIT . $@3 ']' array_initial $@4 NEWLINE

    $default  reduce using rule 24 ($@3)

    $@3  go to state 224


State 158

   30 declaration: ID '=' expression . $@6 NEWLINE
  118 comparsion_expression: expression . '>' add_expression
  119                      | expression . '<' add_expression
  120                      | expression . GEQ add_expression
  121                      | expression . LEQ add_expression
  122                      | expression . EQL add_expression
  123                      | expression . NEQ add_expression
  124                      | expression . add_expression

    INT             shift, and go to state 2
    FLOAT           shift, and go to state 3
    GEQ             shift, and go to state 106
    LEQ             shift, and go to state 107
    EQL             shift, and go to state 108
    NEQ             shift, and go to state 109
    TRUE            shift, and go to state 11
    FALSE           shift, and go to state 12
    INT_LIT         shift, and go to state 56
    SIGN_INT_LIT    shift, and go to state 14
    FLOAT_LIT       shift, and go to state 57
    SIGN_FLOAT_LIT  shift, and go to state 16
    ID              shift, and go to state 58
    '"'             shift, and go to state 18
    '('             shift, and go to state 19
    '>'             shift, and go to state 110
    '<'             shift, and go to state 111
    '!'             shift, and go to state 21

    $default  reduce using rule 29 ($@6)

    $@6              go to state 225
    add_expression   go to state 112
    mul_expression   go to state 42
    operand          go to state 43
    term             go to state 44
    bool             go to state 60
    literal          go to state 61
    int_literal      go to state 62
    float_literal    go to state 63
    sign_literal     go to state 49
    string_literal   go to state 50
    literal_convert  go to state 51
    id_term          go to state 52


State 159

   50 pure_arithmetic: ID '+' INT_LIT .

    $default  reduce using rule 50 (pure_arithmetic)


State 160

  104 arithmetic_add_stmt: ID '+' ID .

    $default  reduce using rule 104 (arithmetic_add_stmt)


State 161

  105 arithmetic_add_stmt: ID '-' ID .

    $default  reduce using rule 105 (arithmetic_add_stmt)


State 162

  107 arithmetic_mul_stmt: ID '*' ID .

    $default  reduce using rule 107 (arithmetic_mul_stmt)


State 163

   58 invalid_arithmetic: ID '%' INT_LIT .

    $default  reduce using rule 58 (invalid_arithmetic)


State 164

  109 arithmetic_mul_stmt: ID '%' ID .

    $default  reduce using rule 109 (arithmetic_mul_stmt)


State 165

  108 arithmetic_mul_stmt: ID '/' ID .

    $default  reduce using rule 108 (arithmetic_mul_stmt)


State 166

  159 id_term: ID $@26 '[' . expression ']'

    INT             shift, and go to state 2
    FLOAT           shift, and go to state 3
    LAND            shift, and go to state 4
    LOR             shift, and go to state 5
    TRUE            shift, and go to state 11
    FALSE           shift, and go to state 12
    INT_LIT         shift, and go to state 56
    SIGN_INT_LIT    shift, and go to state 14
    FLOAT_LIT       shift, and go to state 57
    SIGN_FLOAT_LIT  shift, and go to state 16
    ID              shift, and go to state 58
    '"'             shift, and go to state 18
    '('             shift, and go to state 19
    '!'             shift, and go to state 21

    INT             [reduce using rule 114 (expression)]
    FLOAT           [reduce using rule 114 (expression)]
    TRUE            [reduce using rule 114 (expression)]
    FALSE           [reduce using rule 114 (expression)]
    INT_LIT         [reduce using rule 114 (expression)]
    SIGN_INT_LIT    [reduce using rule 114 (expression)]
    FLOAT_LIT       [reduce using rule 114 (expression)]
    SIGN_FLOAT_LIT  [reduce using rule 114 (expression)]
    ID              [reduce using rule 114 (expression)]
    '"'             [reduce using rule 114 (expression)]
    '('             [reduce using rule 114 (expression)]
    '!'             [reduce using rule 114 (expression)]
    $default        reduce using rule 114 (expression)

    expression             go to state 226
    lor_expression         go to state 38
    land_expression        go to state 39
    comparsion_expression  go to state 40
    add_expression         go to state 41
    mul_expression         go to state 42
    operand                go to state 43
    term                   go to state 44
    bool                   go to state 60
    literal                go to state 61
    int_literal            go to state 62
    float_literal          go to state 63
    sign_literal           go to state 49
    string_literal         go to state 50
    literal_convert        go to state 51
    id_term                go to state 52


State 167

  151 string_literal: '"' STRING_LIT '"' .

    $default  reduce using rule 151 (string_literal)


State 168

  132 operand: '(' expression ')' .

    $default  reduce using rule 132 (operand)


State 169

  103 block: '{' $@23 stmts . '}'

    '}'  shift, and go to state 227


State 170

  142 bool: '!' $@24 bool . $@25 expression

    $default  reduce using rule 141 ($@25)

    $@25  go to state 228


State 171

    3 stmts: stmt stmts .

    $default  reduce using rule 3 (stmts)


State 172

   92 error_assign: ADD_ASSIGN ID .

    $default  reduce using rule 92 (error_assign)


State 173

   81 assign: ADD_ASSIGN $@18 . var

    INT             shift, and go to state 2
    FLOAT           shift, and go to state 3
    LAND            shift, and go to state 4
    LOR             shift, and go to state 5
    TRUE            shift, and go to state 11
    FALSE           shift, and go to state 12
    INT_LIT         shift, and go to state 56
    SIGN_INT_LIT    shift, and go to state 14
    FLOAT_LIT       shift, and go to state 57
    SIGN_FLOAT_LIT  shift, and go to state 16
    ID              shift, and go to state 178
    '"'             shift, and go to state 18
    '('             shift, and go to state 19
    '!'             shift, and go to state 21

    $end            reduce using rule 100 (var)
    $end            [reduce using rule 114 (expression)]
    VAR             reduce using rule 100 (var)
    VAR             [reduce using rule 114 (expression)]
    INT             [reduce using rule 100 (var)]
    INT             [reduce using rule 114 (expression)]
    FLOAT           [reduce using rule 100 (var)]
    FLOAT           [reduce using rule 114 (expression)]
    GEQ             reduce using rule 100 (var)
    GEQ             [reduce using rule 114 (expression)]
    LEQ             reduce using rule 100 (var)
    LEQ             [reduce using rule 114 (expression)]
    EQL             reduce using rule 100 (var)
    EQL             [reduce using rule 114 (expression)]
    NEQ             reduce using rule 100 (var)
    NEQ             [reduce using rule 114 (expression)]
    LAND            [reduce using rule 100 (var)]
    LAND            [reduce using rule 114 (expression)]
    LOR             [reduce using rule 100 (var)]
    LOR             [reduce using rule 114 (expression)]
    NEWLINE         reduce using rule 100 (var)
    NEWLINE         [reduce using rule 114 (expression)]
    PRINT           reduce using rule 100 (var)
    PRINT           [reduce using rule 114 (expression)]
    PRINTLN         reduce using rule 100 (var)
    PRINTLN         [reduce using rule 114 (expression)]
    IF              reduce using rule 100 (var)
    IF              [reduce using rule 114 (expression)]
    FOR             reduce using rule 100 (var)
    FOR             [reduce using rule 114 (expression)]
    TRUE            [reduce using rule 100 (var)]
    TRUE            [reduce using rule 114 (expression)]
    FALSE           [reduce using rule 100 (var)]
    FALSE           [reduce using rule 114 (expression)]
    INT_LIT         [reduce using rule 100 (var)]
    INT_LIT         [reduce using rule 114 (expression)]
    SIGN_INT_LIT    [reduce using rule 100 (var)]
    SIGN_INT_LIT    [reduce using rule 114 (expression)]
    FLOAT_LIT       [reduce using rule 100 (var)]
    FLOAT_LIT       [reduce using rule 114 (expression)]
    SIGN_FLOAT_LIT  [reduce using rule 100 (var)]
    SIGN_FLOAT_LIT  [reduce using rule 114 (expression)]
    ID              [reduce using rule 100 (var)]
    ID              [reduce using rule 114 (expression)]
    '"'             [reduce using rule 100 (var)]
    '"'             [reduce using rule 114 (expression)]
    '('             [reduce using rule 100 (var)]
    '('             [reduce using rule 114 (expression)]
    '{'             reduce using rule 100 (var)
    '{'             [reduce using rule 114 (expression)]
    '}'             reduce using rule 100 (var)
    '}'             [reduce using rule 114 (expression)]
    ';'             reduce using rule 100 (var)
    ';'             [reduce using rule 114 (expression)]
    '>'             reduce using rule 100 (var)
    '>'             [reduce using rule 114 (expression)]
    '<'             reduce using rule 100 (var)
    '<'             [reduce using rule 114 (expression)]
    '!'             [reduce using rule 100 (var)]
    '!'             [reduce using rule 114 (expression)]
    $default        reduce using rule 100 (var)

    var                    go to state 229
    expression             go to state 180
    lor_expression         go to state 38
    land_expression        go to state 39
    comparsion_expression  go to state 40
    add_expression         go to state 41
    mul_expression         go to state 42
    operand                go to state 43
    term                   go to state 44
    bool                   go to state 181
    literal                go to state 61
    int_literal            go to state 182
    float_literal          go to state 183
    sign_literal           go to state 49
    string_literal         go to state 184
    literal_convert        go to state 51
    id_term                go to state 52


State 174

   83 assign: SUB_ASSIGN $@19 . var

    INT             shift, and go to state 2
    FLOAT           shift, and go to state 3
    LAND            shift, and go to state 4
    LOR             shift, and go to state 5
    TRUE            shift, and go to state 11
    FALSE           shift, and go to state 12
    INT_LIT         shift, and go to state 56
    SIGN_INT_LIT    shift, and go to state 14
    FLOAT_LIT       shift, and go to state 57
    SIGN_FLOAT_LIT  shift, and go to state 16
    ID              shift, and go to state 178
    '"'             shift, and go to state 18
    '('             shift, and go to state 19
    '!'             shift, and go to state 21

    $end            reduce using rule 100 (var)
    $end            [reduce using rule 114 (expression)]
    VAR             reduce using rule 100 (var)
    VAR             [reduce using rule 114 (expression)]
    INT             [reduce using rule 100 (var)]
    INT             [reduce using rule 114 (expression)]
    FLOAT           [reduce using rule 100 (var)]
    FLOAT           [reduce using rule 114 (expression)]
    GEQ             reduce using rule 100 (var)
    GEQ             [reduce using rule 114 (expression)]
    LEQ             reduce using rule 100 (var)
    LEQ             [reduce using rule 114 (expression)]
    EQL             reduce using rule 100 (var)
    EQL             [reduce using rule 114 (expression)]
    NEQ             reduce using rule 100 (var)
    NEQ             [reduce using rule 114 (expression)]
    LAND            [reduce using rule 100 (var)]
    LAND            [reduce using rule 114 (expression)]
    LOR             [reduce using rule 100 (var)]
    LOR             [reduce using rule 114 (expression)]
    NEWLINE         reduce using rule 100 (var)
    NEWLINE         [reduce using rule 114 (expression)]
    PRINT           reduce using rule 100 (var)
    PRINT           [reduce using rule 114 (expression)]
    PRINTLN         reduce using rule 100 (var)
    PRINTLN         [reduce using rule 114 (expression)]
    IF              reduce using rule 100 (var)
    IF              [reduce using rule 114 (expression)]
    FOR             reduce using rule 100 (var)
    FOR             [reduce using rule 114 (expression)]
    TRUE            [reduce using rule 100 (var)]
    TRUE            [reduce using rule 114 (expression)]
    FALSE           [reduce using rule 100 (var)]
    FALSE           [reduce using rule 114 (expression)]
    INT_LIT         [reduce using rule 100 (var)]
    INT_LIT         [reduce using rule 114 (expression)]
    SIGN_INT_LIT    [reduce using rule 100 (var)]
    SIGN_INT_LIT    [reduce using rule 114 (expression)]
    FLOAT_LIT       [reduce using rule 100 (var)]
    FLOAT_LIT       [reduce using rule 114 (expression)]
    SIGN_FLOAT_LIT  [reduce using rule 100 (var)]
    SIGN_FLOAT_LIT  [reduce using rule 114 (expression)]
    ID              [reduce using rule 100 (var)]
    ID              [reduce using rule 114 (expression)]
    '"'             [reduce using rule 100 (var)]
    '"'             [reduce using rule 114 (expression)]
    '('             [reduce using rule 100 (var)]
    '('             [reduce using rule 114 (expression)]
    '{'             reduce using rule 100 (var)
    '{'             [reduce using rule 114 (expression)]
    '}'             reduce using rule 100 (var)
    '}'             [reduce using rule 114 (expression)]
    ';'             reduce using rule 100 (var)
    ';'             [reduce using rule 114 (expression)]
    '>'             reduce using rule 100 (var)
    '>'             [reduce using rule 114 (expression)]
    '<'             reduce using rule 100 (var)
    '<'             [reduce using rule 114 (expression)]
    '!'             [reduce using rule 100 (var)]
    '!'             [reduce using rule 114 (expression)]
    $default        reduce using rule 100 (var)

    var                    go to state 230
    expression             go to state 180
    lor_expression         go to state 38
    land_expression        go to state 39
    comparsion_expression  go to state 40
    add_expression         go to state 41
    mul_expression         go to state 42
    operand                go to state 43
    term                   go to state 44
    bool                   go to state 181
    literal                go to state 61
    int_literal            go to state 182
    float_literal          go to state 183
    sign_literal           go to state 49
    string_literal         go to state 184
    literal_convert        go to state 51
    id_term                go to state 52


State 175

   85 assign: MUL_ASSIGN $@20 . var

    INT             shift, and go to state 2
    FLOAT           shift, and go to state 3
    LAND            shift, and go to state 4
    LOR             shift, and go to state 5
    TRUE            shift, and go to state 11
    FALSE           shift, and go to state 12
    INT_LIT         shift, and go to state 56
    SIGN_INT_LIT    shift, and go to state 14
    FLOAT_LIT       shift, and go to state 57
    SIGN_FLOAT_LIT  shift, and go to state 16
    ID              shift, and go to state 178
    '"'             shift, and go to state 18
    '('             shift, and go to state 19
    '!'             shift, and go to state 21

    $end            reduce using rule 100 (var)
    $end            [reduce using rule 114 (expression)]
    VAR             reduce using rule 100 (var)
    VAR             [reduce using rule 114 (expression)]
    INT             [reduce using rule 100 (var)]
    INT             [reduce using rule 114 (expression)]
    FLOAT           [reduce using rule 100 (var)]
    FLOAT           [reduce using rule 114 (expression)]
    GEQ             reduce using rule 100 (var)
    GEQ             [reduce using rule 114 (expression)]
    LEQ             reduce using rule 100 (var)
    LEQ             [reduce using rule 114 (expression)]
    EQL             reduce using rule 100 (var)
    EQL             [reduce using rule 114 (expression)]
    NEQ             reduce using rule 100 (var)
    NEQ             [reduce using rule 114 (expression)]
    LAND            [reduce using rule 100 (var)]
    LAND            [reduce using rule 114 (expression)]
    LOR             [reduce using rule 100 (var)]
    LOR             [reduce using rule 114 (expression)]
    NEWLINE         reduce using rule 100 (var)
    NEWLINE         [reduce using rule 114 (expression)]
    PRINT           reduce using rule 100 (var)
    PRINT           [reduce using rule 114 (expression)]
    PRINTLN         reduce using rule 100 (var)
    PRINTLN         [reduce using rule 114 (expression)]
    IF              reduce using rule 100 (var)
    IF              [reduce using rule 114 (expression)]
    FOR             reduce using rule 100 (var)
    FOR             [reduce using rule 114 (expression)]
    TRUE            [reduce using rule 100 (var)]
    TRUE            [reduce using rule 114 (expression)]
    FALSE           [reduce using rule 100 (var)]
    FALSE           [reduce using rule 114 (expression)]
    INT_LIT         [reduce using rule 100 (var)]
    INT_LIT         [reduce using rule 114 (expression)]
    SIGN_INT_LIT    [reduce using rule 100 (var)]
    SIGN_INT_LIT    [reduce using rule 114 (expression)]
    FLOAT_LIT       [reduce using rule 100 (var)]
    FLOAT_LIT       [reduce using rule 114 (expression)]
    SIGN_FLOAT_LIT  [reduce using rule 100 (var)]
    SIGN_FLOAT_LIT  [reduce using rule 114 (expression)]
    ID              [reduce using rule 100 (var)]
    ID              [reduce using rule 114 (expression)]
    '"'             [reduce using rule 100 (var)]
    '"'             [reduce using rule 114 (expression)]
    '('             [reduce using rule 100 (var)]
    '('             [reduce using rule 114 (expression)]
    '{'             reduce using rule 100 (var)
    '{'             [reduce using rule 114 (expression)]
    '}'             reduce using rule 100 (var)
    '}'             [reduce using rule 114 (expression)]
    ';'             reduce using rule 100 (var)
    ';'             [reduce using rule 114 (expression)]
    '>'             reduce using rule 100 (var)
    '>'             [reduce using rule 114 (expression)]
    '<'             reduce using rule 100 (var)
    '<'             [reduce using rule 114 (expression)]
    '!'             [reduce using rule 100 (var)]
    '!'             [reduce using rule 114 (expression)]
    $default        reduce using rule 100 (var)

    var                    go to state 231
    expression             go to state 180
    lor_expression         go to state 38
    land_expression        go to state 39
    comparsion_expression  go to state 40
    add_expression         go to state 41
    mul_expression         go to state 42
    operand                go to state 43
    term                   go to state 44
    bool                   go to state 181
    literal                go to state 61
    int_literal            go to state 182
    float_literal          go to state 183
    sign_literal           go to state 49
    string_literal         go to state 184
    literal_convert        go to state 51
    id_term                go to state 52


State 176

   87 assign: QUO_ASSIGN $@21 . var

    INT             shift, and go to state 2
    FLOAT           shift, and go to state 3
    LAND            shift, and go to state 4
    LOR             shift, and go to state 5
    TRUE            shift, and go to state 11
    FALSE           shift, and go to state 12
    INT_LIT         shift, and go to state 56
    SIGN_INT_LIT    shift, and go to state 14
    FLOAT_LIT       shift, and go to state 57
    SIGN_FLOAT_LIT  shift, and go to state 16
    ID              shift, and go to state 178
    '"'             shift, and go to state 18
    '('             shift, and go to state 19
    '!'             shift, and go to state 21

    $end            reduce using rule 100 (var)
    $end            [reduce using rule 114 (expression)]
    VAR             reduce using rule 100 (var)
    VAR             [reduce using rule 114 (expression)]
    INT             [reduce using rule 100 (var)]
    INT             [reduce using rule 114 (expression)]
    FLOAT           [reduce using rule 100 (var)]
    FLOAT           [reduce using rule 114 (expression)]
    GEQ             reduce using rule 100 (var)
    GEQ             [reduce using rule 114 (expression)]
    LEQ             reduce using rule 100 (var)
    LEQ             [reduce using rule 114 (expression)]
    EQL             reduce using rule 100 (var)
    EQL             [reduce using rule 114 (expression)]
    NEQ             reduce using rule 100 (var)
    NEQ             [reduce using rule 114 (expression)]
    LAND            [reduce using rule 100 (var)]
    LAND            [reduce using rule 114 (expression)]
    LOR             [reduce using rule 100 (var)]
    LOR             [reduce using rule 114 (expression)]
    NEWLINE         reduce using rule 100 (var)
    NEWLINE         [reduce using rule 114 (expression)]
    PRINT           reduce using rule 100 (var)
    PRINT           [reduce using rule 114 (expression)]
    PRINTLN         reduce using rule 100 (var)
    PRINTLN         [reduce using rule 114 (expression)]
    IF              reduce using rule 100 (var)
    IF              [reduce using rule 114 (expression)]
    FOR             reduce using rule 100 (var)
    FOR             [reduce using rule 114 (expression)]
    TRUE            [reduce using rule 100 (var)]
    TRUE            [reduce using rule 114 (expression)]
    FALSE           [reduce using rule 100 (var)]
    FALSE           [reduce using rule 114 (expression)]
    INT_LIT         [reduce using rule 100 (var)]
    INT_LIT         [reduce using rule 114 (expression)]
    SIGN_INT_LIT    [reduce using rule 100 (var)]
    SIGN_INT_LIT    [reduce using rule 114 (expression)]
    FLOAT_LIT       [reduce using rule 100 (var)]
    FLOAT_LIT       [reduce using rule 114 (expression)]
    SIGN_FLOAT_LIT  [reduce using rule 100 (var)]
    SIGN_FLOAT_LIT  [reduce using rule 114 (expression)]
    ID              [reduce using rule 100 (var)]
    ID              [reduce using rule 114 (expression)]
    '"'             [reduce using rule 100 (var)]
    '"'             [reduce using rule 114 (expression)]
    '('             [reduce using rule 100 (var)]
    '('             [reduce using rule 114 (expression)]
    '{'             reduce using rule 100 (var)
    '{'             [reduce using rule 114 (expression)]
    '}'             reduce using rule 100 (var)
    '}'             [reduce using rule 114 (expression)]
    ';'             reduce using rule 100 (var)
    ';'             [reduce using rule 114 (expression)]
    '>'             reduce using rule 100 (var)
    '>'             [reduce using rule 114 (expression)]
    '<'             reduce using rule 100 (var)
    '<'             [reduce using rule 114 (expression)]
    '!'             [reduce using rule 100 (var)]
    '!'             [reduce using rule 114 (expression)]
    $default        reduce using rule 100 (var)

    var                    go to state 232
    expression             go to state 180
    lor_expression         go to state 38
    land_expression        go to state 39
    comparsion_expression  go to state 40
    add_expression         go to state 41
    mul_expression         go to state 42
    operand                go to state 43
    term                   go to state 44
    bool                   go to state 181
    literal                go to state 61
    int_literal            go to state 182
    float_literal          go to state 183
    sign_literal           go to state 49
    string_literal         go to state 184
    literal_convert        go to state 51
    id_term                go to state 52


State 177

   89 assign: REM_ASSIGN $@22 . var

    INT             shift, and go to state 2
    FLOAT           shift, and go to state 3
    LAND            shift, and go to state 4
    LOR             shift, and go to state 5
    TRUE            shift, and go to state 11
    FALSE           shift, and go to state 12
    INT_LIT         shift, and go to state 56
    SIGN_INT_LIT    shift, and go to state 14
    FLOAT_LIT       shift, and go to state 57
    SIGN_FLOAT_LIT  shift, and go to state 16
    ID              shift, and go to state 178
    '"'             shift, and go to state 18
    '('             shift, and go to state 19
    '!'             shift, and go to state 21

    $end            reduce using rule 100 (var)
    $end            [reduce using rule 114 (expression)]
    VAR             reduce using rule 100 (var)
    VAR             [reduce using rule 114 (expression)]
    INT             [reduce using rule 100 (var)]
    INT             [reduce using rule 114 (expression)]
    FLOAT           [reduce using rule 100 (var)]
    FLOAT           [reduce using rule 114 (expression)]
    GEQ             reduce using rule 100 (var)
    GEQ             [reduce using rule 114 (expression)]
    LEQ             reduce using rule 100 (var)
    LEQ             [reduce using rule 114 (expression)]
    EQL             reduce using rule 100 (var)
    EQL             [reduce using rule 114 (expression)]
    NEQ             reduce using rule 100 (var)
    NEQ             [reduce using rule 114 (expression)]
    LAND            [reduce using rule 100 (var)]
    LAND            [reduce using rule 114 (expression)]
    LOR             [reduce using rule 100 (var)]
    LOR             [reduce using rule 114 (expression)]
    NEWLINE         reduce using rule 100 (var)
    NEWLINE         [reduce using rule 114 (expression)]
    PRINT           reduce using rule 100 (var)
    PRINT           [reduce using rule 114 (expression)]
    PRINTLN         reduce using rule 100 (var)
    PRINTLN         [reduce using rule 114 (expression)]
    IF              reduce using rule 100 (var)
    IF              [reduce using rule 114 (expression)]
    FOR             reduce using rule 100 (var)
    FOR             [reduce using rule 114 (expression)]
    TRUE            [reduce using rule 100 (var)]
    TRUE            [reduce using rule 114 (expression)]
    FALSE           [reduce using rule 100 (var)]
    FALSE           [reduce using rule 114 (expression)]
    INT_LIT         [reduce using rule 100 (var)]
    INT_LIT         [reduce using rule 114 (expression)]
    SIGN_INT_LIT    [reduce using rule 100 (var)]
    SIGN_INT_LIT    [reduce using rule 114 (expression)]
    FLOAT_LIT       [reduce using rule 100 (var)]
    FLOAT_LIT       [reduce using rule 114 (expression)]
    SIGN_FLOAT_LIT  [reduce using rule 100 (var)]
    SIGN_FLOAT_LIT  [reduce using rule 114 (expression)]
    ID              [reduce using rule 100 (var)]
    ID              [reduce using rule 114 (expression)]
    '"'             [reduce using rule 100 (var)]
    '"'             [reduce using rule 114 (expression)]
    '('             [reduce using rule 100 (var)]
    '('             [reduce using rule 114 (expression)]
    '{'             reduce using rule 100 (var)
    '{'             [reduce using rule 114 (expression)]
    '}'             reduce using rule 100 (var)
    '}'             [reduce using rule 114 (expression)]
    ';'             reduce using rule 100 (var)
    ';'             [reduce using rule 114 (expression)]
    '>'             reduce using rule 100 (var)
    '>'             [reduce using rule 114 (expression)]
    '<'             reduce using rule 100 (var)
    '<'             [reduce using rule 114 (expression)]
    '!'             [reduce using rule 100 (var)]
    '!'             [reduce using rule 114 (expression)]
    $default        reduce using rule 100 (var)

    var                    go to state 233
    expression             go to state 180
    lor_expression         go to state 38
    land_expression        go to state 39
    comparsion_expression  go to state 40
    add_expression         go to state 41
    mul_expression         go to state 42
    operand                go to state 43
    term                   go to state 44
    bool                   go to state 181
    literal                go to state 61
    int_literal            go to state 182
    float_literal          go to state 183
    sign_literal           go to state 49
    string_literal         go to state 184
    literal_convert        go to state 51
    id_term                go to state 52


State 178

   99 var: ID .
  159 id_term: ID . $@26 '[' expression ']'
  160        | ID .

    $end            reduce using rule 99 (var)
    $end            [reduce using rule 160 (id_term)]
    VAR             reduce using rule 99 (var)
    VAR             [reduce using rule 160 (id_term)]
    INT             reduce using rule 99 (var)
    INT             [reduce using rule 160 (id_term)]
    FLOAT           reduce using rule 99 (var)
    FLOAT           [reduce using rule 160 (id_term)]
    GEQ             reduce using rule 99 (var)
    GEQ             [reduce using rule 160 (id_term)]
    LEQ             reduce using rule 99 (var)
    LEQ             [reduce using rule 160 (id_term)]
    EQL             reduce using rule 99 (var)
    EQL             [reduce using rule 160 (id_term)]
    NEQ             reduce using rule 99 (var)
    NEQ             [reduce using rule 160 (id_term)]
    LAND            reduce using rule 99 (var)
    LAND            [reduce using rule 160 (id_term)]
    LOR             reduce using rule 99 (var)
    LOR             [reduce using rule 160 (id_term)]
    NEWLINE         reduce using rule 99 (var)
    NEWLINE         [reduce using rule 160 (id_term)]
    PRINT           reduce using rule 99 (var)
    PRINT           [reduce using rule 160 (id_term)]
    PRINTLN         reduce using rule 99 (var)
    PRINTLN         [reduce using rule 160 (id_term)]
    IF              reduce using rule 99 (var)
    IF              [reduce using rule 160 (id_term)]
    FOR             reduce using rule 99 (var)
    FOR             [reduce using rule 160 (id_term)]
    TRUE            reduce using rule 99 (var)
    TRUE            [reduce using rule 160 (id_term)]
    FALSE           reduce using rule 99 (var)
    FALSE           [reduce using rule 160 (id_term)]
    INT_LIT         reduce using rule 99 (var)
    INT_LIT         [reduce using rule 160 (id_term)]
    SIGN_INT_LIT    reduce using rule 99 (var)
    SIGN_INT_LIT    [reduce using rule 160 (id_term)]
    FLOAT_LIT       reduce using rule 99 (var)
    FLOAT_LIT       [reduce using rule 160 (id_term)]
    SIGN_FLOAT_LIT  reduce using rule 99 (var)
    SIGN_FLOAT_LIT  [reduce using rule 160 (id_term)]
    ID              reduce using rule 99 (var)
    ID              [reduce using rule 160 (id_term)]
    '['             reduce using rule 158 ($@26)
    '"'             reduce using rule 99 (var)
    '"'             [reduce using rule 160 (id_term)]
    '('             reduce using rule 99 (var)
    '('             [reduce using rule 160 (id_term)]
    '+'             reduce using rule 160 (id_term)
    '-'             reduce using rule 160 (id_term)
    '*'             reduce using rule 160 (id_term)
    '%'             reduce using rule 160 (id_term)
    '{'             reduce using rule 99 (var)
    '{'             [reduce using rule 160 (id_term)]
    '}'             reduce using rule 99 (var)
    '}'             [reduce using rule 160 (id_term)]
    ';'             reduce using rule 99 (var)
    ';'             [reduce using rule 160 (id_term)]
    '>'             reduce using rule 99 (var)
    '>'             [reduce using rule 160 (id_term)]
    '/'             reduce using rule 160 (id_term)
    '<'             reduce using rule 99 (var)
    '<'             [reduce using rule 160 (id_term)]
    '!'             reduce using rule 99 (var)
    '!'             [reduce using rule 160 (id_term)]
    $default        reduce using rule 99 (var)

    $@26  go to state 88


State 179

   90 assign: '=' var .

    $default  reduce using rule 90 (assign)


State 180

   98 var: expression .
  118 comparsion_expression: expression . '>' add_expression
  119                      | expression . '<' add_expression
  120                      | expression . GEQ add_expression
  121                      | expression . LEQ add_expression
  122                      | expression . EQL add_expression
  123                      | expression . NEQ add_expression
  124                      | expression . add_expression

    INT             shift, and go to state 2
    FLOAT           shift, and go to state 3
    GEQ             shift, and go to state 106
    LEQ             shift, and go to state 107
    EQL             shift, and go to state 108
    NEQ             shift, and go to state 109
    TRUE            shift, and go to state 11
    FALSE           shift, and go to state 12
    INT_LIT         shift, and go to state 56
    SIGN_INT_LIT    shift, and go to state 14
    FLOAT_LIT       shift, and go to state 57
    SIGN_FLOAT_LIT  shift, and go to state 16
    ID              shift, and go to state 58
    '"'             shift, and go to state 18
    '('             shift, and go to state 19
    '>'             shift, and go to state 110
    '<'             shift, and go to state 111
    '!'             shift, and go to state 21

    INT             [reduce using rule 98 (var)]
    FLOAT           [reduce using rule 98 (var)]
    GEQ             [reduce using rule 98 (var)]
    LEQ             [reduce using rule 98 (var)]
    EQL             [reduce using rule 98 (var)]
    NEQ             [reduce using rule 98 (var)]
    TRUE            [reduce using rule 98 (var)]
    FALSE           [reduce using rule 98 (var)]
    INT_LIT         [reduce using rule 98 (var)]
    SIGN_INT_LIT    [reduce using rule 98 (var)]
    FLOAT_LIT       [reduce using rule 98 (var)]
    SIGN_FLOAT_LIT  [reduce using rule 98 (var)]
    ID              [reduce using rule 98 (var)]
    '"'             [reduce using rule 98 (var)]
    '('             [reduce using rule 98 (var)]
    '>'             [reduce using rule 98 (var)]
    '<'             [reduce using rule 98 (var)]
    '!'             [reduce using rule 98 (var)]
    $default        reduce using rule 98 (var)

    add_expression   go to state 112
    mul_expression   go to state 42
    operand          go to state 43
    term             go to state 44
    bool             go to state 60
    literal          go to state 61
    int_literal      go to state 62
    float_literal    go to state 63
    sign_literal     go to state 49
    string_literal   go to state 50
    literal_convert  go to state 51
    id_term          go to state 52


State 181

   97 var: bool .
  138 term: bool .

    $end            reduce using rule 97 (var)
    $end            [reduce using rule 138 (term)]
    VAR             reduce using rule 97 (var)
    VAR             [reduce using rule 138 (term)]
    INT             reduce using rule 97 (var)
    INT             [reduce using rule 138 (term)]
    FLOAT           reduce using rule 97 (var)
    FLOAT           [reduce using rule 138 (term)]
    GEQ             reduce using rule 97 (var)
    GEQ             [reduce using rule 138 (term)]
    LEQ             reduce using rule 97 (var)
    LEQ             [reduce using rule 138 (term)]
    EQL             reduce using rule 97 (var)
    EQL             [reduce using rule 138 (term)]
    NEQ             reduce using rule 97 (var)
    NEQ             [reduce using rule 138 (term)]
    LAND            reduce using rule 97 (var)
    LAND            [reduce using rule 138 (term)]
    LOR             reduce using rule 97 (var)
    LOR             [reduce using rule 138 (term)]
    NEWLINE         reduce using rule 97 (var)
    NEWLINE         [reduce using rule 138 (term)]
    PRINT           reduce using rule 97 (var)
    PRINT           [reduce using rule 138 (term)]
    PRINTLN         reduce using rule 97 (var)
    PRINTLN         [reduce using rule 138 (term)]
    IF              reduce using rule 97 (var)
    IF              [reduce using rule 138 (term)]
    FOR             reduce using rule 97 (var)
    FOR             [reduce using rule 138 (term)]
    TRUE            reduce using rule 97 (var)
    TRUE            [reduce using rule 138 (term)]
    FALSE           reduce using rule 97 (var)
    FALSE           [reduce using rule 138 (term)]
    INT_LIT         reduce using rule 97 (var)
    INT_LIT         [reduce using rule 138 (term)]
    SIGN_INT_LIT    reduce using rule 97 (var)
    SIGN_INT_LIT    [reduce using rule 138 (term)]
    FLOAT_LIT       reduce using rule 97 (var)
    FLOAT_LIT       [reduce using rule 138 (term)]
    SIGN_FLOAT_LIT  reduce using rule 97 (var)
    SIGN_FLOAT_LIT  [reduce using rule 138 (term)]
    ID              reduce using rule 97 (var)
    ID              [reduce using rule 138 (term)]
    '"'             reduce using rule 97 (var)
    '"'             [reduce using rule 138 (term)]
    '('             reduce using rule 97 (var)
    '('             [reduce using rule 138 (term)]
    '+'             reduce using rule 138 (term)
    '-'             reduce using rule 138 (term)
    '*'             reduce using rule 138 (term)
    '%'             reduce using rule 138 (term)
    '{'             reduce using rule 97 (var)
    '{'             [reduce using rule 138 (term)]
    '}'             reduce using rule 97 (var)
    '}'             [reduce using rule 138 (term)]
    ';'             reduce using rule 97 (var)
    ';'             [reduce using rule 138 (term)]
    '>'             reduce using rule 97 (var)
    '>'             [reduce using rule 138 (term)]
    '/'             reduce using rule 138 (term)
    '<'             reduce using rule 97 (var)
    '<'             [reduce using rule 138 (term)]
    '!'             reduce using rule 97 (var)
    '!'             [reduce using rule 138 (term)]
    $default        reduce using rule 97 (var)


State 182

   94 var: int_literal .
  145 literal: int_literal .

    $end            reduce using rule 94 (var)
    $end            [reduce using rule 145 (literal)]
    VAR             reduce using rule 94 (var)
    VAR             [reduce using rule 145 (literal)]
    INT             reduce using rule 94 (var)
    INT             [reduce using rule 145 (literal)]
    FLOAT           reduce using rule 94 (var)
    FLOAT           [reduce using rule 145 (literal)]
    GEQ             reduce using rule 94 (var)
    GEQ             [reduce using rule 145 (literal)]
    LEQ             reduce using rule 94 (var)
    LEQ             [reduce using rule 145 (literal)]
    EQL             reduce using rule 94 (var)
    EQL             [reduce using rule 145 (literal)]
    NEQ             reduce using rule 94 (var)
    NEQ             [reduce using rule 145 (literal)]
    LAND            reduce using rule 94 (var)
    LAND            [reduce using rule 145 (literal)]
    LOR             reduce using rule 94 (var)
    LOR             [reduce using rule 145 (literal)]
    NEWLINE         reduce using rule 94 (var)
    NEWLINE         [reduce using rule 145 (literal)]
    PRINT           reduce using rule 94 (var)
    PRINT           [reduce using rule 145 (literal)]
    PRINTLN         reduce using rule 94 (var)
    PRINTLN         [reduce using rule 145 (literal)]
    IF              reduce using rule 94 (var)
    IF              [reduce using rule 145 (literal)]
    FOR             reduce using rule 94 (var)
    FOR             [reduce using rule 145 (literal)]
    TRUE            reduce using rule 94 (var)
    TRUE            [reduce using rule 145 (literal)]
    FALSE           reduce using rule 94 (var)
    FALSE           [reduce using rule 145 (literal)]
    INT_LIT         reduce using rule 94 (var)
    INT_LIT         [reduce using rule 145 (literal)]
    SIGN_INT_LIT    reduce using rule 94 (var)
    SIGN_INT_LIT    [reduce using rule 145 (literal)]
    FLOAT_LIT       reduce using rule 94 (var)
    FLOAT_LIT       [reduce using rule 145 (literal)]
    SIGN_FLOAT_LIT  reduce using rule 94 (var)
    SIGN_FLOAT_LIT  [reduce using rule 145 (literal)]
    ID              reduce using rule 94 (var)
    ID              [reduce using rule 145 (literal)]
    '"'             reduce using rule 94 (var)
    '"'             [reduce using rule 145 (literal)]
    '('             reduce using rule 94 (var)
    '('             [reduce using rule 145 (literal)]
    '+'             reduce using rule 145 (literal)
    '-'             reduce using rule 145 (literal)
    '*'             reduce using rule 145 (literal)
    '%'             reduce using rule 145 (literal)
    '{'             reduce using rule 94 (var)
    '{'             [reduce using rule 145 (literal)]
    '}'             reduce using rule 94 (var)
    '}'             [reduce using rule 145 (literal)]
    ';'             reduce using rule 94 (var)
    ';'             [reduce using rule 145 (literal)]
    '>'             reduce using rule 94 (var)
    '>'             [reduce using rule 145 (literal)]
    '/'             reduce using rule 145 (literal)
    '<'             reduce using rule 94 (var)
    '<'             [reduce using rule 145 (literal)]
    '!'             reduce using rule 94 (var)
    '!'             [reduce using rule 145 (literal)]
    $default        reduce using rule 94 (var)


State 183

   95 var: float_literal .
  146 literal: float_literal .

    $end            reduce using rule 95 (var)
    $end            [reduce using rule 146 (literal)]
    VAR             reduce using rule 95 (var)
    VAR             [reduce using rule 146 (literal)]
    INT             reduce using rule 95 (var)
    INT             [reduce using rule 146 (literal)]
    FLOAT           reduce using rule 95 (var)
    FLOAT           [reduce using rule 146 (literal)]
    GEQ             reduce using rule 95 (var)
    GEQ             [reduce using rule 146 (literal)]
    LEQ             reduce using rule 95 (var)
    LEQ             [reduce using rule 146 (literal)]
    EQL             reduce using rule 95 (var)
    EQL             [reduce using rule 146 (literal)]
    NEQ             reduce using rule 95 (var)
    NEQ             [reduce using rule 146 (literal)]
    LAND            reduce using rule 95 (var)
    LAND            [reduce using rule 146 (literal)]
    LOR             reduce using rule 95 (var)
    LOR             [reduce using rule 146 (literal)]
    NEWLINE         reduce using rule 95 (var)
    NEWLINE         [reduce using rule 146 (literal)]
    PRINT           reduce using rule 95 (var)
    PRINT           [reduce using rule 146 (literal)]
    PRINTLN         reduce using rule 95 (var)
    PRINTLN         [reduce using rule 146 (literal)]
    IF              reduce using rule 95 (var)
    IF              [reduce using rule 146 (literal)]
    FOR             reduce using rule 95 (var)
    FOR             [reduce using rule 146 (literal)]
    TRUE            reduce using rule 95 (var)
    TRUE            [reduce using rule 146 (literal)]
    FALSE           reduce using rule 95 (var)
    FALSE           [reduce using rule 146 (literal)]
    INT_LIT         reduce using rule 95 (var)
    INT_LIT         [reduce using rule 146 (literal)]
    SIGN_INT_LIT    reduce using rule 95 (var)
    SIGN_INT_LIT    [reduce using rule 146 (literal)]
    FLOAT_LIT       reduce using rule 95 (var)
    FLOAT_LIT       [reduce using rule 146 (literal)]
    SIGN_FLOAT_LIT  reduce using rule 95 (var)
    SIGN_FLOAT_LIT  [reduce using rule 146 (literal)]
    ID              reduce using rule 95 (var)
    ID              [reduce using rule 146 (literal)]
    '"'             reduce using rule 95 (var)
    '"'             [reduce using rule 146 (literal)]
    '('             reduce using rule 95 (var)
    '('             [reduce using rule 146 (literal)]
    '+'             reduce using rule 146 (literal)
    '-'             reduce using rule 146 (literal)
    '*'             reduce using rule 146 (literal)
    '%'             reduce using rule 146 (literal)
    '{'             reduce using rule 95 (var)
    '{'             [reduce using rule 146 (literal)]
    '}'             reduce using rule 95 (var)
    '}'             [reduce using rule 146 (literal)]
    ';'             reduce using rule 95 (var)
    ';'             [reduce using rule 146 (literal)]
    '>'             reduce using rule 95 (var)
    '>'             [reduce using rule 146 (literal)]
    '/'             reduce using rule 146 (literal)
    '<'             reduce using rule 95 (var)
    '<'             [reduce using rule 146 (literal)]
    '!'             reduce using rule 95 (var)
    '!'             [reduce using rule 146 (literal)]
    $default        reduce using rule 95 (var)


State 184

   96 var: string_literal .
  137 term: string_literal .

    $end            reduce using rule 96 (var)
    $end            [reduce using rule 137 (term)]
    VAR             reduce using rule 96 (var)
    VAR             [reduce using rule 137 (term)]
    INT             reduce using rule 96 (var)
    INT             [reduce using rule 137 (term)]
    FLOAT           reduce using rule 96 (var)
    FLOAT           [reduce using rule 137 (term)]
    GEQ             reduce using rule 96 (var)
    GEQ             [reduce using rule 137 (term)]
    LEQ             reduce using rule 96 (var)
    LEQ             [reduce using rule 137 (term)]
    EQL             reduce using rule 96 (var)
    EQL             [reduce using rule 137 (term)]
    NEQ             reduce using rule 96 (var)
    NEQ             [reduce using rule 137 (term)]
    LAND            reduce using rule 96 (var)
    LAND            [reduce using rule 137 (term)]
    LOR             reduce using rule 96 (var)
    LOR             [reduce using rule 137 (term)]
    NEWLINE         reduce using rule 96 (var)
    NEWLINE         [reduce using rule 137 (term)]
    PRINT           reduce using rule 96 (var)
    PRINT           [reduce using rule 137 (term)]
    PRINTLN         reduce using rule 96 (var)
    PRINTLN         [reduce using rule 137 (term)]
    IF              reduce using rule 96 (var)
    IF              [reduce using rule 137 (term)]
    FOR             reduce using rule 96 (var)
    FOR             [reduce using rule 137 (term)]
    TRUE            reduce using rule 96 (var)
    TRUE            [reduce using rule 137 (term)]
    FALSE           reduce using rule 96 (var)
    FALSE           [reduce using rule 137 (term)]
    INT_LIT         reduce using rule 96 (var)
    INT_LIT         [reduce using rule 137 (term)]
    SIGN_INT_LIT    reduce using rule 96 (var)
    SIGN_INT_LIT    [reduce using rule 137 (term)]
    FLOAT_LIT       reduce using rule 96 (var)
    FLOAT_LIT       [reduce using rule 137 (term)]
    SIGN_FLOAT_LIT  reduce using rule 96 (var)
    SIGN_FLOAT_LIT  [reduce using rule 137 (term)]
    ID              reduce using rule 96 (var)
    ID              [reduce using rule 137 (term)]
    '"'             reduce using rule 96 (var)
    '"'             [reduce using rule 137 (term)]
    '('             reduce using rule 96 (var)
    '('             [reduce using rule 137 (term)]
    '+'             reduce using rule 137 (term)
    '-'             reduce using rule 137 (term)
    '*'             reduce using rule 137 (term)
    '%'             reduce using rule 137 (term)
    '{'             reduce using rule 96 (var)
    '{'             [reduce using rule 137 (term)]
    '}'             reduce using rule 96 (var)
    '}'             [reduce using rule 137 (term)]
    ';'             reduce using rule 96 (var)
    ';'             [reduce using rule 137 (term)]
    '>'             reduce using rule 96 (var)
    '>'             [reduce using rule 137 (term)]
    '/'             reduce using rule 137 (term)
    '<'             reduce using rule 96 (var)
    '<'             [reduce using rule 137 (term)]
    '!'             reduce using rule 96 (var)
    '!'             [reduce using rule 137 (term)]
    $default        reduce using rule 96 (var)


State 185

   28 declaration: ident assign $@5 . NEWLINE

    NEWLINE  shift, and go to state 234


State 186

  120 comparsion_expression: expression GEQ add_expression .
  125 add_expression: add_expression . '+' mul_expression
  126               | add_expression . '-' mul_expression

    '+'  shift, and go to state 115
    '-'  shift, and go to state 116

    '+'       [reduce using rule 120 (comparsion_expression)]
    '-'       [reduce using rule 120 (comparsion_expression)]
    $default  reduce using rule 120 (comparsion_expression)


State 187

  121 comparsion_expression: expression LEQ add_expression .
  125 add_expression: add_expression . '+' mul_expression
  126               | add_expression . '-' mul_expression

    '+'  shift, and go to state 115
    '-'  shift, and go to state 116

    '+'       [reduce using rule 121 (comparsion_expression)]
    '-'       [reduce using rule 121 (comparsion_expression)]
    $default  reduce using rule 121 (comparsion_expression)


State 188

  122 comparsion_expression: expression EQL add_expression .
  125 add_expression: add_expression . '+' mul_expression
  126               | add_expression . '-' mul_expression

    '+'  shift, and go to state 115
    '-'  shift, and go to state 116

    '+'       [reduce using rule 122 (comparsion_expression)]
    '-'       [reduce using rule 122 (comparsion_expression)]
    $default  reduce using rule 122 (comparsion_expression)


State 189

  123 comparsion_expression: expression NEQ add_expression .
  125 add_expression: add_expression . '+' mul_expression
  126               | add_expression . '-' mul_expression

    '+'  shift, and go to state 115
    '-'  shift, and go to state 116

    '+'       [reduce using rule 123 (comparsion_expression)]
    '-'       [reduce using rule 123 (comparsion_expression)]
    $default  reduce using rule 123 (comparsion_expression)


State 190

  118 comparsion_expression: expression '>' add_expression .
  125 add_expression: add_expression . '+' mul_expression
  126               | add_expression . '-' mul_expression

    '+'  shift, and go to state 115
    '-'  shift, and go to state 116

    '+'       [reduce using rule 118 (comparsion_expression)]
    '-'       [reduce using rule 118 (comparsion_expression)]
    $default  reduce using rule 118 (comparsion_expression)


State 191

  119 comparsion_expression: expression '<' add_expression .
  125 add_expression: add_expression . '+' mul_expression
  126               | add_expression . '-' mul_expression

    '+'  shift, and go to state 115
    '-'  shift, and go to state 116

    '+'       [reduce using rule 119 (comparsion_expression)]
    '-'       [reduce using rule 119 (comparsion_expression)]
    $default  reduce using rule 119 (comparsion_expression)


State 192

  125 add_expression: add_expression '+' mul_expression .
  128 mul_expression: mul_expression . '*' operand
  129               | mul_expression . '/' operand
  130               | mul_expression . '%' operand

    '*'  shift, and go to state 117
    '%'  shift, and go to state 118
    '/'  shift, and go to state 119

    '*'       [reduce using rule 125 (add_expression)]
    '%'       [reduce using rule 125 (add_expression)]
    '/'       [reduce using rule 125 (add_expression)]
    $default  reduce using rule 125 (add_expression)


State 193

  126 add_expression: add_expression '-' mul_expression .
  128 mul_expression: mul_expression . '*' operand
  129               | mul_expression . '/' operand
  130               | mul_expression . '%' operand

    '*'  shift, and go to state 117
    '%'  shift, and go to state 118
    '/'  shift, and go to state 119

    '*'       [reduce using rule 126 (add_expression)]
    '%'       [reduce using rule 126 (add_expression)]
    '/'       [reduce using rule 126 (add_expression)]
    $default  reduce using rule 126 (add_expression)


State 194

  128 mul_expression: mul_expression '*' operand .

    $default  reduce using rule 128 (mul_expression)


State 195

  130 mul_expression: mul_expression '%' operand .

    $default  reduce using rule 130 (mul_expression)


State 196

  129 mul_expression: mul_expression '/' operand .

    $default  reduce using rule 129 (mul_expression)


State 197

   61 invalid_arithmetic: bool LOR expression .
  118 comparsion_expression: expression . '>' add_expression
  119                      | expression . '<' add_expression
  120                      | expression . GEQ add_expression
  121                      | expression . LEQ add_expression
  122                      | expression . EQL add_expression
  123                      | expression . NEQ add_expression
  124                      | expression . add_expression

    INT             shift, and go to state 2
    FLOAT           shift, and go to state 3
    GEQ             shift, and go to state 106
    LEQ             shift, and go to state 107
    EQL             shift, and go to state 108
    NEQ             shift, and go to state 109
    TRUE            shift, and go to state 11
    FALSE           shift, and go to state 12
    INT_LIT         shift, and go to state 56
    SIGN_INT_LIT    shift, and go to state 14
    FLOAT_LIT       shift, and go to state 57
    SIGN_FLOAT_LIT  shift, and go to state 16
    ID              shift, and go to state 58
    '"'             shift, and go to state 18
    '('             shift, and go to state 19
    '>'             shift, and go to state 110
    '<'             shift, and go to state 111
    '!'             shift, and go to state 21

    INT             [reduce using rule 61 (invalid_arithmetic)]
    FLOAT           [reduce using rule 61 (invalid_arithmetic)]
    GEQ             [reduce using rule 61 (invalid_arithmetic)]
    LEQ             [reduce using rule 61 (invalid_arithmetic)]
    EQL             [reduce using rule 61 (invalid_arithmetic)]
    NEQ             [reduce using rule 61 (invalid_arithmetic)]
    TRUE            [reduce using rule 61 (invalid_arithmetic)]
    FALSE           [reduce using rule 61 (invalid_arithmetic)]
    INT_LIT         [reduce using rule 61 (invalid_arithmetic)]
    SIGN_INT_LIT    [reduce using rule 61 (invalid_arithmetic)]
    FLOAT_LIT       [reduce using rule 61 (invalid_arithmetic)]
    SIGN_FLOAT_LIT  [reduce using rule 61 (invalid_arithmetic)]
    ID              [reduce using rule 61 (invalid_arithmetic)]
    '"'             [reduce using rule 61 (invalid_arithmetic)]
    '('             [reduce using rule 61 (invalid_arithmetic)]
    '>'             [reduce using rule 61 (invalid_arithmetic)]
    '<'             [reduce using rule 61 (invalid_arithmetic)]
    '!'             [reduce using rule 61 (invalid_arithmetic)]
    $default        reduce using rule 61 (invalid_arithmetic)

    add_expression   go to state 112
    mul_expression   go to state 42
    operand          go to state 43
    term             go to state 44
    bool             go to state 60
    literal          go to state 61
    int_literal      go to state 62
    float_literal    go to state 63
    sign_literal     go to state 49
    string_literal   go to state 50
    literal_convert  go to state 51
    id_term          go to state 52


State 198

   59 invalid_arithmetic: int_literal LAND bool .

    $default  reduce using rule 59 (invalid_arithmetic)


State 199

   46 pure_arithmetic: int_literal '+' int_literal .

    $default  reduce using rule 46 (pure_arithmetic)


State 200

   47 pure_arithmetic: int_literal '-' int_literal .

    $default  reduce using rule 47 (pure_arithmetic)


State 201

   60 invalid_arithmetic: float_literal LAND bool .

    $default  reduce using rule 60 (invalid_arithmetic)


State 202

   17 declaration: VAR ID INT $@1 . literal_initial NEWLINE

    '='  shift, and go to state 235

    $default  reduce using rule 36 (literal_initial)

    literal_initial  go to state 236


State 203

   20 declaration: VAR ID FLOAT $@2 . literal_initial NEWLINE

    '='  shift, and go to state 235

    $default  reduce using rule 36 (literal_initial)

    literal_initial  go to state 237


State 204

   33 bool_initial: '=' . bool

    TRUE   shift, and go to state 11
    FALSE  shift, and go to state 12
    '!'    shift, and go to state 21

    bool  go to state 238


State 205

   21 declaration: VAR ID BOOL bool_initial . NEWLINE

    NEWLINE  shift, and go to state 239


State 206

   37 string_initial: '=' . '"' STRING_LIT '"' NEWLINE

    '"'  shift, and go to state 240


State 207

   18 declaration: VAR ID STRING string_initial .

    $default  reduce using rule 18 (declaration)


State 208

   39 string_initial: $@7 . NEWLINE

    NEWLINE  shift, and go to state 241


State 209

   22 declaration: VAR ID '[' INT_LIT . ']' INT NEWLINE
   23            | VAR ID '[' INT_LIT . ']' FLOAT NEWLINE

    ']'  shift, and go to state 242


State 210

  153 literal_convert: INT '(' FLOAT_LIT ')' .

    $default  reduce using rule 153 (literal_convert)


State 211

  156 literal_convert: INT '(' ID '[' . INT_LIT ']' ')'

    INT_LIT  shift, and go to state 243


State 212

  152 literal_convert: INT '(' ident ')' .

    $default  reduce using rule 152 (literal_convert)


State 213

  157 literal_convert: INT '(' expression ')' .

    $default  reduce using rule 157 (literal_convert)


State 214

  155 literal_convert: FLOAT '(' INT_LIT ')' .

    $default  reduce using rule 155 (literal_convert)


State 215

  154 literal_convert: FLOAT '(' ident ')' .

    $default  reduce using rule 154 (literal_convert)


State 216

   45 print_stmt: PRINT $@9 '(' expression . ')'
  118 comparsion_expression: expression . '>' add_expression
  119                      | expression . '<' add_expression
  120                      | expression . GEQ add_expression
  121                      | expression . LEQ add_expression
  122                      | expression . EQL add_expression
  123                      | expression . NEQ add_expression
  124                      | expression . add_expression

    INT             shift, and go to state 2
    FLOAT           shift, and go to state 3
    GEQ             shift, and go to state 106
    LEQ             shift, and go to state 107
    EQL             shift, and go to state 108
    NEQ             shift, and go to state 109
    TRUE            shift, and go to state 11
    FALSE           shift, and go to state 12
    INT_LIT         shift, and go to state 56
    SIGN_INT_LIT    shift, and go to state 14
    FLOAT_LIT       shift, and go to state 57
    SIGN_FLOAT_LIT  shift, and go to state 16
    ID              shift, and go to state 58
    '"'             shift, and go to state 18
    '('             shift, and go to state 19
    ')'             shift, and go to state 244
    '>'             shift, and go to state 110
    '<'             shift, and go to state 111
    '!'             shift, and go to state 21

    add_expression   go to state 112
    mul_expression   go to state 42
    operand          go to state 43
    term             go to state 44
    bool             go to state 60
    literal          go to state 61
    int_literal      go to state 62
    float_literal    go to state 63
    sign_literal     go to state 49
    string_literal   go to state 50
    literal_convert  go to state 51
    id_term          go to state 52


State 217

   43 print_stmt: PRINTLN $@8 '(' expression . ')'
  118 comparsion_expression: expression . '>' add_expression
  119                      | expression . '<' add_expression
  120                      | expression . GEQ add_expression
  121                      | expression . LEQ add_expression
  122                      | expression . EQL add_expression
  123                      | expression . NEQ add_expression
  124                      | expression . add_expression

    INT             shift, and go to state 2
    FLOAT           shift, and go to state 3
    GEQ             shift, and go to state 106
    LEQ             shift, and go to state 107
    EQL             shift, and go to state 108
    NEQ             shift, and go to state 109
    TRUE            shift, and go to state 11
    FALSE           shift, and go to state 12
    INT_LIT         shift, and go to state 56
    SIGN_INT_LIT    shift, and go to state 14
    FLOAT_LIT       shift, and go to state 57
    SIGN_FLOAT_LIT  shift, and go to state 16
    ID              shift, and go to state 58
    '"'             shift, and go to state 18
    '('             shift, and go to state 19
    ')'             shift, and go to state 245
    '>'             shift, and go to state 110
    '<'             shift, and go to state 111
    '!'             shift, and go to state 21

    add_expression   go to state 112
    mul_expression   go to state 42
    operand          go to state 43
    term             go to state 44
    bool             go to state 60
    literal          go to state 61
    int_literal      go to state 62
    float_literal    go to state 63
    sign_literal     go to state 49
    string_literal   go to state 50
    literal_convert  go to state 51
    id_term          go to state 52


State 218

   65 if_stmt: IF $@10 expression $@11 . block $@12 else_stmt

    '{'  shift, and go to state 20

    block  go to state 246


State 219

   74 for_stmt: FOR pure_arithmetic '{' $@15 . stmts '}'

    VAR             shift, and go to state 1
    INT             shift, and go to state 2
    FLOAT           shift, and go to state 3
    LAND            shift, and go to state 4
    LOR             shift, and go to state 5
    NEWLINE         shift, and go to state 6
    PRINT           shift, and go to state 7
    PRINTLN         shift, and go to state 8
    IF              shift, and go to state 9
    FOR             shift, and go to state 10
    TRUE            shift, and go to state 11
    FALSE           shift, and go to state 12
    INT_LIT         shift, and go to state 13
    SIGN_INT_LIT    shift, and go to state 14
    FLOAT_LIT       shift, and go to state 15
    SIGN_FLOAT_LIT  shift, and go to state 16
    ID              shift, and go to state 17
    '"'             shift, and go to state 18
    '('             shift, and go to state 19
    '{'             shift, and go to state 20
    '!'             shift, and go to state 21

    VAR             [reduce using rule 114 (expression)]
    INT             [reduce using rule 114 (expression)]
    FLOAT           [reduce using rule 114 (expression)]
    LAND            [reduce using rule 114 (expression)]
    LOR             [reduce using rule 114 (expression)]
    NEWLINE         [reduce using rule 114 (expression)]
    PRINT           [reduce using rule 114 (expression)]
    PRINTLN         [reduce using rule 114 (expression)]
    IF              [reduce using rule 114 (expression)]
    FOR             [reduce using rule 114 (expression)]
    TRUE            [reduce using rule 114 (expression)]
    FALSE           [reduce using rule 114 (expression)]
    INT_LIT         [reduce using rule 114 (expression)]
    SIGN_INT_LIT    [reduce using rule 114 (expression)]
    FLOAT_LIT       [reduce using rule 114 (expression)]
    SIGN_FLOAT_LIT  [reduce using rule 114 (expression)]
    ID              [reduce using rule 114 (expression)]
    '"'             [reduce using rule 114 (expression)]
    '('             [reduce using rule 114 (expression)]
    '{'             [reduce using rule 114 (expression)]
    '}'             reduce using rule 4 (stmts)
    '}'             [reduce using rule 114 (expression)]
    '!'             [reduce using rule 114 (expression)]
    $default        reduce using rule 114 (expression)

    stmts                  go to state 247
    stmt                   go to state 95
    declaration            go to state 24
    incdec_stmt            go to state 25
    print_stmt             go to state 26
    pure_arithmetic        go to state 27
    invalid_arithmetic     go to state 28
    if_stmt                go to state 29
    for_stmt               go to state 30
    error_stmt             go to state 31
    ident                  go to state 32
    block                  go to state 33
    arithmetic_add_stmt    go to state 34
    arithmetic_mul_stmt    go to state 35
    expression_stmt        go to state 36
    expression             go to state 37
    lor_expression         go to state 38
    land_expression        go to state 39
    comparsion_expression  go to state 40
    add_expression         go to state 41
    mul_expression         go to state 42
    operand                go to state 43
    term                   go to state 44
    bool                   go to state 45
    literal                go to state 46
    int_literal            go to state 47
    float_literal          go to state 48
    sign_literal           go to state 49
    string_literal         go to state 50
    literal_convert        go to state 51
    id_term                go to state 52


State 220

   79 for_expr: ident $@17 '>' . int_literal

    INT_LIT  shift, and go to state 56

    int_literal  go to state 248


State 221

   77 for_expr: ident assign $@16 . ';' comparsion_expression ';' incdec_stmt

    ';'  shift, and go to state 249


State 222

   72 for_stmt: FOR int_literal '{' $@14 . stmts '}'

    VAR             shift, and go to state 1
    INT             shift, and go to state 2
    FLOAT           shift, and go to state 3
    LAND            shift, and go to state 4
    LOR             shift, and go to state 5
    NEWLINE         shift, and go to state 6
    PRINT           shift, and go to state 7
    PRINTLN         shift, and go to state 8
    IF              shift, and go to state 9
    FOR             shift, and go to state 10
    TRUE            shift, and go to state 11
    FALSE           shift, and go to state 12
    INT_LIT         shift, and go to state 13
    SIGN_INT_LIT    shift, and go to state 14
    FLOAT_LIT       shift, and go to state 15
    SIGN_FLOAT_LIT  shift, and go to state 16
    ID              shift, and go to state 17
    '"'             shift, and go to state 18
    '('             shift, and go to state 19
    '{'             shift, and go to state 20
    '!'             shift, and go to state 21

    VAR             [reduce using rule 114 (expression)]
    INT             [reduce using rule 114 (expression)]
    FLOAT           [reduce using rule 114 (expression)]
    LAND            [reduce using rule 114 (expression)]
    LOR             [reduce using rule 114 (expression)]
    NEWLINE         [reduce using rule 114 (expression)]
    PRINT           [reduce using rule 114 (expression)]
    PRINTLN         [reduce using rule 114 (expression)]
    IF              [reduce using rule 114 (expression)]
    FOR             [reduce using rule 114 (expression)]
    TRUE            [reduce using rule 114 (expression)]
    FALSE           [reduce using rule 114 (expression)]
    INT_LIT         [reduce using rule 114 (expression)]
    SIGN_INT_LIT    [reduce using rule 114 (expression)]
    FLOAT_LIT       [reduce using rule 114 (expression)]
    SIGN_FLOAT_LIT  [reduce using rule 114 (expression)]
    ID              [reduce using rule 114 (expression)]
    '"'             [reduce using rule 114 (expression)]
    '('             [reduce using rule 114 (expression)]
    '{'             [reduce using rule 114 (expression)]
    '}'             reduce using rule 4 (stmts)
    '}'             [reduce using rule 114 (expression)]
    '!'             [reduce using rule 114 (expression)]
    $default        reduce using rule 114 (expression)

    stmts                  go to state 250
    stmt                   go to state 95
    declaration            go to state 24
    incdec_stmt            go to state 25
    print_stmt             go to state 26
    pure_arithmetic        go to state 27
    invalid_arithmetic     go to state 28
    if_stmt                go to state 29
    for_stmt               go to state 30
    error_stmt             go to state 31
    ident                  go to state 32
    block                  go to state 33
    arithmetic_add_stmt    go to state 34
    arithmetic_mul_stmt    go to state 35
    expression_stmt        go to state 36
    expression             go to state 37
    lor_expression         go to state 38
    land_expression        go to state 39
    comparsion_expression  go to state 40
    add_expression         go to state 41
    mul_expression         go to state 42
    operand                go to state 43
    term                   go to state 44
    bool                   go to state 45
    literal                go to state 46
    int_literal            go to state 47
    float_literal          go to state 48
    sign_literal           go to state 49
    string_literal         go to state 50
    literal_convert        go to state 51
    id_term                go to state 52


State 223

   70 for_stmt: FOR float_literal '{' $@13 . stmts '}'

    VAR             shift, and go to state 1
    INT             shift, and go to state 2
    FLOAT           shift, and go to state 3
    LAND            shift, and go to state 4
    LOR             shift, and go to state 5
    NEWLINE         shift, and go to state 6
    PRINT           shift, and go to state 7
    PRINTLN         shift, and go to state 8
    IF              shift, and go to state 9
    FOR             shift, and go to state 10
    TRUE            shift, and go to state 11
    FALSE           shift, and go to state 12
    INT_LIT         shift, and go to state 13
    SIGN_INT_LIT    shift, and go to state 14
    FLOAT_LIT       shift, and go to state 15
    SIGN_FLOAT_LIT  shift, and go to state 16
    ID              shift, and go to state 17
    '"'             shift, and go to state 18
    '('             shift, and go to state 19
    '{'             shift, and go to state 20
    '!'             shift, and go to state 21

    VAR             [reduce using rule 114 (expression)]
    INT             [reduce using rule 114 (expression)]
    FLOAT           [reduce using rule 114 (expression)]
    LAND            [reduce using rule 114 (expression)]
    LOR             [reduce using rule 114 (expression)]
    NEWLINE         [reduce using rule 114 (expression)]
    PRINT           [reduce using rule 114 (expression)]
    PRINTLN         [reduce using rule 114 (expression)]
    IF              [reduce using rule 114 (expression)]
    FOR             [reduce using rule 114 (expression)]
    TRUE            [reduce using rule 114 (expression)]
    FALSE           [reduce using rule 114 (expression)]
    INT_LIT         [reduce using rule 114 (expression)]
    SIGN_INT_LIT    [reduce using rule 114 (expression)]
    FLOAT_LIT       [reduce using rule 114 (expression)]
    SIGN_FLOAT_LIT  [reduce using rule 114 (expression)]
    ID              [reduce using rule 114 (expression)]
    '"'             [reduce using rule 114 (expression)]
    '('             [reduce using rule 114 (expression)]
    '{'             [reduce using rule 114 (expression)]
    '}'             reduce using rule 4 (stmts)
    '}'             [reduce using rule 114 (expression)]
    '!'             [reduce using rule 114 (expression)]
    $default        reduce using rule 114 (expression)

    stmts                  go to state 251
    stmt                   go to state 95
    declaration            go to state 24
    incdec_stmt            go to state 25
    print_stmt             go to state 26
    pure_arithmetic        go to state 27
    invalid_arithmetic     go to state 28
    if_stmt                go to state 29
    for_stmt               go to state 30
    error_stmt             go to state 31
    ident                  go to state 32
    block                  go to state 33
    arithmetic_add_stmt    go to state 34
    arithmetic_mul_stmt    go to state 35
    expression_stmt        go to state 36
    expression             go to state 37
    lor_expression         go to state 38
    land_expression        go to state 39
    comparsion_expression  go to state 40
    add_expression         go to state 41
    mul_expression         go to state 42
    operand                go to state 43
    term                   go to state 44
    bool                   go to state 45
    literal                go to state 46
    int_literal            go to state 47
    float_literal          go to state 48
    sign_literal           go to state 49
    string_literal         go to state 50
    literal_convert        go to state 51
    id_term                go to state 52


State 224

   26 declaration: ID '[' INT_LIT $@3 . ']' array_initial $@4 NEWLINE

    ']'  shift, and go to state 252


State 225

   30 declaration: ID '=' expression $@6 . NEWLINE

    NEWLINE  shift, and go to state 253


State 226

  118 comparsion_expression: expression . '>' add_expression
  119                      | expression . '<' add_expression
  120                      | expression . GEQ add_expression
  121                      | expression . LEQ add_expression
  122                      | expression . EQL add_expression
  123                      | expression . NEQ add_expression
  124                      | expression . add_expression
  159 id_term: ID $@26 '[' expression . ']'

    INT             shift, and go to state 2
    FLOAT           shift, and go to state 3
    GEQ             shift, and go to state 106
    LEQ             shift, and go to state 107
    EQL             shift, and go to state 108
    NEQ             shift, and go to state 109
    TRUE            shift, and go to state 11
    FALSE           shift, and go to state 12
    INT_LIT         shift, and go to state 56
    SIGN_INT_LIT    shift, and go to state 14
    FLOAT_LIT       shift, and go to state 57
    SIGN_FLOAT_LIT  shift, and go to state 16
    ID              shift, and go to state 58
    ']'             shift, and go to state 254
    '"'             shift, and go to state 18
    '('             shift, and go to state 19
    '>'             shift, and go to state 110
    '<'             shift, and go to state 111
    '!'             shift, and go to state 21

    add_expression   go to state 112
    mul_expression   go to state 42
    operand          go to state 43
    term             go to state 44
    bool             go to state 60
    literal          go to state 61
    int_literal      go to state 62
    float_literal    go to state 63
    sign_literal     go to state 49
    string_literal   go to state 50
    literal_convert  go to state 51
    id_term          go to state 52


State 227

  103 block: '{' $@23 stmts '}' .

    $default  reduce using rule 103 (block)


State 228

  142 bool: '!' $@24 bool $@25 . expression

    INT             shift, and go to state 2
    FLOAT           shift, and go to state 3
    LAND            shift, and go to state 4
    LOR             shift, and go to state 5
    TRUE            shift, and go to state 11
    FALSE           shift, and go to state 12
    INT_LIT         shift, and go to state 56
    SIGN_INT_LIT    shift, and go to state 14
    FLOAT_LIT       shift, and go to state 57
    SIGN_FLOAT_LIT  shift, and go to state 16
    ID              shift, and go to state 58
    '"'             shift, and go to state 18
    '('             shift, and go to state 19
    '!'             shift, and go to state 21

    INT             [reduce using rule 114 (expression)]
    FLOAT           [reduce using rule 114 (expression)]
    LAND            [reduce using rule 114 (expression)]
    LOR             [reduce using rule 114 (expression)]
    TRUE            [reduce using rule 114 (expression)]
    FALSE           [reduce using rule 114 (expression)]
    INT_LIT         [reduce using rule 114 (expression)]
    SIGN_INT_LIT    [reduce using rule 114 (expression)]
    FLOAT_LIT       [reduce using rule 114 (expression)]
    SIGN_FLOAT_LIT  [reduce using rule 114 (expression)]
    ID              [reduce using rule 114 (expression)]
    '"'             [reduce using rule 114 (expression)]
    '('             [reduce using rule 114 (expression)]
    '!'             [reduce using rule 114 (expression)]
    $default        reduce using rule 114 (expression)

    expression             go to state 255
    lor_expression         go to state 38
    land_expression        go to state 39
    comparsion_expression  go to state 40
    add_expression         go to state 41
    mul_expression         go to state 42
    operand                go to state 43
    term                   go to state 44
    bool                   go to state 60
    literal                go to state 61
    int_literal            go to state 62
    float_literal          go to state 63
    sign_literal           go to state 49
    string_literal         go to state 50
    literal_convert        go to state 51
    id_term                go to state 52


State 229

   81 assign: ADD_ASSIGN $@18 var .

    $default  reduce using rule 81 (assign)


State 230

   83 assign: SUB_ASSIGN $@19 var .

    $default  reduce using rule 83 (assign)


State 231

   85 assign: MUL_ASSIGN $@20 var .

    $default  reduce using rule 85 (assign)


State 232

   87 assign: QUO_ASSIGN $@21 var .

    $default  reduce using rule 87 (assign)


State 233

   89 assign: REM_ASSIGN $@22 var .

    $default  reduce using rule 89 (assign)


State 234

   28 declaration: ident assign $@5 NEWLINE .

    $default  reduce using rule 28 (declaration)


State 235

   35 literal_initial: '=' . literal

    INT_LIT    shift, and go to state 56
    FLOAT_LIT  shift, and go to state 57

    literal        go to state 256
    int_literal    go to state 62
    float_literal  go to state 63


State 236

   17 declaration: VAR ID INT $@1 literal_initial . NEWLINE

    NEWLINE  shift, and go to state 257


State 237

   20 declaration: VAR ID FLOAT $@2 literal_initial . NEWLINE

    NEWLINE  shift, and go to state 258


State 238

   33 bool_initial: '=' bool .

    $default  reduce using rule 33 (bool_initial)


State 239

   21 declaration: VAR ID BOOL bool_initial NEWLINE .

    $default  reduce using rule 21 (declaration)


State 240

   37 string_initial: '=' '"' . STRING_LIT '"' NEWLINE

    STRING_LIT  shift, and go to state 259


State 241

   39 string_initial: $@7 NEWLINE .

    $default  reduce using rule 39 (string_initial)


State 242

   22 declaration: VAR ID '[' INT_LIT ']' . INT NEWLINE
   23            | VAR ID '[' INT_LIT ']' . FLOAT NEWLINE

    INT    shift, and go to state 260
    FLOAT  shift, and go to state 261


State 243

  156 literal_convert: INT '(' ID '[' INT_LIT . ']' ')'

    ']'  shift, and go to state 262


State 244

   45 print_stmt: PRINT $@9 '(' expression ')' .

    $default  reduce using rule 45 (print_stmt)


State 245

   43 print_stmt: PRINTLN $@8 '(' expression ')' .

    $default  reduce using rule 43 (print_stmt)


State 246

   65 if_stmt: IF $@10 expression $@11 block . $@12 else_stmt

    $default  reduce using rule 64 ($@12)

    $@12  go to state 263


State 247

   74 for_stmt: FOR pure_arithmetic '{' $@15 stmts . '}'

    '}'  shift, and go to state 264


State 248

   79 for_expr: ident $@17 '>' int_literal .

    $default  reduce using rule 79 (for_expr)


State 249

   77 for_expr: ident assign $@16 ';' . comparsion_expression ';' incdec_stmt

    INT             shift, and go to state 2
    FLOAT           shift, and go to state 3
    LAND            shift, and go to state 4
    LOR             shift, and go to state 5
    TRUE            shift, and go to state 11
    FALSE           shift, and go to state 12
    INT_LIT         shift, and go to state 56
    SIGN_INT_LIT    shift, and go to state 14
    FLOAT_LIT       shift, and go to state 57
    SIGN_FLOAT_LIT  shift, and go to state 16
    ID              shift, and go to state 58
    '"'             shift, and go to state 18
    '('             shift, and go to state 19
    '!'             shift, and go to state 21

    INT             [reduce using rule 114 (expression)]
    FLOAT           [reduce using rule 114 (expression)]
    TRUE            [reduce using rule 114 (expression)]
    FALSE           [reduce using rule 114 (expression)]
    INT_LIT         [reduce using rule 114 (expression)]
    SIGN_INT_LIT    [reduce using rule 114 (expression)]
    FLOAT_LIT       [reduce using rule 114 (expression)]
    SIGN_FLOAT_LIT  [reduce using rule 114 (expression)]
    ID              [reduce using rule 114 (expression)]
    '"'             [reduce using rule 114 (expression)]
    '('             [reduce using rule 114 (expression)]
    '!'             [reduce using rule 114 (expression)]
    $default        reduce using rule 114 (expression)

    expression             go to state 265
    lor_expression         go to state 38
    land_expression        go to state 39
    comparsion_expression  go to state 266
    add_expression         go to state 41
    mul_expression         go to state 42
    operand                go to state 43
    term                   go to state 44
    bool                   go to state 60
    literal                go to state 61
    int_literal            go to state 62
    float_literal          go to state 63
    sign_literal           go to state 49
    string_literal         go to state 50
    literal_convert        go to state 51
    id_term                go to state 52


State 250

   72 for_stmt: FOR int_literal '{' $@14 stmts . '}'

    '}'  shift, and go to state 267


State 251

   70 for_stmt: FOR float_literal '{' $@13 stmts . '}'

    '}'  shift, and go to state 268


State 252

   26 declaration: ID '[' INT_LIT $@3 ']' . array_initial $@4 NEWLINE

    ADD_ASSIGN  shift, and go to state 98
    SUB_ASSIGN  shift, and go to state 99
    MUL_ASSIGN  shift, and go to state 100
    QUO_ASSIGN  shift, and go to state 101
    REM_ASSIGN  shift, and go to state 102
    '='         shift, and go to state 103

    $default  reduce using rule 32 (array_initial)

    array_initial  go to state 269
    assign         go to state 270
    error_assign   go to state 105


State 253

   30 declaration: ID '=' expression $@6 NEWLINE .

    $default  reduce using rule 30 (declaration)


State 254

  159 id_term: ID $@26 '[' expression ']' .

    $default  reduce using rule 159 (id_term)


State 255

  118 comparsion_expression: expression . '>' add_expression
  119                      | expression . '<' add_expression
  120                      | expression . GEQ add_expression
  121                      | expression . LEQ add_expression
  122                      | expression . EQL add_expression
  123                      | expression . NEQ add_expression
  124                      | expression . add_expression
  142 bool: '!' $@24 bool $@25 expression .

    INT             shift, and go to state 2
    FLOAT           shift, and go to state 3
    GEQ             shift, and go to state 106
    LEQ             shift, and go to state 107
    EQL             shift, and go to state 108
    NEQ             shift, and go to state 109
    TRUE            shift, and go to state 11
    FALSE           shift, and go to state 12
    INT_LIT         shift, and go to state 56
    SIGN_INT_LIT    shift, and go to state 14
    FLOAT_LIT       shift, and go to state 57
    SIGN_FLOAT_LIT  shift, and go to state 16
    ID              shift, and go to state 58
    '"'             shift, and go to state 18
    '('             shift, and go to state 19
    '>'             shift, and go to state 110
    '<'             shift, and go to state 111
    '!'             shift, and go to state 21

    INT             [reduce using rule 142 (bool)]
    FLOAT           [reduce using rule 142 (bool)]
    GEQ             [reduce using rule 142 (bool)]
    LEQ             [reduce using rule 142 (bool)]
    EQL             [reduce using rule 142 (bool)]
    NEQ             [reduce using rule 142 (bool)]
    TRUE            [reduce using rule 142 (bool)]
    FALSE           [reduce using rule 142 (bool)]
    INT_LIT         [reduce using rule 142 (bool)]
    SIGN_INT_LIT    [reduce using rule 142 (bool)]
    FLOAT_LIT       [reduce using rule 142 (bool)]
    SIGN_FLOAT_LIT  [reduce using rule 142 (bool)]
    ID              [reduce using rule 142 (bool)]
    '"'             [reduce using rule 142 (bool)]
    '('             [reduce using rule 142 (bool)]
    '>'             [reduce using rule 142 (bool)]
    '<'             [reduce using rule 142 (bool)]
    '!'             [reduce using rule 142 (bool)]
    $default        reduce using rule 142 (bool)

    add_expression   go to state 112
    mul_expression   go to state 42
    operand          go to state 43
    term             go to state 44
    bool             go to state 60
    literal          go to state 61
    int_literal      go to state 62
    float_literal    go to state 63
    sign_literal     go to state 49
    string_literal   go to state 50
    literal_convert  go to state 51
    id_term          go to state 52


State 256

   35 literal_initial: '=' literal .

    $default  reduce using rule 35 (literal_initial)


State 257

   17 declaration: VAR ID INT $@1 literal_initial NEWLINE .

    $default  reduce using rule 17 (declaration)


State 258

   20 declaration: VAR ID FLOAT $@2 literal_initial NEWLINE .

    $default  reduce using rule 20 (declaration)


State 259

   37 string_initial: '=' '"' STRING_LIT . '"' NEWLINE

    '"'  shift, and go to state 271


State 260

   22 declaration: VAR ID '[' INT_LIT ']' INT . NEWLINE

    NEWLINE  shift, and go to state 272


State 261

   23 declaration: VAR ID '[' INT_LIT ']' FLOAT . NEWLINE

    NEWLINE  shift, and go to state 273


State 262

  156 literal_convert: INT '(' ID '[' INT_LIT ']' . ')'

    ')'  shift, and go to state 274


State 263

   65 if_stmt: IF $@10 expression $@11 block $@12 . else_stmt

    ELSE  shift, and go to state 275

    $default  reduce using rule 68 (else_stmt)

    else_stmt  go to state 276


State 264

   74 for_stmt: FOR pure_arithmetic '{' $@15 stmts '}' .

    $default  reduce using rule 74 (for_stmt)


State 265

  118 comparsion_expression: expression . '>' add_expression
  119                      | expression . '<' add_expression
  120                      | expression . GEQ add_expression
  121                      | expression . LEQ add_expression
  122                      | expression . EQL add_expression
  123                      | expression . NEQ add_expression
  124                      | expression . add_expression

    INT             shift, and go to state 2
    FLOAT           shift, and go to state 3
    GEQ             shift, and go to state 106
    LEQ             shift, and go to state 107
    EQL             shift, and go to state 108
    NEQ             shift, and go to state 109
    TRUE            shift, and go to state 11
    FALSE           shift, and go to state 12
    INT_LIT         shift, and go to state 56
    SIGN_INT_LIT    shift, and go to state 14
    FLOAT_LIT       shift, and go to state 57
    SIGN_FLOAT_LIT  shift, and go to state 16
    ID              shift, and go to state 58
    '"'             shift, and go to state 18
    '('             shift, and go to state 19
    '>'             shift, and go to state 110
    '<'             shift, and go to state 111
    '!'             shift, and go to state 21

    add_expression   go to state 112
    mul_expression   go to state 42
    operand          go to state 43
    term             go to state 44
    bool             go to state 60
    literal          go to state 61
    int_literal      go to state 62
    float_literal    go to state 63
    sign_literal     go to state 49
    string_literal   go to state 50
    literal_convert  go to state 51
    id_term          go to state 52


State 266

   77 for_expr: ident assign $@16 ';' comparsion_expression . ';' incdec_stmt
  111 expression: comparsion_expression . expression

    INT             shift, and go to state 2
    FLOAT           shift, and go to state 3
    LAND            shift, and go to state 4
    LOR             shift, and go to state 5
    TRUE            shift, and go to state 11
    FALSE           shift, and go to state 12
    INT_LIT         shift, and go to state 56
    SIGN_INT_LIT    shift, and go to state 14
    FLOAT_LIT       shift, and go to state 57
    SIGN_FLOAT_LIT  shift, and go to state 16
    ID              shift, and go to state 58
    '"'             shift, and go to state 18
    '('             shift, and go to state 19
    ';'             shift, and go to state 277
    '!'             shift, and go to state 21

    INT             [reduce using rule 114 (expression)]
    FLOAT           [reduce using rule 114 (expression)]
    TRUE            [reduce using rule 114 (expression)]
    FALSE           [reduce using rule 114 (expression)]
    INT_LIT         [reduce using rule 114 (expression)]
    SIGN_INT_LIT    [reduce using rule 114 (expression)]
    FLOAT_LIT       [reduce using rule 114 (expression)]
    SIGN_FLOAT_LIT  [reduce using rule 114 (expression)]
    ID              [reduce using rule 114 (expression)]
    '"'             [reduce using rule 114 (expression)]
    '('             [reduce using rule 114 (expression)]
    '!'             [reduce using rule 114 (expression)]
    $default        reduce using rule 114 (expression)

    expression             go to state 114
    lor_expression         go to state 38
    land_expression        go to state 39
    comparsion_expression  go to state 40
    add_expression         go to state 41
    mul_expression         go to state 42
    operand                go to state 43
    term                   go to state 44
    bool                   go to state 60
    literal                go to state 61
    int_literal            go to state 62
    float_literal          go to state 63
    sign_literal           go to state 49
    string_literal         go to state 50
    literal_convert        go to state 51
    id_term                go to state 52


State 267

   72 for_stmt: FOR int_literal '{' $@14 stmts '}' .

    $default  reduce using rule 72 (for_stmt)


State 268

   70 for_stmt: FOR float_literal '{' $@13 stmts '}' .

    $default  reduce using rule 70 (for_stmt)


State 269

   26 declaration: ID '[' INT_LIT $@3 ']' array_initial . $@4 NEWLINE

    $default  reduce using rule 25 ($@4)

    $@4  go to state 278


State 270

   31 array_initial: assign .

    $default  reduce using rule 31 (array_initial)


State 271

   37 string_initial: '=' '"' STRING_LIT '"' . NEWLINE

    NEWLINE  shift, and go to state 279


State 272

   22 declaration: VAR ID '[' INT_LIT ']' INT NEWLINE .

    $default  reduce using rule 22 (declaration)


State 273

   23 declaration: VAR ID '[' INT_LIT ']' FLOAT NEWLINE .

    $default  reduce using rule 23 (declaration)


State 274

  156 literal_convert: INT '(' ID '[' INT_LIT ']' ')' .

    $default  reduce using rule 156 (literal_convert)


State 275

   66 else_stmt: ELSE . if_stmt
   67          | ELSE . block

    IF   shift, and go to state 9
    '{'  shift, and go to state 20

    if_stmt  go to state 280
    block    go to state 281


State 276

   65 if_stmt: IF $@10 expression $@11 block $@12 else_stmt .

    $default  reduce using rule 65 (if_stmt)


State 277

   77 for_expr: ident assign $@16 ';' comparsion_expression ';' . incdec_stmt

    ID  shift, and go to state 136

    incdec_stmt  go to state 282
    ident        go to state 283


State 278

   26 declaration: ID '[' INT_LIT $@3 ']' array_initial $@4 . NEWLINE

    NEWLINE  shift, and go to state 284


State 279

   37 string_initial: '=' '"' STRING_LIT '"' NEWLINE .

    $default  reduce using rule 37 (string_initial)


State 280

   66 else_stmt: ELSE if_stmt .

    $default  reduce using rule 66 (else_stmt)


State 281

   67 else_stmt: ELSE block .

    $default  reduce using rule 67 (else_stmt)


State 282

   77 for_expr: ident assign $@16 ';' comparsion_expression ';' incdec_stmt .

    $default  reduce using rule 77 (for_expr)


State 283

   40 incdec_stmt: ident . INC
   41            | ident . DEC

    INC  shift, and go to state 96
    DEC  shift, and go to state 97


State 284

   26 declaration: ID '[' INT_LIT $@3 ']' array_initial $@4 NEWLINE .

    $default  reduce using rule 26 (declaration)
